{
	"compiler": {
		"version": "0.8.22+commit.4fc1097e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "model",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "vim_number",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "company_name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "plate_number",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "creator",
						"type": "address"
					}
				],
				"name": "addBus",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "getBusData",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "model",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "vim_number",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "company_name",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "plate_number",
								"type": "string"
							},
							{
								"internalType": "enum DataStr.BusStatus",
								"name": "status",
								"type": "uint8"
							},
							{
								"internalType": "string",
								"name": "rejectNote",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "rejectBy",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "owner",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "creator",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "nftTokenId",
								"type": "uint256"
							}
						],
						"internalType": "struct DataStr.BusItem",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "busId",
						"type": "uint256"
					}
				],
				"name": "getBusStatus",
				"outputs": [
					{
						"internalType": "enum DataStr.BusStatus",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "enum DataStr.BusStatus",
						"name": "newStatus",
						"type": "uint8"
					},
					{
						"internalType": "string",
						"name": "note",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "updatedBy",
						"type": "address"
					}
				],
				"name": "updateBusStatus",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "busId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "nftTokenId",
						"type": "uint256"
					}
				],
				"name": "updateNft",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "updateOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Approval_Contracts/ICommonFunctions.sol": "ICommonFunctions"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Approval_Contracts/DataStr.sol": {
			"keccak256": "0x31ed98a01b251bb050725006be1dfa7f8acbb9d0422f553b4f8cbfe81a7b65b5",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://f73a7c3558cb7e8d570b28397e7e755c43ea3741ca4280ca99cc4a484279e149",
				"dweb:/ipfs/Qmar2HujipZjzpepZJBPFbXtJDcQoncfqF13xdDL5FP3L8"
			]
		},
		"contracts/Approval_Contracts/ICommonFunctions.sol": {
			"keccak256": "0xa7402829f826eb720866a69e158fc9b7e14b847525b6784a83bd7b1503f059fa",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://a9bc1d1d6986733110216126c0e9d61f77bc3fa8d5c1885d641af4be720a5c6c",
				"dweb:/ipfs/QmfDRjPfeTRKV3GCfGifeyBufuPSDxKrcE6JX3MQD9HUSb"
			]
		}
	},
	"version": 1
}