{
	"id": "4b2b685caa7bcc36ad4e4370c37c4755",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Approval_Contracts/BusNFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\r\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\r\nimport \"./AddressManager.sol\"; // Import the AddressManager contract interface\r\n\r\ncontract BusNft is ERC721URIStorage {\r\n    using Counters for Counters.Counter;\r\n    Counters.Counter private _nftTokenId;\r\n\r\n    address public addressManagerAddress;\r\n    mapping(uint256 => uint256) private busIdToTokenId; // Maps a bus ID to an NFT token ID\r\n    mapping(uint256 => uint256[]) private companyToTokenIds; // Maps a company ID to a list of NFT token IDs\r\n\r\n    constructor(address _addressManagerAddress) ERC721(\"BusNFT\", \"BUS\") {\r\n        addressManagerAddress = _addressManagerAddress;\r\n    }\r\n\r\n    modifier onlyGovernment() {\r\n        require(AddressManager(addressManagerAddress).isGovernmentAddressAllowed(msg.sender), \"Caller is not an authorized government.\");\r\n        _;\r\n    }\r\n\r\n    // Function to mint NFT for an approved bus and associate it with a company\r\n    function mintNFTForApprovedBus(address to, string memory tokenURI, uint256 busId, uint256 companyId) public onlyGovernment returns (uint256) {\r\n        _nftTokenId.increment();\r\n        uint256 newItemId = _nftTokenId.current();\r\n\r\n        _mint(to, newItemId);\r\n        _setTokenURI(newItemId, tokenURI);\r\n\r\n        // Store the mapping from busId to the new token ID\r\n        busIdToTokenId[busId] = newItemId;\r\n\r\n        // Associate the new token ID with the companyId\r\n        companyToTokenIds[companyId].push(newItemId);\r\n\r\n        return newItemId;\r\n    }\r\n\r\n    // Function to get the NFT token ID for an approved bus\r\n    function getNftForApprovedBus(uint256 busId) public view returns (uint256) {\r\n        require(busIdToTokenId[busId] != 0, \"No NFT for this bus\");\r\n        return busIdToTokenId[busId];\r\n    }\r\n\r\n    // Function to get NFTs associated with a company\r\n    function getNftsByCompany(uint256 companyId) public view returns (uint256[] memory) {\r\n        return companyToTokenIds[companyId];\r\n    }\r\n\r\n\r\n}\r\n"
			},
			"contracts/Approval_Contracts/AddressManager.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.2;\r\n\r\ncontract AddressManager {\r\n    address public owner;\r\n    mapping(address => bool) public companyAddresses;\r\n    mapping(address => bool) public coordinatorAddresses;\r\n    mapping(address => bool) public governmentAddresses;\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Only the owner can perform this action.\");\r\n        _;\r\n    }\r\n\r\n    // Company address management\r\n    function addCompanyAddress(address _address) public onlyOwner {\r\n        companyAddresses[_address] = true;\r\n    }\r\n\r\n    function removeCompanyAddress(address _address) public onlyOwner {\r\n        companyAddresses[_address] = false;\r\n    }\r\n\r\n    function isCompanyAddressAllowed(address _address) public view returns (bool) {\r\n        return companyAddresses[_address];\r\n    }\r\n\r\n    // Coordinator address management\r\n    function addCoordinatorAddress(address _address) public onlyOwner {\r\n        coordinatorAddresses[_address] = true;\r\n    }\r\n\r\n    function removeCoordinatorAddress(address _address) public onlyOwner {\r\n        coordinatorAddresses[_address] = false;\r\n    }\r\n\r\n    function isCoordinatorAddressAllowed(address _address) public view returns (bool) {\r\n        return coordinatorAddresses[_address];\r\n    }\r\n\r\n    // Government address management\r\n    function addGovernmentAddress(address _address) public onlyOwner {\r\n        governmentAddresses[_address] = true;\r\n    }\r\n\r\n    function removeGovernmentAddress(address _address) public onlyOwner {\r\n        governmentAddresses[_address] = false;\r\n    }\r\n\r\n    function isGovernmentAddressAllowed(address _address) public view returns (bool) {\r\n        return governmentAddresses[_address];\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"IERC4906": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "EIP-721 Metadata Update Extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 201,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 203,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 207,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 211,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 215,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 221,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ERC721URIStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 201,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 203,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 207,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 211,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 215,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 221,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1340,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122031483c70b1f77f2defabe845c3dbea0cdd3580c566293924222a7cbf5a5fc0e264736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122031483c70b1f77f2defabe845c3dbea0cdd3580c566293924222a7cbf5a5fc0e264736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE BASEFEE EXTCODECOPY PUSH17 0xB1F77F2DEFABE845C3DBEA0CDD3580C566 0x29 CODECOPY 0x24 0x22 0x2A PUSH29 0xBF5A5FC0E264736F6C6343000816003300000000000000000000000000 ",
							"sourceMap": "424:971:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122031483c70b1f77f2defabe845c3dbea0cdd3580c566293924222a7cbf5a5fc0e264736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE BASEFEE EXTCODECOPY PUSH17 0xB1F77F2DEFABE845C3DBEA0CDD3580C566 0x29 CODECOPY 0x24 0x22 0x2A PUSH29 0xBF5A5FC0E264736F6C6343000816003300000000000000000000000000 ",
							"sourceMap": "424:971:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122031483c70b1f77f2defabe845c3dbea0cdd3580c566293924222a7cbf5a5fc0e264736f6c63430008160033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Approval_Contracts/AddressManager.sol",
								"contracts/Approval_Contracts/BusNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C PUSH22 0x84B6A38E353DC92FE4869A4BAAA25214F6DBE08EB5BD 0xDA SWAP2 CALLDATACOPY 0x4E TIMESTAMP PUSH24 0x352A64736F6C634300081600330000000000000000000000 ",
							"sourceMap": "251:2847:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C PUSH22 0x84B6A38E353DC92FE4869A4BAAA25214F6DBE08EB5BD 0xDA SWAP2 CALLDATACOPY 0x4E TIMESTAMP PUSH24 0x352A64736F6C634300081600330000000000000000000000 ",
							"sourceMap": "251:2847:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Approval_Contracts/AddressManager.sol",
								"contracts/Approval_Contracts/BusNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0x4B SUB LT PUSH26 0x118EE086B8E724E4100BD9DAAA7591B2D4B433CD795F53CD545 0xDF PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "203:14914:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0x4B SUB LT PUSH26 0x118EE086B8E724E4100BD9DAAA7591B2D4B433CD795F53CD545 0xDF PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "203:14914:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Approval_Contracts/AddressManager.sol",
								"contracts/Approval_Contracts/BusNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY SWAP12 0x28 0xAB SWAP7 SWAP8 0x2C 0xAB PUSH31 0x8078502BACDCAC7F4CDCD0908F5518AF7BC602CD74350864736F6C63430008 AND STOP CALLER ",
							"sourceMap": "216:1047:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY SWAP12 0x28 0xAB SWAP7 SWAP8 0x2C 0xAB PUSH31 0x8078502BACDCAC7F4CDCD0908F5518AF7BC602CD74350864736F6C63430008 AND STOP CALLER ",
							"sourceMap": "216:1047:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Approval_Contracts/AddressManager.sol",
								"contracts/Approval_Contracts/BusNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Approval_Contracts/AddressManager.sol": {
				"AddressManager": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "addCompanyAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "addCoordinatorAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "addGovernmentAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "companyAddresses",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "coordinatorAddresses",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "governmentAddresses",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "isCompanyAddressAllowed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "isCoordinatorAddressAllowed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "isGovernmentAddressAllowed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "removeCompanyAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "removeCoordinatorAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "removeGovernmentAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Approval_Contracts/AddressManager.sol\":64:1793  contract AddressManager {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Approval_Contracts/AddressManager.sol\":296:347  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Approval_Contracts/AddressManager.sol\":329:339  msg.sender */\n  caller\n    /* \"contracts/Approval_Contracts/AddressManager.sol\":321:326  owner */\n  0x00\n  dup1\n    /* \"contracts/Approval_Contracts/AddressManager.sol\":321:339  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Approval_Contracts/AddressManager.sol\":64:1793  contract AddressManager {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":64:1793  contract AddressManager {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc5072a31\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xdbba103a\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xdbba103a\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xe0f9433d\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xead7934f\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xfd8cdd32\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0xc5072a31\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xcd33c38f\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xd582ccac\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x0694316b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0a7c358d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x43292f6e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4b86bd3d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x504b19cb\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":946:1068  function addCoordinatorAddress(address _address) public onlyOwner {... */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      stop\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":521:635  function addCompanyAddress(address _address) public onlyOwner {... */\n    tag_4:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_23:\n      tag_24\n      jump\t// in\n    tag_22:\n      stop\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":643:761  function removeCompanyAddress(address _address) public onlyOwner {... */\n    tag_5:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_26:\n      tag_27\n      jump\t// in\n    tag_25:\n      stop\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1210:1348  function isCoordinatorAddressAllowed(address _address) public view returns (bool) {... */\n    tag_6:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_29:\n      tag_30\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":177:229  mapping(address => bool) public coordinatorAddresses */\n    tag_7:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_34:\n      tag_35\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":95:115  address public owner */\n    tag_8:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1394:1514  function addGovernmentAddress(address _address) public onlyOwner {... */\n    tag_9:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      stop\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":236:287  mapping(address => bool) public governmentAddresses */\n    tag_10:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1522:1646  function removeGovernmentAddress(address _address) public onlyOwner {... */\n    tag_11:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      stop\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":769:899  function isCompanyAddressAllowed(address _address) public view returns (bool) {... */\n    tag_12:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1076:1202  function removeCoordinatorAddress(address _address) public onlyOwner {... */\n    tag_13:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":122:170  mapping(address => bool) public companyAddresses */\n    tag_14:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1654:1790  function isGovernmentAddressAllowed(address _address) public view returns (bool) {... */\n    tag_15:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":946:1068  function addCoordinatorAddress(address _address) public onlyOwner {... */\n    tag_21:\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":409:414  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":395:414  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":395:405  msg.sender */\n      caller\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":395:414  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":387:458  require(msg.sender == owner, \"Only the owner can perform this action.\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1056:1060  true */\n      0x01\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1023:1043  coordinatorAddresses */\n      0x02\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1023:1053  coordinatorAddresses[_address] */\n      0x00\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1044:1052  _address */\n      dup4\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1023:1053  coordinatorAddresses[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1023:1060  coordinatorAddresses[_address] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":946:1068  function addCoordinatorAddress(address _address) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":521:635  function addCompanyAddress(address _address) public onlyOwner {... */\n    tag_24:\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":409:414  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":395:414  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":395:405  msg.sender */\n      caller\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":395:414  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":387:458  require(msg.sender == owner, \"Only the owner can perform this action.\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_69\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_72:\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":623:627  true */\n      0x01\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":594:610  companyAddresses */\n      dup1\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":594:620  companyAddresses[_address] */\n      0x00\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":611:619  _address */\n      dup4\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":594:620  companyAddresses[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":594:627  companyAddresses[_address] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":521:635  function addCompanyAddress(address _address) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":643:761  function removeCompanyAddress(address _address) public onlyOwner {... */\n    tag_27:\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":409:414  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":395:414  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":395:405  msg.sender */\n      caller\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":395:414  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":387:458  require(msg.sender == owner, \"Only the owner can perform this action.\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap1\n      tag_69\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":748:753  false */\n      0x00\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":719:735  companyAddresses */\n      0x01\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":719:745  companyAddresses[_address] */\n      0x00\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":736:744  _address */\n      dup4\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":719:745  companyAddresses[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":719:753  companyAddresses[_address] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":643:761  function removeCompanyAddress(address _address) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1210:1348  function isCoordinatorAddressAllowed(address _address) public view returns (bool) {... */\n    tag_30:\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1286:1290  bool */\n      0x00\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1310:1330  coordinatorAddresses */\n      0x02\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1310:1340  coordinatorAddresses[_address] */\n      0x00\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1331:1339  _address */\n      dup4\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1310:1340  coordinatorAddresses[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1303:1340  return coordinatorAddresses[_address] */\n      swap1\n      pop\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1210:1348  function isCoordinatorAddressAllowed(address _address) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":177:229  mapping(address => bool) public coordinatorAddresses */\n    tag_35:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":95:115  address public owner */\n    tag_38:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1394:1514  function addGovernmentAddress(address _address) public onlyOwner {... */\n    tag_43:\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":409:414  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":395:414  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":395:405  msg.sender */\n      caller\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":395:414  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":387:458  require(msg.sender == owner, \"Only the owner can perform this action.\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_69\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1502:1506  true */\n      0x01\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1470:1489  governmentAddresses */\n      0x03\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1470:1499  governmentAddresses[_address] */\n      0x00\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1490:1498  _address */\n      dup4\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1470:1499  governmentAddresses[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1470:1506  governmentAddresses[_address] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1394:1514  function addGovernmentAddress(address _address) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":236:287  mapping(address => bool) public governmentAddresses */\n    tag_46:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1522:1646  function removeGovernmentAddress(address _address) public onlyOwner {... */\n    tag_50:\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":409:414  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":395:414  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":395:405  msg.sender */\n      caller\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":395:414  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":387:458  require(msg.sender == owner, \"Only the owner can perform this action.\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap1\n      tag_69\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1633:1638  false */\n      0x00\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1601:1620  governmentAddresses */\n      0x03\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1601:1630  governmentAddresses[_address] */\n      0x00\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1621:1629  _address */\n      dup4\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1601:1630  governmentAddresses[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1601:1638  governmentAddresses[_address] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1522:1646  function removeGovernmentAddress(address _address) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":769:899  function isCompanyAddressAllowed(address _address) public view returns (bool) {... */\n    tag_53:\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":841:845  bool */\n      0x00\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":865:881  companyAddresses */\n      0x01\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":865:891  companyAddresses[_address] */\n      0x00\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":882:890  _address */\n      dup4\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":865:891  companyAddresses[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":858:891  return companyAddresses[_address] */\n      swap1\n      pop\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":769:899  function isCompanyAddressAllowed(address _address) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1076:1202  function removeCoordinatorAddress(address _address) public onlyOwner {... */\n    tag_57:\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":409:414  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":395:414  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":395:405  msg.sender */\n      caller\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":395:414  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":387:458  require(msg.sender == owner, \"Only the owner can perform this action.\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_69\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1189:1194  false */\n      0x00\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1156:1176  coordinatorAddresses */\n      0x02\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1156:1186  coordinatorAddresses[_address] */\n      0x00\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1177:1185  _address */\n      dup4\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1156:1186  coordinatorAddresses[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1156:1194  coordinatorAddresses[_address] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1076:1202  function removeCoordinatorAddress(address _address) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":122:170  mapping(address => bool) public companyAddresses */\n    tag_60:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1654:1790  function isGovernmentAddressAllowed(address _address) public view returns (bool) {... */\n    tag_64:\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1729:1733  bool */\n      0x00\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1753:1772  governmentAddresses */\n      0x03\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1753:1782  governmentAddresses[_address] */\n      0x00\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1773:1781  _address */\n      dup4\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1753:1782  governmentAddresses[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1746:1782  return governmentAddresses[_address] */\n      swap1\n      pop\n        /* \"contracts/Approval_Contracts/AddressManager.sol\":1654:1790  function isGovernmentAddressAllowed(address _address) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_95:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_97:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_98:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_113\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_97\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_99:\n        /* \"#utility.yul\":641:665   */\n      tag_115\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_98\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_116\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_116:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_100:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_118\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_99\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_20:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_120\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_121\n      tag_95\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":917:1036   */\n    tag_120:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_122\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_100\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1266   */\n    tag_101:\n        /* \"#utility.yul\":1210:1217   */\n      0x00\n        /* \"#utility.yul\":1253:1258   */\n      dup2\n        /* \"#utility.yul\":1246:1259   */\n      iszero\n        /* \"#utility.yul\":1239:1260   */\n      iszero\n        /* \"#utility.yul\":1228:1260   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1272:1381   */\n    tag_102:\n        /* \"#utility.yul\":1353:1374   */\n      tag_125\n        /* \"#utility.yul\":1368:1373   */\n      dup2\n        /* \"#utility.yul\":1353:1374   */\n      tag_101\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":1348:1351   */\n      dup3\n        /* \"#utility.yul\":1341:1375   */\n      mstore\n        /* \"#utility.yul\":1272:1381   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1597   */\n    tag_32:\n        /* \"#utility.yul\":1474:1478   */\n      0x00\n        /* \"#utility.yul\":1512:1514   */\n      0x20\n        /* \"#utility.yul\":1501:1510   */\n      dup3\n        /* \"#utility.yul\":1497:1515   */\n      add\n        /* \"#utility.yul\":1489:1515   */\n      swap1\n      pop\n        /* \"#utility.yul\":1525:1590   */\n      tag_127\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1576:1585   */\n      dup4\n        /* \"#utility.yul\":1572:1589   */\n      add\n        /* \"#utility.yul\":1563:1569   */\n      dup5\n        /* \"#utility.yul\":1525:1590   */\n      tag_102\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":1387:1597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1603:1721   */\n    tag_103:\n        /* \"#utility.yul\":1690:1714   */\n      tag_129\n        /* \"#utility.yul\":1708:1713   */\n      dup2\n        /* \"#utility.yul\":1690:1714   */\n      tag_98\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":1685:1688   */\n      dup3\n        /* \"#utility.yul\":1678:1715   */\n      mstore\n        /* \"#utility.yul\":1603:1721   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1727:1949   */\n    tag_40:\n        /* \"#utility.yul\":1820:1824   */\n      0x00\n        /* \"#utility.yul\":1858:1860   */\n      0x20\n        /* \"#utility.yul\":1847:1856   */\n      dup3\n        /* \"#utility.yul\":1843:1861   */\n      add\n        /* \"#utility.yul\":1835:1861   */\n      swap1\n      pop\n        /* \"#utility.yul\":1871:1942   */\n      tag_131\n        /* \"#utility.yul\":1939:1940   */\n      0x00\n        /* \"#utility.yul\":1928:1937   */\n      dup4\n        /* \"#utility.yul\":1924:1941   */\n      add\n        /* \"#utility.yul\":1915:1921   */\n      dup5\n        /* \"#utility.yul\":1871:1942   */\n      tag_103\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":1727:1949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1955:2124   */\n    tag_104:\n        /* \"#utility.yul\":2039:2050   */\n      0x00\n        /* \"#utility.yul\":2073:2079   */\n      dup3\n        /* \"#utility.yul\":2068:2071   */\n      dup3\n        /* \"#utility.yul\":2061:2080   */\n      mstore\n        /* \"#utility.yul\":2113:2117   */\n      0x20\n        /* \"#utility.yul\":2108:2111   */\n      dup3\n        /* \"#utility.yul\":2104:2118   */\n      add\n        /* \"#utility.yul\":2089:2118   */\n      swap1\n      pop\n        /* \"#utility.yul\":1955:2124   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2130:2356   */\n    tag_105:\n        /* \"#utility.yul\":2270:2304   */\n      0x4f6e6c7920746865206f776e65722063616e20706572666f726d207468697320\n        /* \"#utility.yul\":2266:2267   */\n      0x00\n        /* \"#utility.yul\":2258:2264   */\n      dup3\n        /* \"#utility.yul\":2254:2268   */\n      add\n        /* \"#utility.yul\":2247:2305   */\n      mstore\n        /* \"#utility.yul\":2339:2348   */\n      0x616374696f6e2e00000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2334:2336   */\n      0x20\n        /* \"#utility.yul\":2326:2332   */\n      dup3\n        /* \"#utility.yul\":2322:2337   */\n      add\n        /* \"#utility.yul\":2315:2349   */\n      mstore\n        /* \"#utility.yul\":2130:2356   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2362:2728   */\n    tag_106:\n        /* \"#utility.yul\":2504:2507   */\n      0x00\n        /* \"#utility.yul\":2525:2592   */\n      tag_135\n        /* \"#utility.yul\":2589:2591   */\n      0x27\n        /* \"#utility.yul\":2584:2587   */\n      dup4\n        /* \"#utility.yul\":2525:2592   */\n      tag_104\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":2518:2592   */\n      swap2\n      pop\n        /* \"#utility.yul\":2601:2694   */\n      tag_136\n        /* \"#utility.yul\":2690:2693   */\n      dup3\n        /* \"#utility.yul\":2601:2694   */\n      tag_105\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":2719:2721   */\n      0x40\n        /* \"#utility.yul\":2714:2717   */\n      dup3\n        /* \"#utility.yul\":2710:2722   */\n      add\n        /* \"#utility.yul\":2703:2722   */\n      swap1\n      pop\n        /* \"#utility.yul\":2362:2728   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2734:3153   */\n    tag_69:\n        /* \"#utility.yul\":2900:2904   */\n      0x00\n        /* \"#utility.yul\":2938:2940   */\n      0x20\n        /* \"#utility.yul\":2927:2936   */\n      dup3\n        /* \"#utility.yul\":2923:2941   */\n      add\n        /* \"#utility.yul\":2915:2941   */\n      swap1\n      pop\n        /* \"#utility.yul\":2987:2996   */\n      dup2\n        /* \"#utility.yul\":2981:2985   */\n      dup2\n        /* \"#utility.yul\":2977:2997   */\n      sub\n        /* \"#utility.yul\":2973:2974   */\n      0x00\n        /* \"#utility.yul\":2962:2971   */\n      dup4\n        /* \"#utility.yul\":2958:2975   */\n      add\n        /* \"#utility.yul\":2951:2998   */\n      mstore\n        /* \"#utility.yul\":3015:3146   */\n      tag_138\n        /* \"#utility.yul\":3141:3145   */\n      dup2\n        /* \"#utility.yul\":3015:3146   */\n      tag_106\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":3007:3146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2734:3153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220568b23f0822162f66cdd80c662cd6edd3aaa95ffe9273ef22f4bcdc27bd1bce964736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3045": {
									"entryPoint": null,
									"id": 3045,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610b398061005c5f395ff3fe608060405234801561000f575f80fd5b50600436106100cd575f3560e01c8063c5072a311161008a578063dbba103a11610064578063dbba103a1461020b578063e0f9433d1461023b578063ead7934f14610257578063fd8cdd3214610287576100cd565b8063c5072a31146101a3578063cd33c38f146101bf578063d582ccac146101ef576100cd565b80630694316b146100d15780630a7c358d146100ed57806343292f6e146101095780634b86bd3d14610125578063504b19cb146101555780638da5cb5b14610185575b5f80fd5b6100eb60048036038101906100e691906109df565b6102b7565b005b610107600480360381019061010291906109df565b61039c565b005b610123600480360381019061011e91906109df565b610480565b005b61013f600480360381019061013a91906109df565b610564565b60405161014c9190610a24565b60405180910390f35b61016f600480360381019061016a91906109df565b6105b6565b60405161017c9190610a24565b60405180910390f35b61018d6105d3565b60405161019a9190610a4c565b60405180910390f35b6101bd60048036038101906101b891906109df565b6105f6565b005b6101d960048036038101906101d491906109df565b6106db565b6040516101e69190610a24565b60405180910390f35b610209600480360381019061020491906109df565b6106f8565b005b610225600480360381019061022091906109df565b6107dc565b6040516102329190610a24565b60405180910390f35b610255600480360381019061025091906109df565b61082e565b005b610271600480360381019061026c91906109df565b610912565b60405161027e9190610a24565b60405180910390f35b6102a1600480360381019061029c91906109df565b61092f565b6040516102ae9190610a24565b60405180910390f35b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610344576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033b90610ae5565b60405180910390fd5b600160025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610429576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042090610ae5565b60405180910390fd5b6001805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461050d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050490610ae5565b60405180910390fd5b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b6002602052805f5260405f205f915054906101000a900460ff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610683576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067a90610ae5565b60405180910390fd5b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b6003602052805f5260405f205f915054906101000a900460ff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610785576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077c90610ae5565b60405180910390fd5b5f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b290610ae5565b60405180910390fd5b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b6001602052805f5260405f205f915054906101000a900460ff1681565b5f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6109ae82610985565b9050919050565b6109be816109a4565b81146109c8575f80fd5b50565b5f813590506109d9816109b5565b92915050565b5f602082840312156109f4576109f3610981565b5b5f610a01848285016109cb565b91505092915050565b5f8115159050919050565b610a1e81610a0a565b82525050565b5f602082019050610a375f830184610a15565b92915050565b610a46816109a4565b82525050565b5f602082019050610a5f5f830184610a3d565b92915050565b5f82825260208201905092915050565b7f4f6e6c7920746865206f776e65722063616e20706572666f726d2074686973205f8201527f616374696f6e2e00000000000000000000000000000000000000000000000000602082015250565b5f610acf602783610a65565b9150610ada82610a75565b604082019050919050565b5f6020820190508181035f830152610afc81610ac3565b905091905056fea2646970667358221220568b23f0822162f66cdd80c662cd6edd3aaa95ffe9273ef22f4bcdc27bd1bce964736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xB39 DUP1 PUSH2 0x5C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC5072A31 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xDBBA103A GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDBBA103A EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0xE0F9433D EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xEAD7934F EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xFD8CDD32 EQ PUSH2 0x287 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0xC5072A31 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0xCD33C38F EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xD582CCAC EQ PUSH2 0x1EF JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x694316B EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0xA7C358D EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x43292F6E EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x4B86BD3D EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x504B19CB EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x185 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x2B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x107 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x102 SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x39C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x123 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x480 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x564 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x5B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17C SWAP2 SWAP1 PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18D PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19A SWAP2 SWAP1 PUSH2 0xA4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x5F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x6DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x6F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x232 SWAP2 SWAP1 PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x82E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x912 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x92F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x344 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33B SWAP1 PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x429 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x420 SWAP1 PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x504 SWAP1 PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67A SWAP1 PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x785 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77C SWAP1 PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B2 SWAP1 PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9AE DUP3 PUSH2 0x985 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9BE DUP2 PUSH2 0x9A4 JUMP JUMPDEST DUP2 EQ PUSH2 0x9C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9D9 DUP2 PUSH2 0x9B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F4 JUMPI PUSH2 0x9F3 PUSH2 0x981 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA01 DUP5 DUP3 DUP6 ADD PUSH2 0x9CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA1E DUP2 PUSH2 0xA0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA37 PUSH0 DUP4 ADD DUP5 PUSH2 0xA15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA46 DUP2 PUSH2 0x9A4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA5F PUSH0 DUP4 ADD DUP5 PUSH2 0xA3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C7920746865206F776E65722063616E20706572666F726D207468697320 PUSH0 DUP3 ADD MSTORE PUSH32 0x616374696F6E2E00000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xACF PUSH1 0x27 DUP4 PUSH2 0xA65 JUMP JUMPDEST SWAP2 POP PUSH2 0xADA DUP3 PUSH2 0xA75 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAFC DUP2 PUSH2 0xAC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP DUP12 0x23 CREATE DUP3 0x21 PUSH3 0xF66CDD DUP1 0xC6 PUSH3 0xCD6EDD GASPRICE 0xAA SWAP6 SELFDESTRUCT 0xE9 0x27 RETURNDATACOPY CALLCODE 0x2F 0x4B 0xCD 0xC2 PUSH28 0xD1BCE964736F6C634300081600330000000000000000000000000000 ",
							"sourceMap": "64:1729:16:-:0;;;296:51;;;;;;;;;;329:10;321:5;;:18;;;;;;;;;;;;;;;;;;64:1729;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@addCompanyAddress_3071": {
									"entryPoint": 924,
									"id": 3071,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addCoordinatorAddress_3111": {
									"entryPoint": 695,
									"id": 3111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addGovernmentAddress_3151": {
									"entryPoint": 1526,
									"id": 3151,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@companyAddresses_3028": {
									"entryPoint": 2322,
									"id": 3028,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@coordinatorAddresses_3032": {
									"entryPoint": 1462,
									"id": 3032,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@governmentAddresses_3036": {
									"entryPoint": 1755,
									"id": 3036,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isCompanyAddressAllowed_3097": {
									"entryPoint": 2012,
									"id": 3097,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isCoordinatorAddressAllowed_3137": {
									"entryPoint": 1380,
									"id": 3137,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isGovernmentAddressAllowed_3177": {
									"entryPoint": 2351,
									"id": 3177,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_3024": {
									"entryPoint": 1491,
									"id": 3024,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@removeCompanyAddress_3085": {
									"entryPoint": 1152,
									"id": 3085,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@removeCoordinatorAddress_3125": {
									"entryPoint": 2094,
									"id": 3125,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@removeGovernmentAddress_3165": {
									"entryPoint": 1784,
									"id": 3165,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_b31fadb2896749f550dcf78218e622fcf1aec8c63dbb39a49eb9b7a87ed790a6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2755,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b31fadb2896749f550dcf78218e622fcf1aec8c63dbb39a49eb9b7a87ed790a6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2433,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_b31fadb2896749f550dcf78218e622fcf1aec8c63dbb39a49eb9b7a87ed790a6": {
									"entryPoint": 2677,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3156:18",
										"nodeType": "YulBlock",
										"src": "0:3156:18",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:18",
													"nodeType": "YulBlock",
													"src": "47:35:18",
													"statements": [
														{
															"nativeSrc": "57:19:18",
															"nodeType": "YulAssignment",
															"src": "57:19:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:18",
																		"nodeType": "YulLiteral",
																		"src": "73:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:18"
																},
																"nativeSrc": "67:9:18",
																"nodeType": "YulFunctionCall",
																"src": "67:9:18"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:18"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:18",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:18",
														"nodeType": "YulTypedName",
														"src": "40:6:18",
														"type": ""
													}
												],
												"src": "7:75:18"
											},
											{
												"body": {
													"nativeSrc": "177:28:18",
													"nodeType": "YulBlock",
													"src": "177:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:18",
																		"nodeType": "YulLiteral",
																		"src": "194:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:18",
																		"nodeType": "YulLiteral",
																		"src": "197:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:18"
																},
																"nativeSrc": "187:12:18",
																"nodeType": "YulFunctionCall",
																"src": "187:12:18"
															},
															"nativeSrc": "187:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:18"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:18"
											},
											{
												"body": {
													"nativeSrc": "300:28:18",
													"nodeType": "YulBlock",
													"src": "300:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:18",
																		"nodeType": "YulLiteral",
																		"src": "317:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:18",
																		"nodeType": "YulLiteral",
																		"src": "320:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:18"
																},
																"nativeSrc": "310:12:18",
																"nodeType": "YulFunctionCall",
																"src": "310:12:18"
															},
															"nativeSrc": "310:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:18"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:18"
											},
											{
												"body": {
													"nativeSrc": "379:81:18",
													"nodeType": "YulBlock",
													"src": "379:81:18",
													"statements": [
														{
															"nativeSrc": "389:65:18",
															"nodeType": "YulAssignment",
															"src": "389:65:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:18",
																		"nodeType": "YulLiteral",
																		"src": "411:42:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:18"
																},
																"nativeSrc": "400:54:18",
																"nodeType": "YulFunctionCall",
																"src": "400:54:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:18",
														"nodeType": "YulTypedName",
														"src": "361:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:18",
														"nodeType": "YulTypedName",
														"src": "371:7:18",
														"type": ""
													}
												],
												"src": "334:126:18"
											},
											{
												"body": {
													"nativeSrc": "511:51:18",
													"nodeType": "YulBlock",
													"src": "511:51:18",
													"statements": [
														{
															"nativeSrc": "521:35:18",
															"nodeType": "YulAssignment",
															"src": "521:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:18"
																},
																"nativeSrc": "532:24:18",
																"nodeType": "YulFunctionCall",
																"src": "532:24:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:18",
														"nodeType": "YulTypedName",
														"src": "493:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:18",
														"nodeType": "YulTypedName",
														"src": "503:7:18",
														"type": ""
													}
												],
												"src": "466:96:18"
											},
											{
												"body": {
													"nativeSrc": "611:79:18",
													"nodeType": "YulBlock",
													"src": "611:79:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:18",
																"nodeType": "YulBlock",
																"src": "668:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:18",
																					"nodeType": "YulLiteral",
																					"src": "677:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:18",
																					"nodeType": "YulLiteral",
																					"src": "680:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:18"
																			},
																			"nativeSrc": "670:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:18"
																		},
																		"nativeSrc": "670:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:18"
																				},
																				"nativeSrc": "641:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:18"
																		},
																		"nativeSrc": "631:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:18"
																},
																"nativeSrc": "624:43:18",
																"nodeType": "YulFunctionCall",
																"src": "624:43:18"
															},
															"nativeSrc": "621:63:18",
															"nodeType": "YulIf",
															"src": "621:63:18"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:18",
														"nodeType": "YulTypedName",
														"src": "604:5:18",
														"type": ""
													}
												],
												"src": "568:122:18"
											},
											{
												"body": {
													"nativeSrc": "748:87:18",
													"nodeType": "YulBlock",
													"src": "748:87:18",
													"statements": [
														{
															"nativeSrc": "758:29:18",
															"nodeType": "YulAssignment",
															"src": "758:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:18"
																},
																"nativeSrc": "767:20:18",
																"nodeType": "YulFunctionCall",
																"src": "767:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:18"
																},
																"nativeSrc": "796:33:18",
																"nodeType": "YulFunctionCall",
																"src": "796:33:18"
															},
															"nativeSrc": "796:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:18"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:18",
														"nodeType": "YulTypedName",
														"src": "726:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:18",
														"nodeType": "YulTypedName",
														"src": "734:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:18",
														"nodeType": "YulTypedName",
														"src": "742:5:18",
														"type": ""
													}
												],
												"src": "696:139:18"
											},
											{
												"body": {
													"nativeSrc": "907:263:18",
													"nodeType": "YulBlock",
													"src": "907:263:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:18",
																"nodeType": "YulBlock",
																"src": "953:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:18"
																			},
																			"nativeSrc": "955:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:18"
																		},
																		"nativeSrc": "955:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:18"
																		},
																		"nativeSrc": "924:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:18",
																		"nodeType": "YulLiteral",
																		"src": "949:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:18"
																},
																"nativeSrc": "920:32:18",
																"nodeType": "YulFunctionCall",
																"src": "920:32:18"
															},
															"nativeSrc": "917:119:18",
															"nodeType": "YulIf",
															"src": "917:119:18"
														},
														{
															"nativeSrc": "1046:117:18",
															"nodeType": "YulBlock",
															"src": "1046:117:18",
															"statements": [
																{
																	"nativeSrc": "1061:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:18",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:18",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:18"
																				},
																				"nativeSrc": "1121:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:18"
																		},
																		"nativeSrc": "1100:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:18",
														"nodeType": "YulTypedName",
														"src": "877:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:18",
														"nodeType": "YulTypedName",
														"src": "888:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:18",
														"nodeType": "YulTypedName",
														"src": "900:6:18",
														"type": ""
													}
												],
												"src": "841:329:18"
											},
											{
												"body": {
													"nativeSrc": "1218:48:18",
													"nodeType": "YulBlock",
													"src": "1218:48:18",
													"statements": [
														{
															"nativeSrc": "1228:32:18",
															"nodeType": "YulAssignment",
															"src": "1228:32:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1253:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1253:5:18"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1246:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "1246:6:18"
																		},
																		"nativeSrc": "1246:13:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1246:13:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1239:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:18"
																},
																"nativeSrc": "1239:21:18",
																"nodeType": "YulFunctionCall",
																"src": "1239:21:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1228:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "1228:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1176:90:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1200:5:18",
														"nodeType": "YulTypedName",
														"src": "1200:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1210:7:18",
														"nodeType": "YulTypedName",
														"src": "1210:7:18",
														"type": ""
													}
												],
												"src": "1176:90:18"
											},
											{
												"body": {
													"nativeSrc": "1331:50:18",
													"nodeType": "YulBlock",
													"src": "1331:50:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1348:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "1348:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1368:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1368:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1353:14:18",
																			"nodeType": "YulIdentifier",
																			"src": "1353:14:18"
																		},
																		"nativeSrc": "1353:21:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1353:21:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1341:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1341:6:18"
																},
																"nativeSrc": "1341:34:18",
																"nodeType": "YulFunctionCall",
																"src": "1341:34:18"
															},
															"nativeSrc": "1341:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "1341:34:18"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1272:109:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1319:5:18",
														"nodeType": "YulTypedName",
														"src": "1319:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1326:3:18",
														"nodeType": "YulTypedName",
														"src": "1326:3:18",
														"type": ""
													}
												],
												"src": "1272:109:18"
											},
											{
												"body": {
													"nativeSrc": "1479:118:18",
													"nodeType": "YulBlock",
													"src": "1479:118:18",
													"statements": [
														{
															"nativeSrc": "1489:26:18",
															"nodeType": "YulAssignment",
															"src": "1489:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1501:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1501:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1512:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1512:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1497:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1497:3:18"
																},
																"nativeSrc": "1497:18:18",
																"nodeType": "YulFunctionCall",
																"src": "1497:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1489:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "1489:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1563:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1563:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1576:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1576:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1587:1:18",
																				"nodeType": "YulLiteral",
																				"src": "1587:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1572:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1572:3:18"
																		},
																		"nativeSrc": "1572:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1572:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1525:37:18",
																	"nodeType": "YulIdentifier",
																	"src": "1525:37:18"
																},
																"nativeSrc": "1525:65:18",
																"nodeType": "YulFunctionCall",
																"src": "1525:65:18"
															},
															"nativeSrc": "1525:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "1525:65:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1387:210:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1451:9:18",
														"nodeType": "YulTypedName",
														"src": "1451:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1463:6:18",
														"nodeType": "YulTypedName",
														"src": "1463:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1474:4:18",
														"nodeType": "YulTypedName",
														"src": "1474:4:18",
														"type": ""
													}
												],
												"src": "1387:210:18"
											},
											{
												"body": {
													"nativeSrc": "1668:53:18",
													"nodeType": "YulBlock",
													"src": "1668:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1685:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "1685:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1708:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1708:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1690:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "1690:17:18"
																		},
																		"nativeSrc": "1690:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1690:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1678:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1678:6:18"
																},
																"nativeSrc": "1678:37:18",
																"nodeType": "YulFunctionCall",
																"src": "1678:37:18"
															},
															"nativeSrc": "1678:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "1678:37:18"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1603:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1656:5:18",
														"nodeType": "YulTypedName",
														"src": "1656:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1663:3:18",
														"nodeType": "YulTypedName",
														"src": "1663:3:18",
														"type": ""
													}
												],
												"src": "1603:118:18"
											},
											{
												"body": {
													"nativeSrc": "1825:124:18",
													"nodeType": "YulBlock",
													"src": "1825:124:18",
													"statements": [
														{
															"nativeSrc": "1835:26:18",
															"nodeType": "YulAssignment",
															"src": "1835:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1847:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1847:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1858:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1858:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1843:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1843:3:18"
																},
																"nativeSrc": "1843:18:18",
																"nodeType": "YulFunctionCall",
																"src": "1843:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1835:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "1835:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1915:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1915:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1928:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1928:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1939:1:18",
																				"nodeType": "YulLiteral",
																				"src": "1939:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1924:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1924:3:18"
																		},
																		"nativeSrc": "1924:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1924:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1871:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "1871:43:18"
																},
																"nativeSrc": "1871:71:18",
																"nodeType": "YulFunctionCall",
																"src": "1871:71:18"
															},
															"nativeSrc": "1871:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "1871:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1727:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1797:9:18",
														"nodeType": "YulTypedName",
														"src": "1797:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1809:6:18",
														"nodeType": "YulTypedName",
														"src": "1809:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1820:4:18",
														"nodeType": "YulTypedName",
														"src": "1820:4:18",
														"type": ""
													}
												],
												"src": "1727:222:18"
											},
											{
												"body": {
													"nativeSrc": "2051:73:18",
													"nodeType": "YulBlock",
													"src": "2051:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2068:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2068:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2073:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2073:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2061:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2061:6:18"
																},
																"nativeSrc": "2061:19:18",
																"nodeType": "YulFunctionCall",
																"src": "2061:19:18"
															},
															"nativeSrc": "2061:19:18",
															"nodeType": "YulExpressionStatement",
															"src": "2061:19:18"
														},
														{
															"nativeSrc": "2089:29:18",
															"nodeType": "YulAssignment",
															"src": "2089:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2108:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2108:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2113:4:18",
																		"nodeType": "YulLiteral",
																		"src": "2113:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2104:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2104:3:18"
																},
																"nativeSrc": "2104:14:18",
																"nodeType": "YulFunctionCall",
																"src": "2104:14:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2089:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "2089:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1955:169:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2023:3:18",
														"nodeType": "YulTypedName",
														"src": "2023:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2028:6:18",
														"nodeType": "YulTypedName",
														"src": "2028:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2039:11:18",
														"nodeType": "YulTypedName",
														"src": "2039:11:18",
														"type": ""
													}
												],
												"src": "1955:169:18"
											},
											{
												"body": {
													"nativeSrc": "2236:120:18",
													"nodeType": "YulBlock",
													"src": "2236:120:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2258:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2258:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2266:1:18",
																				"nodeType": "YulLiteral",
																				"src": "2266:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2254:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2254:3:18"
																		},
																		"nativeSrc": "2254:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2254:14:18"
																	},
																	{
																		"hexValue": "4f6e6c7920746865206f776e65722063616e20706572666f726d207468697320",
																		"kind": "string",
																		"nativeSrc": "2270:34:18",
																		"nodeType": "YulLiteral",
																		"src": "2270:34:18",
																		"type": "",
																		"value": "Only the owner can perform this "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2247:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2247:6:18"
																},
																"nativeSrc": "2247:58:18",
																"nodeType": "YulFunctionCall",
																"src": "2247:58:18"
															},
															"nativeSrc": "2247:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "2247:58:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2326:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2326:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2334:2:18",
																				"nodeType": "YulLiteral",
																				"src": "2334:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2322:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:18"
																		},
																		"nativeSrc": "2322:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2322:15:18"
																	},
																	{
																		"hexValue": "616374696f6e2e",
																		"kind": "string",
																		"nativeSrc": "2339:9:18",
																		"nodeType": "YulLiteral",
																		"src": "2339:9:18",
																		"type": "",
																		"value": "action."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2315:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2315:6:18"
																},
																"nativeSrc": "2315:34:18",
																"nodeType": "YulFunctionCall",
																"src": "2315:34:18"
															},
															"nativeSrc": "2315:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "2315:34:18"
														}
													]
												},
												"name": "store_literal_in_memory_b31fadb2896749f550dcf78218e622fcf1aec8c63dbb39a49eb9b7a87ed790a6",
												"nativeSrc": "2130:226:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2228:6:18",
														"nodeType": "YulTypedName",
														"src": "2228:6:18",
														"type": ""
													}
												],
												"src": "2130:226:18"
											},
											{
												"body": {
													"nativeSrc": "2508:220:18",
													"nodeType": "YulBlock",
													"src": "2508:220:18",
													"statements": [
														{
															"nativeSrc": "2518:74:18",
															"nodeType": "YulAssignment",
															"src": "2518:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2584:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2584:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2589:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2589:2:18",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2525:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "2525:58:18"
																},
																"nativeSrc": "2525:67:18",
																"nodeType": "YulFunctionCall",
																"src": "2525:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2518:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2518:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2690:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2690:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b31fadb2896749f550dcf78218e622fcf1aec8c63dbb39a49eb9b7a87ed790a6",
																	"nativeSrc": "2601:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "2601:88:18"
																},
																"nativeSrc": "2601:93:18",
																"nodeType": "YulFunctionCall",
																"src": "2601:93:18"
															},
															"nativeSrc": "2601:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "2601:93:18"
														},
														{
															"nativeSrc": "2703:19:18",
															"nodeType": "YulAssignment",
															"src": "2703:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2714:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2714:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2719:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2719:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2710:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2710:3:18"
																},
																"nativeSrc": "2710:12:18",
																"nodeType": "YulFunctionCall",
																"src": "2710:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2703:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2703:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b31fadb2896749f550dcf78218e622fcf1aec8c63dbb39a49eb9b7a87ed790a6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2362:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2496:3:18",
														"nodeType": "YulTypedName",
														"src": "2496:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2504:3:18",
														"nodeType": "YulTypedName",
														"src": "2504:3:18",
														"type": ""
													}
												],
												"src": "2362:366:18"
											},
											{
												"body": {
													"nativeSrc": "2905:248:18",
													"nodeType": "YulBlock",
													"src": "2905:248:18",
													"statements": [
														{
															"nativeSrc": "2915:26:18",
															"nodeType": "YulAssignment",
															"src": "2915:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2927:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "2927:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2938:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2938:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2923:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2923:3:18"
																},
																"nativeSrc": "2923:18:18",
																"nodeType": "YulFunctionCall",
																"src": "2923:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2915:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "2915:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2962:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2962:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2973:1:18",
																				"nodeType": "YulLiteral",
																				"src": "2973:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2958:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2958:3:18"
																		},
																		"nativeSrc": "2958:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2958:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2981:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "2981:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2987:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2987:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2977:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2977:3:18"
																		},
																		"nativeSrc": "2977:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2977:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2951:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2951:6:18"
																},
																"nativeSrc": "2951:47:18",
																"nodeType": "YulFunctionCall",
																"src": "2951:47:18"
															},
															"nativeSrc": "2951:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "2951:47:18"
														},
														{
															"nativeSrc": "3007:139:18",
															"nodeType": "YulAssignment",
															"src": "3007:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3141:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "3141:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b31fadb2896749f550dcf78218e622fcf1aec8c63dbb39a49eb9b7a87ed790a6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3015:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "3015:124:18"
																},
																"nativeSrc": "3015:131:18",
																"nodeType": "YulFunctionCall",
																"src": "3015:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3007:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "3007:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b31fadb2896749f550dcf78218e622fcf1aec8c63dbb39a49eb9b7a87ed790a6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2734:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2885:9:18",
														"nodeType": "YulTypedName",
														"src": "2885:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2900:4:18",
														"nodeType": "YulTypedName",
														"src": "2900:4:18",
														"type": ""
													}
												],
												"src": "2734:419:18"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b31fadb2896749f550dcf78218e622fcf1aec8c63dbb39a49eb9b7a87ed790a6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the owner can perform this \")\n\n        mstore(add(memPtr, 32), \"action.\")\n\n    }\n\n    function abi_encode_t_stringliteral_b31fadb2896749f550dcf78218e622fcf1aec8c63dbb39a49eb9b7a87ed790a6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_b31fadb2896749f550dcf78218e622fcf1aec8c63dbb39a49eb9b7a87ed790a6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b31fadb2896749f550dcf78218e622fcf1aec8c63dbb39a49eb9b7a87ed790a6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b31fadb2896749f550dcf78218e622fcf1aec8c63dbb39a49eb9b7a87ed790a6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100cd575f3560e01c8063c5072a311161008a578063dbba103a11610064578063dbba103a1461020b578063e0f9433d1461023b578063ead7934f14610257578063fd8cdd3214610287576100cd565b8063c5072a31146101a3578063cd33c38f146101bf578063d582ccac146101ef576100cd565b80630694316b146100d15780630a7c358d146100ed57806343292f6e146101095780634b86bd3d14610125578063504b19cb146101555780638da5cb5b14610185575b5f80fd5b6100eb60048036038101906100e691906109df565b6102b7565b005b610107600480360381019061010291906109df565b61039c565b005b610123600480360381019061011e91906109df565b610480565b005b61013f600480360381019061013a91906109df565b610564565b60405161014c9190610a24565b60405180910390f35b61016f600480360381019061016a91906109df565b6105b6565b60405161017c9190610a24565b60405180910390f35b61018d6105d3565b60405161019a9190610a4c565b60405180910390f35b6101bd60048036038101906101b891906109df565b6105f6565b005b6101d960048036038101906101d491906109df565b6106db565b6040516101e69190610a24565b60405180910390f35b610209600480360381019061020491906109df565b6106f8565b005b610225600480360381019061022091906109df565b6107dc565b6040516102329190610a24565b60405180910390f35b610255600480360381019061025091906109df565b61082e565b005b610271600480360381019061026c91906109df565b610912565b60405161027e9190610a24565b60405180910390f35b6102a1600480360381019061029c91906109df565b61092f565b6040516102ae9190610a24565b60405180910390f35b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610344576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033b90610ae5565b60405180910390fd5b600160025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610429576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042090610ae5565b60405180910390fd5b6001805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461050d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050490610ae5565b60405180910390fd5b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b6002602052805f5260405f205f915054906101000a900460ff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610683576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067a90610ae5565b60405180910390fd5b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b6003602052805f5260405f205f915054906101000a900460ff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610785576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077c90610ae5565b60405180910390fd5b5f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b290610ae5565b60405180910390fd5b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b6001602052805f5260405f205f915054906101000a900460ff1681565b5f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6109ae82610985565b9050919050565b6109be816109a4565b81146109c8575f80fd5b50565b5f813590506109d9816109b5565b92915050565b5f602082840312156109f4576109f3610981565b5b5f610a01848285016109cb565b91505092915050565b5f8115159050919050565b610a1e81610a0a565b82525050565b5f602082019050610a375f830184610a15565b92915050565b610a46816109a4565b82525050565b5f602082019050610a5f5f830184610a3d565b92915050565b5f82825260208201905092915050565b7f4f6e6c7920746865206f776e65722063616e20706572666f726d2074686973205f8201527f616374696f6e2e00000000000000000000000000000000000000000000000000602082015250565b5f610acf602783610a65565b9150610ada82610a75565b604082019050919050565b5f6020820190508181035f830152610afc81610ac3565b905091905056fea2646970667358221220568b23f0822162f66cdd80c662cd6edd3aaa95ffe9273ef22f4bcdc27bd1bce964736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC5072A31 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xDBBA103A GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDBBA103A EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0xE0F9433D EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xEAD7934F EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xFD8CDD32 EQ PUSH2 0x287 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0xC5072A31 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0xCD33C38F EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xD582CCAC EQ PUSH2 0x1EF JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x694316B EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0xA7C358D EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x43292F6E EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x4B86BD3D EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x504B19CB EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x185 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x2B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x107 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x102 SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x39C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x123 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x480 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x564 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x5B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17C SWAP2 SWAP1 PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18D PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19A SWAP2 SWAP1 PUSH2 0xA4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x5F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x6DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x6F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x232 SWAP2 SWAP1 PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x82E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x912 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x92F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x344 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33B SWAP1 PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x429 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x420 SWAP1 PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x504 SWAP1 PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67A SWAP1 PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x785 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77C SWAP1 PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B2 SWAP1 PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9AE DUP3 PUSH2 0x985 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9BE DUP2 PUSH2 0x9A4 JUMP JUMPDEST DUP2 EQ PUSH2 0x9C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9D9 DUP2 PUSH2 0x9B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F4 JUMPI PUSH2 0x9F3 PUSH2 0x981 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA01 DUP5 DUP3 DUP6 ADD PUSH2 0x9CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA1E DUP2 PUSH2 0xA0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA37 PUSH0 DUP4 ADD DUP5 PUSH2 0xA15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA46 DUP2 PUSH2 0x9A4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA5F PUSH0 DUP4 ADD DUP5 PUSH2 0xA3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C7920746865206F776E65722063616E20706572666F726D207468697320 PUSH0 DUP3 ADD MSTORE PUSH32 0x616374696F6E2E00000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xACF PUSH1 0x27 DUP4 PUSH2 0xA65 JUMP JUMPDEST SWAP2 POP PUSH2 0xADA DUP3 PUSH2 0xA75 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAFC DUP2 PUSH2 0xAC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP DUP12 0x23 CREATE DUP3 0x21 PUSH3 0xF66CDD DUP1 0xC6 PUSH3 0xCD6EDD GASPRICE 0xAA SWAP6 SELFDESTRUCT 0xE9 0x27 RETURNDATACOPY CALLCODE 0x2F 0x4B 0xCD 0xC2 PUSH28 0xD1BCE964736F6C634300081600330000000000000000000000000000 ",
							"sourceMap": "64:1729:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;946:122;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;521:114;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;643:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1210:138;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;177:52;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;95:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1394:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;236:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1522:124;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;769:130;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1076:126;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;122:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1654:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;946:122;409:5;;;;;;;;;;395:19;;:10;:19;;;387:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;1056:4:::1;1023:20;:30;1044:8;1023:30;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;946:122:::0;:::o;521:114::-;409:5;;;;;;;;;;395:19;;:10;:19;;;387:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;623:4:::1;594:16:::0;:26:::1;611:8;594:26;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;521:114:::0;:::o;643:118::-;409:5;;;;;;;;;;395:19;;:10;:19;;;387:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;748:5:::1;719:16;:26;736:8;719:26;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;643:118:::0;:::o;1210:138::-;1286:4;1310:20;:30;1331:8;1310:30;;;;;;;;;;;;;;;;;;;;;;;;;1303:37;;1210:138;;;:::o;177:52::-;;;;;;;;;;;;;;;;;;;;;;:::o;95:20::-;;;;;;;;;;;;:::o;1394:120::-;409:5;;;;;;;;;;395:19;;:10;:19;;;387:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;1502:4:::1;1470:19;:29;1490:8;1470:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;1394:120:::0;:::o;236:51::-;;;;;;;;;;;;;;;;;;;;;;:::o;1522:124::-;409:5;;;;;;;;;;395:19;;:10;:19;;;387:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;1633:5:::1;1601:19;:29;1621:8;1601:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;1522:124:::0;:::o;769:130::-;841:4;865:16;:26;882:8;865:26;;;;;;;;;;;;;;;;;;;;;;;;;858:33;;769:130;;;:::o;1076:126::-;409:5;;;;;;;;;;395:19;;:10;:19;;;387:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;1189:5:::1;1156:20;:30;1177:8;1156:30;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;1076:126:::0;:::o;122:48::-;;;;;;;;;;;;;;;;;;;;;;:::o;1654:136::-;1729:4;1753:19;:29;1773:8;1753:29;;;;;;;;;;;;;;;;;;;;;;;;;1746:36;;1654:136;;;:::o;88:117:18:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:109::-;1353:21;1368:5;1353:21;:::i;:::-;1348:3;1341:34;1272:109;;:::o;1387:210::-;1474:4;1512:2;1501:9;1497:18;1489:26;;1525:65;1587:1;1576:9;1572:17;1563:6;1525:65;:::i;:::-;1387:210;;;;:::o;1603:118::-;1690:24;1708:5;1690:24;:::i;:::-;1685:3;1678:37;1603:118;;:::o;1727:222::-;1820:4;1858:2;1847:9;1843:18;1835:26;;1871:71;1939:1;1928:9;1924:17;1915:6;1871:71;:::i;:::-;1727:222;;;;:::o;1955:169::-;2039:11;2073:6;2068:3;2061:19;2113:4;2108:3;2104:14;2089:29;;1955:169;;;;:::o;2130:226::-;2270:34;2266:1;2258:6;2254:14;2247:58;2339:9;2334:2;2326:6;2322:15;2315:34;2130:226;:::o;2362:366::-;2504:3;2525:67;2589:2;2584:3;2525:67;:::i;:::-;2518:74;;2601:93;2690:3;2601:93;:::i;:::-;2719:2;2714:3;2710:12;2703:19;;2362:366;;;:::o;2734:419::-;2900:4;2938:2;2927:9;2923:18;2915:26;;2987:9;2981:4;2977:20;2973:1;2962:9;2958:17;2951:47;3015:131;3141:4;3015:131;:::i;:::-;3007:139;;2734:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "574600",
								"executionCost": "24869",
								"totalCost": "599469"
							},
							"external": {
								"addCompanyAddress(address)": "26992",
								"addCoordinatorAddress(address)": "26970",
								"addGovernmentAddress(address)": "26992",
								"companyAddresses(address)": "2899",
								"coordinatorAddresses(address)": "2922",
								"governmentAddresses(address)": "2878",
								"isCompanyAddressAllowed(address)": "2892",
								"isCoordinatorAddressAllowed(address)": "2937",
								"isGovernmentAddressAllowed(address)": "2958",
								"owner()": "2616",
								"removeCompanyAddress(address)": "27013",
								"removeCoordinatorAddress(address)": "27012",
								"removeGovernmentAddress(address)": "27035"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 64,
									"end": 1793,
									"name": "PUSH",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 64,
									"end": 1793,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 64,
									"end": 1793,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 296,
									"end": 347,
									"name": "CALLVALUE",
									"source": 16
								},
								{
									"begin": 296,
									"end": 347,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 296,
									"end": 347,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 296,
									"end": 347,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 296,
									"end": 347,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 296,
									"end": 347,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 296,
									"end": 347,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 296,
									"end": 347,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 296,
									"end": 347,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 296,
									"end": 347,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 296,
									"end": 347,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 329,
									"end": 339,
									"name": "CALLER",
									"source": 16
								},
								{
									"begin": 321,
									"end": 326,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 321,
									"end": 326,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 321,
									"end": 339,
									"name": "PUSH",
									"source": 16,
									"value": "100"
								},
								{
									"begin": 321,
									"end": 339,
									"name": "EXP",
									"source": 16
								},
								{
									"begin": 321,
									"end": 339,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 321,
									"end": 339,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": 321,
									"end": 339,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 321,
									"end": 339,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 321,
									"end": 339,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 321,
									"end": 339,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 321,
									"end": 339,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 321,
									"end": 339,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 321,
									"end": 339,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 321,
									"end": 339,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 321,
									"end": 339,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 321,
									"end": 339,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 321,
									"end": 339,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 321,
									"end": 339,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 321,
									"end": 339,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 321,
									"end": 339,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 64,
									"end": 1793,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64,
									"end": 1793,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 64,
									"end": 1793,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64,
									"end": 1793,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 1793,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 64,
									"end": 1793,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 1793,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220568b23f0822162f66cdd80c662cd6edd3aaa95ffe9273ef22f4bcdc27bd1bce964736f6c63430008160033",
									".code": [
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "tag",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH",
											"source": 16,
											"value": "C5072A31"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "16"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH",
											"source": 16,
											"value": "DBBA103A"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH",
											"source": 16,
											"value": "DBBA103A"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH",
											"source": 16,
											"value": "E0F9433D"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "13"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH",
											"source": 16,
											"value": "EAD7934F"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "14"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH",
											"source": 16,
											"value": "FD8CDD32"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "15"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "tag",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH",
											"source": 16,
											"value": "C5072A31"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH",
											"source": 16,
											"value": "CD33C38F"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH",
											"source": 16,
											"value": "D582CCAC"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "tag",
											"source": 16,
											"value": "16"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH",
											"source": 16,
											"value": "694316B"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH",
											"source": 16,
											"value": "A7C358D"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH",
											"source": 16,
											"value": "43292F6E"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH",
											"source": 16,
											"value": "4B86BD3D"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH",
											"source": 16,
											"value": "504B19CB"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH",
											"source": 16,
											"value": "8DA5CB5B"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "tag",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 64,
											"end": 1793,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 946,
											"end": 1068,
											"name": "tag",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 946,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 946,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "18"
										},
										{
											"begin": 946,
											"end": 1068,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 946,
											"end": 1068,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 946,
											"end": 1068,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 946,
											"end": 1068,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 946,
											"end": 1068,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 946,
											"end": 1068,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 946,
											"end": 1068,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 946,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 946,
											"end": 1068,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 946,
											"end": 1068,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 946,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 946,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 946,
											"end": 1068,
											"name": "tag",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 946,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 946,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 946,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 946,
											"end": 1068,
											"name": "tag",
											"source": 16,
											"value": "18"
										},
										{
											"begin": 946,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 946,
											"end": 1068,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 521,
											"end": 635,
											"name": "tag",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 521,
											"end": 635,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 521,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 521,
											"end": 635,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 521,
											"end": 635,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 521,
											"end": 635,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 521,
											"end": 635,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 521,
											"end": 635,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 521,
											"end": 635,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 521,
											"end": 635,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 521,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 521,
											"end": 635,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 521,
											"end": 635,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 521,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 521,
											"end": 635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 521,
											"end": 635,
											"name": "tag",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 521,
											"end": 635,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 521,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 521,
											"end": 635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 521,
											"end": 635,
											"name": "tag",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 521,
											"end": 635,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 521,
											"end": 635,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 643,
											"end": 761,
											"name": "tag",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 643,
											"end": 761,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 643,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "25"
										},
										{
											"begin": 643,
											"end": 761,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 643,
											"end": 761,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 643,
											"end": 761,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 643,
											"end": 761,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 643,
											"end": 761,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 643,
											"end": 761,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 643,
											"end": 761,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 643,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 643,
											"end": 761,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 643,
											"end": 761,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 643,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 643,
											"end": 761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 643,
											"end": 761,
											"name": "tag",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 643,
											"end": 761,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 643,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "27"
										},
										{
											"begin": 643,
											"end": 761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 643,
											"end": 761,
											"name": "tag",
											"source": 16,
											"value": "25"
										},
										{
											"begin": 643,
											"end": 761,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 643,
											"end": 761,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "tag",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "28"
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "29"
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "tag",
											"source": 16,
											"value": "29"
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 1210,
											"end": 1348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "tag",
											"source": 16,
											"value": "28"
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "31"
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 1210,
											"end": 1348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "tag",
											"source": 16,
											"value": "31"
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "tag",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 177,
											"end": 229,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "33"
										},
										{
											"begin": 177,
											"end": 229,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 177,
											"end": 229,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "34"
										},
										{
											"begin": 177,
											"end": 229,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 177,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "tag",
											"source": 16,
											"value": "34"
										},
										{
											"begin": 177,
											"end": 229,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "35"
										},
										{
											"begin": 177,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "tag",
											"source": 16,
											"value": "33"
										},
										{
											"begin": 177,
											"end": 229,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 177,
											"end": 229,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "36"
										},
										{
											"begin": 177,
											"end": 229,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 177,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "tag",
											"source": 16,
											"value": "36"
										},
										{
											"begin": 177,
											"end": 229,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 177,
											"end": 229,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 95,
											"end": 115,
											"name": "tag",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 95,
											"end": 115,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 95,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "37"
										},
										{
											"begin": 95,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "38"
										},
										{
											"begin": 95,
											"end": 115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 95,
											"end": 115,
											"name": "tag",
											"source": 16,
											"value": "37"
										},
										{
											"begin": 95,
											"end": 115,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 95,
											"end": 115,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 95,
											"end": 115,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 95,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "39"
										},
										{
											"begin": 95,
											"end": 115,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 95,
											"end": 115,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 95,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 95,
											"end": 115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 95,
											"end": 115,
											"name": "tag",
											"source": 16,
											"value": "39"
										},
										{
											"begin": 95,
											"end": 115,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 95,
											"end": 115,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 95,
											"end": 115,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 95,
											"end": 115,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 95,
											"end": 115,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 95,
											"end": 115,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 95,
											"end": 115,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 95,
											"end": 115,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 1394,
											"end": 1514,
											"name": "tag",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 1394,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1394,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 1394,
											"end": 1514,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1394,
											"end": 1514,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1394,
											"end": 1514,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 1394,
											"end": 1514,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1394,
											"end": 1514,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1394,
											"end": 1514,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1394,
											"end": 1514,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1394,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "42"
										},
										{
											"begin": 1394,
											"end": 1514,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1394,
											"end": 1514,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1394,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1394,
											"end": 1514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1394,
											"end": 1514,
											"name": "tag",
											"source": 16,
											"value": "42"
										},
										{
											"begin": 1394,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1394,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "43"
										},
										{
											"begin": 1394,
											"end": 1514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1394,
											"end": 1514,
											"name": "tag",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 1394,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1394,
											"end": 1514,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "tag",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 236,
											"end": 287,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 236,
											"end": 287,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 236,
											"end": 287,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "45"
										},
										{
											"begin": 236,
											"end": 287,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 236,
											"end": 287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "tag",
											"source": 16,
											"value": "45"
										},
										{
											"begin": 236,
											"end": 287,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "46"
										},
										{
											"begin": 236,
											"end": 287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "tag",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 236,
											"end": 287,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 236,
											"end": 287,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "47"
										},
										{
											"begin": 236,
											"end": 287,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 236,
											"end": 287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "tag",
											"source": 16,
											"value": "47"
										},
										{
											"begin": 236,
											"end": 287,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 236,
											"end": 287,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 1522,
											"end": 1646,
											"name": "tag",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 1522,
											"end": 1646,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1522,
											"end": 1646,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "48"
										},
										{
											"begin": 1522,
											"end": 1646,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1522,
											"end": 1646,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1522,
											"end": 1646,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 1522,
											"end": 1646,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1522,
											"end": 1646,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1522,
											"end": 1646,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1522,
											"end": 1646,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1522,
											"end": 1646,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "49"
										},
										{
											"begin": 1522,
											"end": 1646,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1522,
											"end": 1646,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1522,
											"end": 1646,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1522,
											"end": 1646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1522,
											"end": 1646,
											"name": "tag",
											"source": 16,
											"value": "49"
										},
										{
											"begin": 1522,
											"end": 1646,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1522,
											"end": 1646,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "50"
										},
										{
											"begin": 1522,
											"end": 1646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1522,
											"end": 1646,
											"name": "tag",
											"source": 16,
											"value": "48"
										},
										{
											"begin": 1522,
											"end": 1646,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1522,
											"end": 1646,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 769,
											"end": 899,
											"name": "tag",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 769,
											"end": 899,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 769,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "51"
										},
										{
											"begin": 769,
											"end": 899,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 899,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 769,
											"end": 899,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 769,
											"end": 899,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 769,
											"end": 899,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 769,
											"end": 899,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 769,
											"end": 899,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 769,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "52"
										},
										{
											"begin": 769,
											"end": 899,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 769,
											"end": 899,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 769,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 769,
											"end": 899,
											"name": "tag",
											"source": 16,
											"value": "52"
										},
										{
											"begin": 769,
											"end": 899,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 769,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "53"
										},
										{
											"begin": 769,
											"end": 899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 769,
											"end": 899,
											"name": "tag",
											"source": 16,
											"value": "51"
										},
										{
											"begin": 769,
											"end": 899,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 769,
											"end": 899,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 899,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 769,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "54"
										},
										{
											"begin": 769,
											"end": 899,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 769,
											"end": 899,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 769,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 769,
											"end": 899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 769,
											"end": 899,
											"name": "tag",
											"source": 16,
											"value": "54"
										},
										{
											"begin": 769,
											"end": 899,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 769,
											"end": 899,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 899,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 769,
											"end": 899,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 769,
											"end": 899,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 769,
											"end": 899,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 769,
											"end": 899,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 769,
											"end": 899,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 1076,
											"end": 1202,
											"name": "tag",
											"source": 16,
											"value": "13"
										},
										{
											"begin": 1076,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1076,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "55"
										},
										{
											"begin": 1076,
											"end": 1202,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1076,
											"end": 1202,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1076,
											"end": 1202,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 1076,
											"end": 1202,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1076,
											"end": 1202,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1076,
											"end": 1202,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1076,
											"end": 1202,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1076,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "56"
										},
										{
											"begin": 1076,
											"end": 1202,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1076,
											"end": 1202,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1076,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1076,
											"end": 1202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1076,
											"end": 1202,
											"name": "tag",
											"source": 16,
											"value": "56"
										},
										{
											"begin": 1076,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1076,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "57"
										},
										{
											"begin": 1076,
											"end": 1202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1076,
											"end": 1202,
											"name": "tag",
											"source": 16,
											"value": "55"
										},
										{
											"begin": 1076,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1076,
											"end": 1202,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "tag",
											"source": 16,
											"value": "14"
										},
										{
											"begin": 122,
											"end": 170,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "58"
										},
										{
											"begin": 122,
											"end": 170,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 122,
											"end": 170,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "59"
										},
										{
											"begin": 122,
											"end": 170,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 122,
											"end": 170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "tag",
											"source": 16,
											"value": "59"
										},
										{
											"begin": 122,
											"end": 170,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 122,
											"end": 170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "tag",
											"source": 16,
											"value": "58"
										},
										{
											"begin": 122,
											"end": 170,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 122,
											"end": 170,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "61"
										},
										{
											"begin": 122,
											"end": 170,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 122,
											"end": 170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "tag",
											"source": 16,
											"value": "61"
										},
										{
											"begin": 122,
											"end": 170,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 122,
											"end": 170,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "tag",
											"source": 16,
											"value": "15"
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "62"
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "63"
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1654,
											"end": 1790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "tag",
											"source": 16,
											"value": "63"
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 1654,
											"end": 1790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "tag",
											"source": 16,
											"value": "62"
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "65"
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 1654,
											"end": 1790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "tag",
											"source": 16,
											"value": "65"
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 946,
											"end": 1068,
											"name": "tag",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 946,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 414,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 409,
											"end": 414,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 409,
											"end": 414,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 395,
											"end": 414,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 395,
											"end": 414,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 395,
											"end": 405,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 395,
											"end": 414,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 395,
											"end": 414,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 395,
											"end": 414,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "67"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "68"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "69"
										},
										{
											"begin": 387,
											"end": 458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "tag",
											"source": 16,
											"value": "68"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "tag",
											"source": 16,
											"value": "67"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1056,
											"end": 1060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 1023,
											"end": 1043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 1023,
											"end": 1053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1052,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1023,
											"end": 1053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1023,
											"end": 1053,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1023,
											"end": 1053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1023,
											"end": 1053,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1023,
											"end": 1053,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1023,
											"end": 1053,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1023,
											"end": 1053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1053,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1023,
											"end": 1053,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1023,
											"end": 1053,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1023,
											"end": 1053,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1023,
											"end": 1053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1053,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1023,
											"end": 1053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1023,
											"end": 1053,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 1023,
											"end": 1053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1023,
											"end": 1060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 1023,
											"end": 1060,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 1023,
											"end": 1060,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1023,
											"end": 1060,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1023,
											"end": 1060,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1023,
											"end": 1060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 1023,
											"end": 1060,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 1023,
											"end": 1060,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 1023,
											"end": 1060,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1023,
											"end": 1060,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1023,
											"end": 1060,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1023,
											"end": 1060,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1023,
											"end": 1060,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1023,
											"end": 1060,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 1023,
											"end": 1060,
											"modifierDepth": 1,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 1023,
											"end": 1060,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1023,
											"end": 1060,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 1023,
											"end": 1060,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 946,
											"end": 1068,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 946,
											"end": 1068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 521,
											"end": 635,
											"name": "tag",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 521,
											"end": 635,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 414,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 409,
											"end": 414,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 409,
											"end": 414,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 395,
											"end": 414,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 395,
											"end": 414,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 395,
											"end": 405,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 395,
											"end": 414,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 395,
											"end": 414,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 395,
											"end": 414,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "72"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "73"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "69"
										},
										{
											"begin": 387,
											"end": 458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "tag",
											"source": 16,
											"value": "73"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "tag",
											"source": 16,
											"value": "72"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 623,
											"end": 627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 594,
											"end": 610,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 594,
											"end": 620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 611,
											"end": 619,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 594,
											"end": 620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 594,
											"end": 620,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 594,
											"end": 620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 594,
											"end": 620,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 594,
											"end": 620,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 594,
											"end": 620,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 594,
											"end": 620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 594,
											"end": 620,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 594,
											"end": 620,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 594,
											"end": 620,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 594,
											"end": 620,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 594,
											"end": 620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 594,
											"end": 620,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 594,
											"end": 620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 594,
											"end": 620,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 594,
											"end": 620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 594,
											"end": 627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 594,
											"end": 627,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 594,
											"end": 627,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 594,
											"end": 627,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 594,
											"end": 627,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 594,
											"end": 627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 594,
											"end": 627,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 594,
											"end": 627,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 594,
											"end": 627,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 594,
											"end": 627,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 594,
											"end": 627,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 594,
											"end": 627,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 594,
											"end": 627,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 594,
											"end": 627,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 594,
											"end": 627,
											"modifierDepth": 1,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 594,
											"end": 627,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 594,
											"end": 627,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 594,
											"end": 627,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 521,
											"end": 635,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 521,
											"end": 635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 643,
											"end": 761,
											"name": "tag",
											"source": 16,
											"value": "27"
										},
										{
											"begin": 643,
											"end": 761,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 414,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 409,
											"end": 414,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 409,
											"end": 414,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 395,
											"end": 414,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 395,
											"end": 414,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 395,
											"end": 405,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 395,
											"end": 414,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 395,
											"end": 414,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 395,
											"end": 414,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "76"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "77"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "69"
										},
										{
											"begin": 387,
											"end": 458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "tag",
											"source": 16,
											"value": "77"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "tag",
											"source": 16,
											"value": "76"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 748,
											"end": 753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 719,
											"end": 745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 744,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 719,
											"end": 745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 719,
											"end": 745,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 719,
											"end": 745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 719,
											"end": 745,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 719,
											"end": 745,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 719,
											"end": 745,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 719,
											"end": 745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 719,
											"end": 745,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 719,
											"end": 745,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 719,
											"end": 745,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 719,
											"end": 745,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 719,
											"end": 745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 719,
											"end": 745,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 719,
											"end": 745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 745,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 719,
											"end": 745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 719,
											"end": 753,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 719,
											"end": 753,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 719,
											"end": 753,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 719,
											"end": 753,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 719,
											"end": 753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 719,
											"end": 753,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 719,
											"end": 753,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 719,
											"end": 753,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 719,
											"end": 753,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 719,
											"end": 753,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 719,
											"end": 753,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 719,
											"end": 753,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 719,
											"end": 753,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 719,
											"end": 753,
											"modifierDepth": 1,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 719,
											"end": 753,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 719,
											"end": 753,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 719,
											"end": 753,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 643,
											"end": 761,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 643,
											"end": 761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "tag",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1286,
											"end": 1290,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1310,
											"end": 1330,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 1310,
											"end": 1340,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1331,
											"end": 1339,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1310,
											"end": 1340,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1310,
											"end": 1340,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1310,
											"end": 1340,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1310,
											"end": 1340,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1310,
											"end": 1340,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1310,
											"end": 1340,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1310,
											"end": 1340,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1310,
											"end": 1340,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1310,
											"end": 1340,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1310,
											"end": 1340,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1310,
											"end": 1340,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1310,
											"end": 1340,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1310,
											"end": 1340,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1310,
											"end": 1340,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1310,
											"end": 1340,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 1310,
											"end": 1340,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1310,
											"end": 1340,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1310,
											"end": 1340,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1310,
											"end": 1340,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1310,
											"end": 1340,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 1310,
											"end": 1340,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 1310,
											"end": 1340,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1310,
											"end": 1340,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 1310,
											"end": 1340,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 1310,
											"end": 1340,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1210,
											"end": 1348,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1210,
											"end": 1348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "tag",
											"source": 16,
											"value": "35"
										},
										{
											"begin": 177,
											"end": 229,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 177,
											"end": 229,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 177,
											"end": 229,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 229,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 177,
											"end": 229,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 229,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 229,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 177,
											"end": 229,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 177,
											"end": 229,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 177,
											"end": 229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 95,
											"end": 115,
											"name": "tag",
											"source": 16,
											"value": "38"
										},
										{
											"begin": 95,
											"end": 115,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 95,
											"end": 115,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 95,
											"end": 115,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 95,
											"end": 115,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 95,
											"end": 115,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 95,
											"end": 115,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 95,
											"end": 115,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 95,
											"end": 115,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 95,
											"end": 115,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 95,
											"end": 115,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 95,
											"end": 115,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 95,
											"end": 115,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 95,
											"end": 115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1394,
											"end": 1514,
											"name": "tag",
											"source": 16,
											"value": "43"
										},
										{
											"begin": 1394,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 414,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 409,
											"end": 414,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 409,
											"end": 414,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 395,
											"end": 414,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 395,
											"end": 414,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 395,
											"end": 405,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 395,
											"end": 414,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 395,
											"end": 414,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 395,
											"end": 414,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "81"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "82"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "69"
										},
										{
											"begin": 387,
											"end": 458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "tag",
											"source": 16,
											"value": "82"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "tag",
											"source": 16,
											"value": "81"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1502,
											"end": 1506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 1470,
											"end": 1489,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 1470,
											"end": 1499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1498,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1470,
											"end": 1499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1470,
											"end": 1499,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1470,
											"end": 1499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1470,
											"end": 1499,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1470,
											"end": 1499,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1470,
											"end": 1499,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1470,
											"end": 1499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1470,
											"end": 1499,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1470,
											"end": 1499,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1470,
											"end": 1499,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1470,
											"end": 1499,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1470,
											"end": 1499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1470,
											"end": 1499,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1470,
											"end": 1499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1470,
											"end": 1499,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 1470,
											"end": 1499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1470,
											"end": 1506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 1470,
											"end": 1506,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 1470,
											"end": 1506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1470,
											"end": 1506,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1470,
											"end": 1506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1470,
											"end": 1506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 1470,
											"end": 1506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 1470,
											"end": 1506,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 1470,
											"end": 1506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1470,
											"end": 1506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1470,
											"end": 1506,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1470,
											"end": 1506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1470,
											"end": 1506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1470,
											"end": 1506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 1470,
											"end": 1506,
											"modifierDepth": 1,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 1470,
											"end": 1506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1470,
											"end": 1506,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 1470,
											"end": 1506,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1394,
											"end": 1514,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1394,
											"end": 1514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "tag",
											"source": 16,
											"value": "46"
										},
										{
											"begin": 236,
											"end": 287,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "PUSH",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 236,
											"end": 287,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 236,
											"end": 287,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 287,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 236,
											"end": 287,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 287,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 287,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 236,
											"end": 287,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 236,
											"end": 287,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 236,
											"end": 287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1522,
											"end": 1646,
											"name": "tag",
											"source": 16,
											"value": "50"
										},
										{
											"begin": 1522,
											"end": 1646,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 414,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 409,
											"end": 414,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 409,
											"end": 414,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 395,
											"end": 414,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 395,
											"end": 414,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 395,
											"end": 405,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 395,
											"end": 414,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 395,
											"end": 414,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 395,
											"end": 414,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "85"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "86"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "69"
										},
										{
											"begin": 387,
											"end": 458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "tag",
											"source": 16,
											"value": "86"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "tag",
											"source": 16,
											"value": "85"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1633,
											"end": 1638,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 1601,
											"end": 1630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1621,
											"end": 1629,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1601,
											"end": 1630,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1601,
											"end": 1630,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1630,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1630,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1630,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1630,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1630,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1630,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1630,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1630,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1638,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 1601,
											"end": 1638,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1638,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1638,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1638,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1638,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 1601,
											"end": 1638,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1638,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1638,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1638,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1638,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1638,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1638,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1638,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1638,
											"modifierDepth": 1,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1638,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1638,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1638,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1522,
											"end": 1646,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1522,
											"end": 1646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 769,
											"end": 899,
											"name": "tag",
											"source": 16,
											"value": "53"
										},
										{
											"begin": 769,
											"end": 899,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 841,
											"end": 845,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 881,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 865,
											"end": 891,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 890,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 865,
											"end": 891,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 865,
											"end": 891,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 865,
											"end": 891,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 865,
											"end": 891,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 865,
											"end": 891,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 865,
											"end": 891,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 865,
											"end": 891,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 865,
											"end": 891,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 865,
											"end": 891,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 865,
											"end": 891,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 865,
											"end": 891,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 865,
											"end": 891,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 865,
											"end": 891,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 865,
											"end": 891,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 891,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 865,
											"end": 891,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 891,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 865,
											"end": 891,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 865,
											"end": 891,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 865,
											"end": 891,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 865,
											"end": 891,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 865,
											"end": 891,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 865,
											"end": 891,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 865,
											"end": 891,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 865,
											"end": 891,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 858,
											"end": 891,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 858,
											"end": 891,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 769,
											"end": 899,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 769,
											"end": 899,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 769,
											"end": 899,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 769,
											"end": 899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1076,
											"end": 1202,
											"name": "tag",
											"source": 16,
											"value": "57"
										},
										{
											"begin": 1076,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 414,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 409,
											"end": 414,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 409,
											"end": 414,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 409,
											"end": 414,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 395,
											"end": 414,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 395,
											"end": 414,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 395,
											"end": 405,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 395,
											"end": 414,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 395,
											"end": 414,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 395,
											"end": 414,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "90"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "91"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "69"
										},
										{
											"begin": 387,
											"end": 458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "tag",
											"source": 16,
											"value": "91"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 387,
											"end": 458,
											"name": "tag",
											"source": 16,
											"value": "90"
										},
										{
											"begin": 387,
											"end": 458,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1189,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 1156,
											"end": 1186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1177,
											"end": 1185,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1156,
											"end": 1186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1156,
											"end": 1186,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1156,
											"end": 1186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1156,
											"end": 1186,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1156,
											"end": 1186,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1156,
											"end": 1186,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1156,
											"end": 1186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1156,
											"end": 1186,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1156,
											"end": 1186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1156,
											"end": 1186,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1156,
											"end": 1186,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1156,
											"end": 1186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1156,
											"end": 1186,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1156,
											"end": 1186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1186,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 1156,
											"end": 1186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 1156,
											"end": 1194,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 1156,
											"end": 1194,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1156,
											"end": 1194,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1156,
											"end": 1194,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1156,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 1156,
											"end": 1194,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 1156,
											"end": 1194,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 1156,
											"end": 1194,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1156,
											"end": 1194,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1156,
											"end": 1194,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1156,
											"end": 1194,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1156,
											"end": 1194,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1156,
											"end": 1194,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 1156,
											"end": 1194,
											"modifierDepth": 1,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 1156,
											"end": 1194,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1156,
											"end": 1194,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 1156,
											"end": 1194,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1076,
											"end": 1202,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1076,
											"end": 1202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "tag",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 122,
											"end": 170,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 122,
											"end": 170,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 122,
											"end": 170,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 122,
											"end": 170,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 122,
											"end": 170,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 122,
											"end": 170,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 122,
											"end": 170,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 122,
											"end": 170,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 122,
											"end": 170,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 122,
											"end": 170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "tag",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1729,
											"end": 1733,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1772,
											"name": "PUSH",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 1753,
											"end": 1782,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1773,
											"end": 1781,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1753,
											"end": 1782,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1753,
											"end": 1782,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1753,
											"end": 1782,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1753,
											"end": 1782,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1753,
											"end": 1782,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1753,
											"end": 1782,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1753,
											"end": 1782,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1753,
											"end": 1782,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1753,
											"end": 1782,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1753,
											"end": 1782,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1753,
											"end": 1782,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1753,
											"end": 1782,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1753,
											"end": 1782,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1753,
											"end": 1782,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1782,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 1753,
											"end": 1782,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1782,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1753,
											"end": 1782,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1753,
											"end": 1782,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1753,
											"end": 1782,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 1753,
											"end": 1782,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 1753,
											"end": 1782,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1753,
											"end": 1782,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 1753,
											"end": 1782,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 1753,
											"end": 1782,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1746,
											"end": 1782,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1746,
											"end": 1782,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1654,
											"end": 1790,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1654,
											"end": 1790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 18,
											"value": "95"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 18,
											"value": "97"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 18,
											"value": "98"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "113"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "97"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 18,
											"value": "113"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 18,
											"value": "99"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "115"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "98"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 18,
											"value": "115"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "116"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 18,
											"value": "116"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "118"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "99"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 18,
											"value": "118"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "120"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "121"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "95"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 18,
											"value": "121"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 18,
											"value": "120"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "122"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 18,
											"value": "122"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "tag",
											"source": 18,
											"value": "101"
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1258,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1246,
											"end": 1259,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1239,
											"end": 1260,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1176,
											"end": 1266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "tag",
											"source": 18,
											"value": "102"
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "125"
										},
										{
											"begin": 1368,
											"end": 1373,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "101"
										},
										{
											"begin": 1353,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "tag",
											"source": 18,
											"value": "125"
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1341,
											"end": 1375,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1272,
											"end": 1381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "tag",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1474,
											"end": 1478,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1514,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1497,
											"end": 1515,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "127"
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1585,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1572,
											"end": 1589,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1563,
											"end": 1569,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "102"
										},
										{
											"begin": 1525,
											"end": 1590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "tag",
											"source": 18,
											"value": "127"
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1387,
											"end": 1597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "tag",
											"source": 18,
											"value": "103"
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "129"
										},
										{
											"begin": 1708,
											"end": 1713,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "98"
										},
										{
											"begin": 1690,
											"end": 1714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "tag",
											"source": 18,
											"value": "129"
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1688,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1678,
											"end": 1715,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1603,
											"end": 1721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "tag",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1820,
											"end": 1824,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1860,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1843,
											"end": 1861,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1835,
											"end": 1861,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1835,
											"end": 1861,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "131"
										},
										{
											"begin": 1939,
											"end": 1940,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1937,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1924,
											"end": 1941,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "103"
										},
										{
											"begin": 1871,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "tag",
											"source": 18,
											"value": "131"
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1727,
											"end": 1949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "tag",
											"source": 18,
											"value": "104"
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2039,
											"end": 2050,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2073,
											"end": 2079,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2068,
											"end": 2071,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2061,
											"end": 2080,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2113,
											"end": 2117,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2108,
											"end": 2111,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2104,
											"end": 2118,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2089,
											"end": 2118,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2089,
											"end": 2118,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1955,
											"end": 2124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2130,
											"end": 2356,
											"name": "tag",
											"source": 18,
											"value": "105"
										},
										{
											"begin": 2130,
											"end": 2356,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2270,
											"end": 2304,
											"name": "PUSH",
											"source": 18,
											"value": "4F6E6C7920746865206F776E65722063616E20706572666F726D207468697320"
										},
										{
											"begin": 2266,
											"end": 2267,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2264,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2254,
											"end": 2268,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2247,
											"end": 2305,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2339,
											"end": 2348,
											"name": "PUSH",
											"source": 18,
											"value": "616374696F6E2E00000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2334,
											"end": 2336,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2326,
											"end": 2332,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2322,
											"end": 2337,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2315,
											"end": 2349,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2130,
											"end": 2356,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2130,
											"end": 2356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2362,
											"end": 2728,
											"name": "tag",
											"source": 18,
											"value": "106"
										},
										{
											"begin": 2362,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2504,
											"end": 2507,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "135"
										},
										{
											"begin": 2589,
											"end": 2591,
											"name": "PUSH",
											"source": 18,
											"value": "27"
										},
										{
											"begin": 2584,
											"end": 2587,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2525,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "104"
										},
										{
											"begin": 2525,
											"end": 2592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2525,
											"end": 2592,
											"name": "tag",
											"source": 18,
											"value": "135"
										},
										{
											"begin": 2525,
											"end": 2592,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2518,
											"end": 2592,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2518,
											"end": 2592,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2601,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "136"
										},
										{
											"begin": 2690,
											"end": 2693,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2601,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "105"
										},
										{
											"begin": 2601,
											"end": 2694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2601,
											"end": 2694,
											"name": "tag",
											"source": 18,
											"value": "136"
										},
										{
											"begin": 2601,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2719,
											"end": 2721,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2714,
											"end": 2717,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2710,
											"end": 2722,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2703,
											"end": 2722,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2703,
											"end": 2722,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2362,
											"end": 2728,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2362,
											"end": 2728,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2362,
											"end": 2728,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2362,
											"end": 2728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2734,
											"end": 3153,
											"name": "tag",
											"source": 18,
											"value": "69"
										},
										{
											"begin": 2734,
											"end": 3153,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2900,
											"end": 2904,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2938,
											"end": 2940,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2927,
											"end": 2936,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2923,
											"end": 2941,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2915,
											"end": 2941,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2915,
											"end": 2941,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2987,
											"end": 2996,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2981,
											"end": 2985,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2977,
											"end": 2997,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2973,
											"end": 2974,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2962,
											"end": 2971,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2958,
											"end": 2975,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2951,
											"end": 2998,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3015,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "138"
										},
										{
											"begin": 3141,
											"end": 3145,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3015,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "106"
										},
										{
											"begin": 3015,
											"end": 3146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3015,
											"end": 3146,
											"name": "tag",
											"source": 18,
											"value": "138"
										},
										{
											"begin": 3015,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3007,
											"end": 3146,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3007,
											"end": 3146,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2734,
											"end": 3153,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2734,
											"end": 3153,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2734,
											"end": 3153,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2734,
											"end": 3153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Approval_Contracts/AddressManager.sol",
								"contracts/Approval_Contracts/BusNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addCompanyAddress(address)": "0a7c358d",
							"addCoordinatorAddress(address)": "0694316b",
							"addGovernmentAddress(address)": "c5072a31",
							"companyAddresses(address)": "ead7934f",
							"coordinatorAddresses(address)": "504b19cb",
							"governmentAddresses(address)": "cd33c38f",
							"isCompanyAddressAllowed(address)": "dbba103a",
							"isCoordinatorAddressAllowed(address)": "4b86bd3d",
							"isGovernmentAddressAllowed(address)": "fd8cdd32",
							"owner()": "8da5cb5b",
							"removeCompanyAddress(address)": "43292f6e",
							"removeCoordinatorAddress(address)": "e0f9433d",
							"removeGovernmentAddress(address)": "d582ccac"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addCompanyAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addCoordinatorAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addGovernmentAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"companyAddresses\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"coordinatorAddresses\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"governmentAddresses\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isCompanyAddressAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isCoordinatorAddressAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isGovernmentAddressAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeCompanyAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeCoordinatorAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeGovernmentAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Approval_Contracts/AddressManager.sol\":\"AddressManager\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Approval_Contracts/AddressManager.sol\":{\"keccak256\":\"0x398b6dbb5bd58ee0396112ca88d5a6391cc90c326bd80eea33a39219e3c6674b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://49c8470ded39cf3225b6a8bfc9112d4e4aac95a73bf87567bfa0bca3b8305450\",\"dweb:/ipfs/QmV9e4w74EkzZCyiycT5g4pAEpunz6qEL6KXLnEeFt257C\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3024,
								"contract": "contracts/Approval_Contracts/AddressManager.sol:AddressManager",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 3028,
								"contract": "contracts/Approval_Contracts/AddressManager.sol:AddressManager",
								"label": "companyAddresses",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 3032,
								"contract": "contracts/Approval_Contracts/AddressManager.sol:AddressManager",
								"label": "coordinatorAddresses",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 3036,
								"contract": "contracts/Approval_Contracts/AddressManager.sol:AddressManager",
								"label": "governmentAddresses",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Approval_Contracts/BusNFT.sol": {
				"BusNft": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addressManagerAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "addressManagerAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "busId",
									"type": "uint256"
								}
							],
							"name": "getNftForApprovedBus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "companyId",
									"type": "uint256"
								}
							],
							"name": "getNftsByCompany",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "tokenURI",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "busId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "companyId",
									"type": "uint256"
								}
							],
							"name": "mintNFTForApprovedBus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Approval_Contracts/BusNFT.sol\":276:2100  contract BusNft is ERC721URIStorage {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Approval_Contracts/BusNFT.sol\":654:787  constructor(address _addressManagerAddress) ERC721(\"BusNFT\", \"BUS\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x06\n  dup2\n  mstore\n  0x20\n  add\n  0x4275734e46540000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4255530000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/Approval_Contracts/BusNFT.sol\":757:779  _addressManagerAddress */\n  dup1\n    /* \"contracts/Approval_Contracts/BusNFT.sol\":733:754  addressManagerAddress */\n  0x08\n  0x00\n    /* \"contracts/Approval_Contracts/BusNFT.sol\":733:779  addressManagerAddress = _addressManagerAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Approval_Contracts/BusNFT.sol\":654:787  constructor(address _addressManagerAddress) ERC721(\"BusNFT\", \"BUS\") {... */\n  pop\n    /* \"contracts/Approval_Contracts/BusNFT.sol\":276:2100  contract BusNft is ERC721URIStorage {... */\n  jump(tag_11)\n    /* \"#utility.yul\":88:205   */\ntag_13:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_15:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_16:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_45\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_15\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_17:\n    /* \"#utility.yul\":641:665   */\n  tag_47\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_16\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_48\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_48:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_18:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_50\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_17\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_53\n  tag_13\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":932:1051   */\ntag_52:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_54\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_18\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_19:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_20:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_21:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_22:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_59\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_59:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_61\n  tag_21\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1909:1993   */\ntag_60:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_23:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_24:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_25:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_26:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_66\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_25\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2624:2663   */\n  tag_67\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_25\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_27:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_28:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_29:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_71\n    /* \"#utility.yul\":3013:3047   */\n  tag_72\n    /* \"#utility.yul\":3022:3046   */\n  tag_73\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_27\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3013:3047   */\n  tag_28\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2995:3048   */\n  tag_27\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_30:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_31:\n    /* \"#utility.yul\":3251:3290   */\n  tag_76\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_29\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3312:3403   */\n  tag_77\n    /* \"#utility.yul\":3361:3402   */\n  tag_78\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_30\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_26\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_32:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_33:\n    /* \"#utility.yul\":3572:3604   */\n  tag_81\n  tag_32\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3613:3678   */\n  tag_82\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_31\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_34:\n    /* \"#utility.yul\":3750:3870   */\ntag_84:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_87\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_33\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_84)\ntag_86:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_35:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_90\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_23\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":4101:4130   */\n  tag_91\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_24\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_92:\n    /* \"#utility.yul\":4328:4408   */\n  tag_93\n    /* \"#utility.yul\":4384:4406   */\n  tag_94\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_24\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_34\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_89:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_36:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_37:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_97\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_36\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_38:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_99\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_37\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_8:\n    /* \"#utility.yul\":5145:5182   */\n  tag_101\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_19\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_103\n  tag_20\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5233:5289   */\ntag_102:\n    /* \"#utility.yul\":5313:5351   */\n  tag_104\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_22\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5398:5465   */\n  tag_105\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_35\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_107\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_108\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_108:\n    /* \"#utility.yul\":6339:6406   */\n  tag_109\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_38\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_106)\n    /* \"#utility.yul\":5560:6178   */\ntag_107:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_110\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_23\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_111:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_111)\ntag_113:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_115\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_37\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_114:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_106:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Approval_Contracts/BusNFT.sol\":276:2100  contract BusNft is ERC721URIStorage {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":276:2100  contract BusNft is ERC721URIStorage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe524f2d5\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8c8c3089\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9bc60154\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x23b872dd\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2ae9915b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_3:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":406:442  address public addressManagerAddress */\n    tag_8:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_9:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_10:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1701:1892  function getNftForApprovedBus(uint256 busId) public view returns (uint256) {... */\n    tag_12:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_13:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1955:2093  function getNftsByCompany(uint256 companyId) public view returns (uint256[] memory) {... */\n    tag_14:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_15:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_16:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_17:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1069:1632  function mintNFTForApprovedBus(address to, string memory tokenURI, uint256 busId, uint256 companyId) public onlyGovernment returns (uint256) {... */\n    tag_18:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      tag_90\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_19:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1039:1043  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":760:770  0x49064906 */\n      0x49064906\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":753:771  bytes4(0x49064906) */\n      0xe0\n      shl\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1097  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1073  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1097  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1137  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      dup1\n      tag_98\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1137  super.supportsInterface(interfaceId) */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1125:1136  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1124  super.supportsInterface */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1137  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1137  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1055:1137  return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_102\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_104\n      swap1\n      tag_103\n      jump\t// in\n    tag_104:\n      dup1\n      iszero\n      tag_105\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_106\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_105)\n    tag_106:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_107:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_107\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_105:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_109:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3636:3643  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3635  _getApproved */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3616:3644  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3426  _msgSender */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4251:4252  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4239  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_119\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4593  _msgSender */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_124\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4675:4679  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4681:4688  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4690:4703  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":406:442  address public addressManagerAddress */\n    tag_48:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_82\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2267:2296  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2023:2024  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2011  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_132\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2115:2120  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2098:2121  return _balances[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1701:1892  function getNftForApprovedBus(uint256 busId) public view returns (uint256) {... */\n    tag_65:\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1767:1774  uint256 */\n      0x00\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1820:1821  0 */\n      dup1\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1795:1809  busIdToTokenId */\n      0x09\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1795:1816  busIdToTokenId[busId] */\n      0x00\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1810:1815  busId */\n      dup5\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1795:1816  busIdToTokenId[busId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1795:1821  busIdToTokenId[busId] != 0 */\n      sub\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1787:1845  require(busIdToTokenId[busId] != 0, \"No NFT for this bus\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1863:1877  busIdToTokenId */\n      0x09\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1863:1884  busIdToTokenId[busId] */\n      0x00\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1878:1883  busId */\n      dup4\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1863:1884  busIdToTokenId[busId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1856:1884  return busIdToTokenId[busId] */\n      swap1\n      pop\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1701:1892  function getNftForApprovedBus(uint256 busId) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_139\n      swap1\n      tag_103\n      jump\t// in\n    tag_139:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_140\n      swap1\n      tag_103\n      jump\t// in\n    tag_140:\n      dup1\n      iszero\n      tag_141\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_142\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_141)\n    tag_142:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_143:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_143\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_141:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1955:2093  function getNftsByCompany(uint256 companyId) public view returns (uint256[] memory) {... */\n    tag_72:\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":2021:2037  uint256[] memory */\n      0x60\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":2057:2074  companyToTokenIds */\n      0x0a\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":2057:2085  companyToTokenIds[companyId] */\n      0x00\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":2075:2084  companyId */\n      dup4\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":2057:2085  companyToTokenIds[companyId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":2050:2085  return companyToTokenIds[companyId] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_145\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_146:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_146\n      jumpi\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1955:2093  function getNftsByCompany(uint256 companyId) public view returns (uint256[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3832  _msgSender */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_46\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1283:1296  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1330  _requireOwned(tokenId) */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1322:1329  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1321  _requireOwned */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1330  _requireOwned(tokenId) */\n      jump\t// in\n    tag_156:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1341:1364  string memory _tokenURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1377  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1386  _tokenURIs[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1378:1385  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1386  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1341:1386  string memory _tokenURI = _tokenURIs[tokenId] */\n      dup1\n      sload\n      tag_157\n      swap1\n      tag_103\n      jump\t// in\n    tag_157:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_158\n      swap1\n      tag_103\n      jump\t// in\n    tag_158:\n      dup1\n      iszero\n      tag_159\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_160\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_159)\n    tag_160:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_161:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_161\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_159:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1396:1414  string memory base */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1427  _baseURI() */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1425  _baseURI */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1427  _baseURI() */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1396:1427  string memory base = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1522:1523  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1506:1510  base */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1500:1518  bytes(base).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1500:1523  bytes(base).length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1496:1566  if (bytes(base).length == 0) {... */\n      tag_164\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1546:1555  _tokenURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1539:1555  return _tokenURI */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_155)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1496:1566  if (bytes(base).length == 0) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1691:1692  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1671:1680  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1665:1688  bytes(_tokenURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1665:1692  bytes(_tokenURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1661:1756  if (bytes(_tokenURI).length > 0) {... */\n      iszero\n      tag_165\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1729:1733  base */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1735:1744  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1715:1745  string.concat(base, _tokenURI) */\n      add(0x20, mload(0x40))\n      tag_166\n      swap3\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1708:1745  return string.concat(base, _tokenURI) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_155)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1661:1756  if (bytes(_tokenURI).length > 0) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1796  super.tokenURI(tokenId) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1788:1795  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1787  super.tokenURI */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1796  super.tokenURI(tokenId) */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1766:1796  return super.tokenURI(tokenId) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_155:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1069:1632  function mintNFTForApprovedBus(address to, string memory tokenURI, uint256 busId, uint256 companyId) public onlyGovernment returns (uint256) {... */\n    tag_90:\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1201:1208  uint256 */\n      0x00\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":855:876  addressManagerAddress */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":840:904  AddressManager(addressManagerAddress).isGovernmentAddressAllowed */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfd8cdd32\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":905:915  msg.sender */\n      caller\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":840:916  AddressManager(addressManagerAddress).isGovernmentAddressAllowed(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_171:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_173\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_173:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_174\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":832:960  require(AddressManager(addressManagerAddress).isGovernmentAddressAllowed(msg.sender), \"Caller is not an authorized government.\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_176:\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1221:1244  _nftTokenId.increment() */\n      tag_180\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1221:1232  _nftTokenId */\n      0x07\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1221:1242  _nftTokenId.increment */\n      tag_181\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1221:1244  _nftTokenId.increment() */\n      jump\t// in\n    tag_180:\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1255:1272  uint256 newItemId */\n      0x00\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1275:1296  _nftTokenId.current() */\n      tag_182\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1275:1286  _nftTokenId */\n      0x07\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1275:1294  _nftTokenId.current */\n      tag_183\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1275:1296  _nftTokenId.current() */\n      jump\t// in\n    tag_182:\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1255:1296  uint256 newItemId = _nftTokenId.current() */\n      swap1\n      pop\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1309:1329  _mint(to, newItemId) */\n      tag_184\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1315:1317  to */\n      dup7\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1319:1328  newItemId */\n      dup3\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1309:1314  _mint */\n      tag_185\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1309:1329  _mint(to, newItemId) */\n      jump\t// in\n    tag_184:\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1340:1373  _setTokenURI(newItemId, tokenURI) */\n      tag_186\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1353:1362  newItemId */\n      dup2\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1364:1372  tokenURI */\n      dup7\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1340:1352  _setTokenURI */\n      tag_187\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1340:1373  _setTokenURI(newItemId, tokenURI) */\n      jump\t// in\n    tag_186:\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1471:1480  newItemId */\n      dup1\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1447:1461  busIdToTokenId */\n      0x09\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1447:1468  busIdToTokenId[busId] */\n      0x00\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1462:1467  busId */\n      dup7\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1447:1468  busIdToTokenId[busId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1447:1480  busIdToTokenId[busId] = newItemId */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1551:1568  companyToTokenIds */\n      0x0a\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1551:1579  companyToTokenIds[companyId] */\n      0x00\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1569:1578  companyId */\n      dup5\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1551:1579  companyToTokenIds[companyId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1585:1594  newItemId */\n      dup2\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1551:1595  companyToTokenIds[companyId].push(newItemId) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1615:1624  newItemId */\n      dup1\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1608:1624  return newItemId */\n      swap2\n      pop\n      pop\n        /* \"contracts/Approval_Contracts/BusNFT.sol\":1069:1632  function mintNFTForApprovedBus(address to, string memory tokenURI, uint256 busId, uint256 companyId) public onlyGovernment returns (uint256) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4058:4063  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4065:4073  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4032:4074  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1713:1738  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1709  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_191\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1769:1802  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1765  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_192\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1842:1853  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1841  super.supportsInterface */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16233  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16245:16252  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16244  _ownerOf */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16253  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16284:16285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16272  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_198\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16332:16339  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16367:16372  owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16360:16372  return owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6050:6057  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6027:6058  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_203\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_204\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8955  address from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8967:8974  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8966  _ownerOf */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8975  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9051:9052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9039  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_207\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_208\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_209\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9177:9178  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9165  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_210\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_211\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_204\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9387:9388  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9378:9382  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9441:9442  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9429  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_212\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9497:9499  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9559:9561  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9548:9555  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9596:9603  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9592:9594  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9586:9590  from */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9615:9626  return from */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15718:15719  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15706  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_214\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15765:15773  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15832:15840  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15813:15818  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15820:15828  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15877:15885  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15875  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15887:15895  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_216\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17051:17052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17036  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      iszero\n      tag_218\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17088:17090  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      tag_219\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17119  _msgSender */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_222\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_223\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_223:\n      0x01\n    tag_222:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_225\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_230\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_229)\n    tag_230:\n      0x60\n      swap2\n      pop\n    tag_229:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_231\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17452:17454  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17200:17241  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17196  retval */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_235\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17294:17296  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3225:3238  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3250:3259  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2741:2754  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2780:2787  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2779  _requireOwned */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      jump\t// in\n    tag_239:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2820  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      tag_240\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2831  _baseURI */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      jump\t// in\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2833  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2875  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2856:2863  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2871  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2875  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_241\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_242)\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2892:2899  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2908  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2917  tokenId.toString */\n      tag_244\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      jump\t// in\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2878:2920  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_245\n      swap3\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2843:2925  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1039  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1046  counter._value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":892:899  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:925  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      0x00\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":911:932  return counter._value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10036:10037  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10024  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10091:10092  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10146:10148  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10150:10157  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10167:10168  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10145  _update */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10170  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10209:10210  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10197  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n      tag_252\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10262:10263  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_253\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_253:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n    tag_252:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10008:10282  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1922:2089  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2035:2044  _tokenURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2023  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2032  _tokenURIs[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2024:2031  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2032  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2044  _tokenURIs[tokenId] = _tokenURI */\n      swap1\n      dup2\n      tag_255\n      swap2\n      swap1\n      tag_256\n      jump\t// in\n    tag_255:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2059:2082  MetadataUpdate(tokenId) */\n      0xf8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2074:2081  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2059:2082  MetadataUpdate(tokenId) */\n      mload(0x40)\n      tag_257\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1922:2089  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5773:5780  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5807:5814  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5792:5815  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_261\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14909:14910  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14897  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_262\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_263\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15109:15110  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15097  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_264\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_265\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_266\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_267\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15211:15215  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_268\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_269\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_262:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15373:15375  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15362:15369  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_271\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_272\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_273\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7269:7270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7257  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_274\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7328  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_275\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7402:7409  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7411:7418  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_277\n      swap3\n      swap2\n      swap1\n      tag_278\n      jump\t// in\n    tag_277:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_280\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_281\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_280:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_282\n      jumpi\n      tag_283\n      tag_284\n      jump\t// in\n    tag_283:\n    tag_282:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_285\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_285:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":975:981  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":967:982  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":959:965  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":948:983  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1021  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      iszero\n      tag_287\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1180:1190  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1168:1173  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1154:1157  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      dup2\n      tag_288\n      jumpi\n      tag_289\n      tag_290\n      jump\t// in\n    tag_289:\n    tag_288:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1269:1270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1265  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1270  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_286\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_287:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1305:1318  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6533:6534  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6521  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_293\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_294\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_295\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_295:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n    tag_294:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_296\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6640  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      tag_297\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6621:6628  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6620  _getApproved */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      jump\t// in\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n    tag_293:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_281:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12300  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12303:12304  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12304  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12351:12359  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12347  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_299\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12388:12396  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_300\n      jumpi\n      tag_301\n      tag_290\n      jump\t// in\n    tag_301:\n    tag_300:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_299:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_302\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_303\n      jumpi\n      tag_304\n      tag_290\n      jump\t// in\n    tag_304:\n    tag_303:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_302:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_305\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_306\n      jumpi\n      tag_307\n      tag_290\n      jump\t// in\n    tag_307:\n    tag_306:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_305:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_308\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_309\n      jumpi\n      tag_310\n      tag_290\n      jump\t// in\n    tag_310:\n    tag_309:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_308:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_311\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_312\n      jumpi\n      tag_313\n      tag_290\n      jump\t// in\n    tag_313:\n    tag_312:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_311:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_314\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_315\n      jumpi\n      tag_316\n      tag_290\n      jump\t// in\n    tag_316:\n    tag_315:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_314:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_317\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n    tag_317:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13110:13123  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_318:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_319:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_320:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_321:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_322:\n        /* \"#utility.yul\":561:584   */\n      tag_393\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_321\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_394\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_394:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_323:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_396\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_322\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_25:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_399\n      tag_319\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":833:952   */\n    tag_398:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_400\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_323\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_324:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_325:\n        /* \"#utility.yul\":1268:1289   */\n      tag_403\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_324\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_28:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_405\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_325\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_326:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_327:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_328:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_409:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_409)\n    tag_411:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_329:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_330:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_414\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_326\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":2329:2400   */\n      tag_415\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_327\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_416\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_328\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":2499:2528   */\n      tag_417\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_329\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_32:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_419\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_330\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_331:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_332:\n        /* \"#utility.yul\":3016:3040   */\n      tag_422\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_331\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_423\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_423:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_333:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_425\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_332\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_35:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_428\n      tag_319\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":3292:3411   */\n    tag_427:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_429\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_333\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_334:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_335:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_432\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_334\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_336:\n        /* \"#utility.yul\":3872:3896   */\n      tag_434\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_335\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_38:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_436\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_336\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_337:\n        /* \"#utility.yul\":4210:4234   */\n      tag_438\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_335\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_439\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_439:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_338:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_441\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_337\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_41:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_444\n      tag_319\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":4503:4622   */\n    tag_443:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_445\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_338\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_446\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_333\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5509   */\n    tag_45:\n        /* \"#utility.yul\":4967:4973   */\n      0x00\n        /* \"#utility.yul\":4975:4981   */\n      dup1\n        /* \"#utility.yul\":4983:4989   */\n      0x00\n        /* \"#utility.yul\":5032:5034   */\n      0x60\n        /* \"#utility.yul\":5020:5029   */\n      dup5\n        /* \"#utility.yul\":5011:5018   */\n      dup7\n        /* \"#utility.yul\":5007:5030   */\n      sub\n        /* \"#utility.yul\":5003:5035   */\n      slt\n        /* \"#utility.yul\":5000:5119   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":5038:5117   */\n      tag_449\n      tag_319\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":5000:5119   */\n    tag_448:\n        /* \"#utility.yul\":5158:5159   */\n      0x00\n        /* \"#utility.yul\":5183:5236   */\n      tag_450\n        /* \"#utility.yul\":5228:5235   */\n      dup7\n        /* \"#utility.yul\":5219:5225   */\n      dup3\n        /* \"#utility.yul\":5208:5217   */\n      dup8\n        /* \"#utility.yul\":5204:5226   */\n      add\n        /* \"#utility.yul\":5183:5236   */\n      tag_338\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":5173:5236   */\n      swap4\n      pop\n        /* \"#utility.yul\":5129:5246   */\n      pop\n        /* \"#utility.yul\":5285:5287   */\n      0x20\n        /* \"#utility.yul\":5311:5364   */\n      tag_451\n        /* \"#utility.yul\":5356:5363   */\n      dup7\n        /* \"#utility.yul\":5347:5353   */\n      dup3\n        /* \"#utility.yul\":5336:5345   */\n      dup8\n        /* \"#utility.yul\":5332:5354   */\n      add\n        /* \"#utility.yul\":5311:5364   */\n      tag_338\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":5301:5364   */\n      swap3\n      pop\n        /* \"#utility.yul\":5256:5374   */\n      pop\n        /* \"#utility.yul\":5413:5415   */\n      0x40\n        /* \"#utility.yul\":5439:5492   */\n      tag_452\n        /* \"#utility.yul\":5484:5491   */\n      dup7\n        /* \"#utility.yul\":5475:5481   */\n      dup3\n        /* \"#utility.yul\":5464:5473   */\n      dup8\n        /* \"#utility.yul\":5460:5482   */\n      add\n        /* \"#utility.yul\":5439:5492   */\n      tag_333\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":5429:5492   */\n      swap2\n      pop\n        /* \"#utility.yul\":5384:5502   */\n      pop\n        /* \"#utility.yul\":4890:5509   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5515:5844   */\n    tag_59:\n        /* \"#utility.yul\":5574:5580   */\n      0x00\n        /* \"#utility.yul\":5623:5625   */\n      0x20\n        /* \"#utility.yul\":5611:5620   */\n      dup3\n        /* \"#utility.yul\":5602:5609   */\n      dup5\n        /* \"#utility.yul\":5598:5621   */\n      sub\n        /* \"#utility.yul\":5594:5626   */\n      slt\n        /* \"#utility.yul\":5591:5710   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":5629:5708   */\n      tag_455\n      tag_319\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":5591:5710   */\n    tag_454:\n        /* \"#utility.yul\":5749:5750   */\n      0x00\n        /* \"#utility.yul\":5774:5827   */\n      tag_456\n        /* \"#utility.yul\":5819:5826   */\n      dup5\n        /* \"#utility.yul\":5810:5816   */\n      dup3\n        /* \"#utility.yul\":5799:5808   */\n      dup6\n        /* \"#utility.yul\":5795:5817   */\n      add\n        /* \"#utility.yul\":5774:5827   */\n      tag_338\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":5764:5827   */\n      swap2\n      pop\n        /* \"#utility.yul\":5720:5837   */\n      pop\n        /* \"#utility.yul\":5515:5844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5850:5968   */\n    tag_339:\n        /* \"#utility.yul\":5937:5961   */\n      tag_458\n        /* \"#utility.yul\":5955:5960   */\n      dup2\n        /* \"#utility.yul\":5937:5961   */\n      tag_331\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":5932:5935   */\n      dup3\n        /* \"#utility.yul\":5925:5962   */\n      mstore\n        /* \"#utility.yul\":5850:5968   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5974:6196   */\n    tag_62:\n        /* \"#utility.yul\":6067:6071   */\n      0x00\n        /* \"#utility.yul\":6105:6107   */\n      0x20\n        /* \"#utility.yul\":6094:6103   */\n      dup3\n        /* \"#utility.yul\":6090:6108   */\n      add\n        /* \"#utility.yul\":6082:6108   */\n      swap1\n      pop\n        /* \"#utility.yul\":6118:6189   */\n      tag_460\n        /* \"#utility.yul\":6186:6187   */\n      0x00\n        /* \"#utility.yul\":6175:6184   */\n      dup4\n        /* \"#utility.yul\":6171:6188   */\n      add\n        /* \"#utility.yul\":6162:6168   */\n      dup5\n        /* \"#utility.yul\":6118:6189   */\n      tag_339\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":5974:6196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6202:6316   */\n    tag_340:\n        /* \"#utility.yul\":6269:6275   */\n      0x00\n        /* \"#utility.yul\":6303:6308   */\n      dup2\n        /* \"#utility.yul\":6297:6309   */\n      mload\n        /* \"#utility.yul\":6287:6309   */\n      swap1\n      pop\n        /* \"#utility.yul\":6202:6316   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6322:6506   */\n    tag_341:\n        /* \"#utility.yul\":6421:6432   */\n      0x00\n        /* \"#utility.yul\":6455:6461   */\n      dup3\n        /* \"#utility.yul\":6450:6453   */\n      dup3\n        /* \"#utility.yul\":6443:6462   */\n      mstore\n        /* \"#utility.yul\":6495:6499   */\n      0x20\n        /* \"#utility.yul\":6490:6493   */\n      dup3\n        /* \"#utility.yul\":6486:6500   */\n      add\n        /* \"#utility.yul\":6471:6500   */\n      swap1\n      pop\n        /* \"#utility.yul\":6322:6506   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6512:6644   */\n    tag_342:\n        /* \"#utility.yul\":6579:6583   */\n      0x00\n        /* \"#utility.yul\":6602:6605   */\n      dup2\n        /* \"#utility.yul\":6594:6605   */\n      swap1\n      pop\n        /* \"#utility.yul\":6632:6636   */\n      0x20\n        /* \"#utility.yul\":6627:6630   */\n      dup3\n        /* \"#utility.yul\":6623:6637   */\n      add\n        /* \"#utility.yul\":6615:6637   */\n      swap1\n      pop\n        /* \"#utility.yul\":6512:6644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6650:6758   */\n    tag_343:\n        /* \"#utility.yul\":6727:6751   */\n      tag_465\n        /* \"#utility.yul\":6745:6750   */\n      dup2\n        /* \"#utility.yul\":6727:6751   */\n      tag_331\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":6722:6725   */\n      dup3\n        /* \"#utility.yul\":6715:6752   */\n      mstore\n        /* \"#utility.yul\":6650:6758   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6764:6943   */\n    tag_344:\n        /* \"#utility.yul\":6833:6843   */\n      0x00\n        /* \"#utility.yul\":6854:6900   */\n      tag_467\n        /* \"#utility.yul\":6896:6899   */\n      dup4\n        /* \"#utility.yul\":6888:6894   */\n      dup4\n        /* \"#utility.yul\":6854:6900   */\n      tag_343\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":6932:6936   */\n      0x20\n        /* \"#utility.yul\":6927:6930   */\n      dup4\n        /* \"#utility.yul\":6923:6937   */\n      add\n        /* \"#utility.yul\":6909:6937   */\n      swap1\n      pop\n        /* \"#utility.yul\":6764:6943   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6949:7062   */\n    tag_345:\n        /* \"#utility.yul\":7019:7023   */\n      0x00\n        /* \"#utility.yul\":7051:7055   */\n      0x20\n        /* \"#utility.yul\":7046:7049   */\n      dup3\n        /* \"#utility.yul\":7042:7056   */\n      add\n        /* \"#utility.yul\":7034:7056   */\n      swap1\n      pop\n        /* \"#utility.yul\":6949:7062   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7098:7830   */\n    tag_346:\n        /* \"#utility.yul\":7217:7220   */\n      0x00\n        /* \"#utility.yul\":7246:7300   */\n      tag_470\n        /* \"#utility.yul\":7294:7299   */\n      dup3\n        /* \"#utility.yul\":7246:7300   */\n      tag_340\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":7316:7402   */\n      tag_471\n        /* \"#utility.yul\":7395:7401   */\n      dup2\n        /* \"#utility.yul\":7390:7393   */\n      dup6\n        /* \"#utility.yul\":7316:7402   */\n      tag_341\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":7309:7402   */\n      swap4\n      pop\n        /* \"#utility.yul\":7426:7482   */\n      tag_472\n        /* \"#utility.yul\":7476:7481   */\n      dup4\n        /* \"#utility.yul\":7426:7482   */\n      tag_342\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":7505:7512   */\n      dup1\n        /* \"#utility.yul\":7536:7537   */\n      0x00\n        /* \"#utility.yul\":7521:7805   */\n    tag_473:\n        /* \"#utility.yul\":7546:7552   */\n      dup4\n        /* \"#utility.yul\":7543:7544   */\n      dup2\n        /* \"#utility.yul\":7540:7553   */\n      lt\n        /* \"#utility.yul\":7521:7805   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":7622:7628   */\n      dup2\n        /* \"#utility.yul\":7616:7629   */\n      mload\n        /* \"#utility.yul\":7649:7712   */\n      tag_476\n        /* \"#utility.yul\":7708:7711   */\n      dup9\n        /* \"#utility.yul\":7693:7706   */\n      dup3\n        /* \"#utility.yul\":7649:7712   */\n      tag_344\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":7642:7712   */\n      swap8\n      pop\n        /* \"#utility.yul\":7735:7795   */\n      tag_477\n        /* \"#utility.yul\":7788:7794   */\n      dup4\n        /* \"#utility.yul\":7735:7795   */\n      tag_345\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":7725:7795   */\n      swap3\n      pop\n        /* \"#utility.yul\":7581:7805   */\n      pop\n        /* \"#utility.yul\":7568:7569   */\n      0x01\n        /* \"#utility.yul\":7565:7566   */\n      dup2\n        /* \"#utility.yul\":7561:7570   */\n      add\n        /* \"#utility.yul\":7556:7570   */\n      swap1\n      pop\n        /* \"#utility.yul\":7521:7805   */\n      jump(tag_473)\n    tag_475:\n        /* \"#utility.yul\":7525:7539   */\n      pop\n        /* \"#utility.yul\":7821:7824   */\n      dup6\n        /* \"#utility.yul\":7814:7824   */\n      swap4\n      pop\n        /* \"#utility.yul\":7222:7830   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":7098:7830   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7836:8209   */\n    tag_74:\n        /* \"#utility.yul\":7979:7983   */\n      0x00\n        /* \"#utility.yul\":8017:8019   */\n      0x20\n        /* \"#utility.yul\":8006:8015   */\n      dup3\n        /* \"#utility.yul\":8002:8020   */\n      add\n        /* \"#utility.yul\":7994:8020   */\n      swap1\n      pop\n        /* \"#utility.yul\":8066:8075   */\n      dup2\n        /* \"#utility.yul\":8060:8064   */\n      dup2\n        /* \"#utility.yul\":8056:8076   */\n      sub\n        /* \"#utility.yul\":8052:8053   */\n      0x00\n        /* \"#utility.yul\":8041:8050   */\n      dup4\n        /* \"#utility.yul\":8037:8054   */\n      add\n        /* \"#utility.yul\":8030:8077   */\n      mstore\n        /* \"#utility.yul\":8094:8202   */\n      tag_479\n        /* \"#utility.yul\":8197:8201   */\n      dup2\n        /* \"#utility.yul\":8188:8194   */\n      dup5\n        /* \"#utility.yul\":8094:8202   */\n      tag_346\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":8086:8202   */\n      swap1\n      pop\n        /* \"#utility.yul\":7836:8209   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8215:8331   */\n    tag_347:\n        /* \"#utility.yul\":8285:8306   */\n      tag_481\n        /* \"#utility.yul\":8300:8305   */\n      dup2\n        /* \"#utility.yul\":8285:8306   */\n      tag_324\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":8278:8283   */\n      dup2\n        /* \"#utility.yul\":8275:8307   */\n      eq\n        /* \"#utility.yul\":8265:8325   */\n      tag_482\n      jumpi\n        /* \"#utility.yul\":8321:8322   */\n      0x00\n        /* \"#utility.yul\":8318:8319   */\n      dup1\n        /* \"#utility.yul\":8311:8323   */\n      revert\n        /* \"#utility.yul\":8265:8325   */\n    tag_482:\n        /* \"#utility.yul\":8215:8331   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8337:8470   */\n    tag_348:\n        /* \"#utility.yul\":8380:8385   */\n      0x00\n        /* \"#utility.yul\":8418:8424   */\n      dup2\n        /* \"#utility.yul\":8405:8425   */\n      calldataload\n        /* \"#utility.yul\":8396:8425   */\n      swap1\n      pop\n        /* \"#utility.yul\":8434:8464   */\n      tag_484\n        /* \"#utility.yul\":8458:8463   */\n      dup2\n        /* \"#utility.yul\":8434:8464   */\n      tag_347\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":8337:8470   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8476:8944   */\n    tag_77:\n        /* \"#utility.yul\":8541:8547   */\n      0x00\n        /* \"#utility.yul\":8549:8555   */\n      dup1\n        /* \"#utility.yul\":8598:8600   */\n      0x40\n        /* \"#utility.yul\":8586:8595   */\n      dup4\n        /* \"#utility.yul\":8577:8584   */\n      dup6\n        /* \"#utility.yul\":8573:8596   */\n      sub\n        /* \"#utility.yul\":8569:8601   */\n      slt\n        /* \"#utility.yul\":8566:8685   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":8604:8683   */\n      tag_487\n      tag_319\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":8566:8685   */\n    tag_486:\n        /* \"#utility.yul\":8724:8725   */\n      0x00\n        /* \"#utility.yul\":8749:8802   */\n      tag_488\n        /* \"#utility.yul\":8794:8801   */\n      dup6\n        /* \"#utility.yul\":8785:8791   */\n      dup3\n        /* \"#utility.yul\":8774:8783   */\n      dup7\n        /* \"#utility.yul\":8770:8792   */\n      add\n        /* \"#utility.yul\":8749:8802   */\n      tag_338\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":8739:8802   */\n      swap3\n      pop\n        /* \"#utility.yul\":8695:8812   */\n      pop\n        /* \"#utility.yul\":8851:8853   */\n      0x20\n        /* \"#utility.yul\":8877:8927   */\n      tag_489\n        /* \"#utility.yul\":8919:8926   */\n      dup6\n        /* \"#utility.yul\":8910:8916   */\n      dup3\n        /* \"#utility.yul\":8899:8908   */\n      dup7\n        /* \"#utility.yul\":8895:8917   */\n      add\n        /* \"#utility.yul\":8877:8927   */\n      tag_348\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":8867:8927   */\n      swap2\n      pop\n        /* \"#utility.yul\":8822:8937   */\n      pop\n        /* \"#utility.yul\":8476:8944   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8950:9067   */\n    tag_349:\n        /* \"#utility.yul\":9059:9060   */\n      0x00\n        /* \"#utility.yul\":9056:9057   */\n      dup1\n        /* \"#utility.yul\":9049:9061   */\n      revert\n        /* \"#utility.yul\":9073:9190   */\n    tag_350:\n        /* \"#utility.yul\":9182:9183   */\n      0x00\n        /* \"#utility.yul\":9179:9180   */\n      dup1\n        /* \"#utility.yul\":9172:9184   */\n      revert\n        /* \"#utility.yul\":9196:9376   */\n    tag_284:\n        /* \"#utility.yul\":9244:9321   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9241:9242   */\n      0x00\n        /* \"#utility.yul\":9234:9322   */\n      mstore\n        /* \"#utility.yul\":9341:9345   */\n      0x41\n        /* \"#utility.yul\":9338:9339   */\n      0x04\n        /* \"#utility.yul\":9331:9346   */\n      mstore\n        /* \"#utility.yul\":9365:9369   */\n      0x24\n        /* \"#utility.yul\":9362:9363   */\n      0x00\n        /* \"#utility.yul\":9355:9370   */\n      revert\n        /* \"#utility.yul\":9382:9663   */\n    tag_351:\n        /* \"#utility.yul\":9465:9492   */\n      tag_494\n        /* \"#utility.yul\":9487:9491   */\n      dup3\n        /* \"#utility.yul\":9465:9492   */\n      tag_329\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":9457:9463   */\n      dup2\n        /* \"#utility.yul\":9453:9493   */\n      add\n        /* \"#utility.yul\":9595:9601   */\n      dup2\n        /* \"#utility.yul\":9583:9593   */\n      dup2\n        /* \"#utility.yul\":9580:9602   */\n      lt\n        /* \"#utility.yul\":9559:9577   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9547:9557   */\n      dup3\n        /* \"#utility.yul\":9544:9578   */\n      gt\n        /* \"#utility.yul\":9541:9603   */\n      or\n        /* \"#utility.yul\":9538:9626   */\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":9606:9624   */\n      tag_496\n      tag_284\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":9538:9626   */\n    tag_495:\n        /* \"#utility.yul\":9646:9656   */\n      dup1\n        /* \"#utility.yul\":9642:9644   */\n      0x40\n        /* \"#utility.yul\":9635:9657   */\n      mstore\n        /* \"#utility.yul\":9425:9663   */\n      pop\n        /* \"#utility.yul\":9382:9663   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9669:9798   */\n    tag_352:\n        /* \"#utility.yul\":9703:9709   */\n      0x00\n        /* \"#utility.yul\":9730:9750   */\n      tag_498\n      tag_318\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":9720:9750   */\n      swap1\n      pop\n        /* \"#utility.yul\":9759:9792   */\n      tag_499\n        /* \"#utility.yul\":9787:9791   */\n      dup3\n        /* \"#utility.yul\":9779:9785   */\n      dup3\n        /* \"#utility.yul\":9759:9792   */\n      tag_351\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":9669:9798   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9804:10111   */\n    tag_353:\n        /* \"#utility.yul\":9865:9869   */\n      0x00\n        /* \"#utility.yul\":9955:9973   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9947:9953   */\n      dup3\n        /* \"#utility.yul\":9944:9974   */\n      gt\n        /* \"#utility.yul\":9941:9997   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":9977:9995   */\n      tag_502\n      tag_284\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":9941:9997   */\n    tag_501:\n        /* \"#utility.yul\":10015:10044   */\n      tag_503\n        /* \"#utility.yul\":10037:10043   */\n      dup3\n        /* \"#utility.yul\":10015:10044   */\n      tag_329\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":10007:10044   */\n      swap1\n      pop\n        /* \"#utility.yul\":10099:10103   */\n      0x20\n        /* \"#utility.yul\":10093:10097   */\n      dup2\n        /* \"#utility.yul\":10089:10104   */\n      add\n        /* \"#utility.yul\":10081:10104   */\n      swap1\n      pop\n        /* \"#utility.yul\":9804:10111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10117:10263   */\n    tag_354:\n        /* \"#utility.yul\":10214:10220   */\n      dup3\n        /* \"#utility.yul\":10209:10212   */\n      dup2\n        /* \"#utility.yul\":10204:10207   */\n      dup4\n        /* \"#utility.yul\":10191:10221   */\n      calldatacopy\n        /* \"#utility.yul\":10255:10256   */\n      0x00\n        /* \"#utility.yul\":10246:10252   */\n      dup4\n        /* \"#utility.yul\":10241:10244   */\n      dup4\n        /* \"#utility.yul\":10237:10253   */\n      add\n        /* \"#utility.yul\":10230:10257   */\n      mstore\n        /* \"#utility.yul\":10117:10263   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10269:10692   */\n    tag_355:\n        /* \"#utility.yul\":10346:10351   */\n      0x00\n        /* \"#utility.yul\":10371:10436   */\n      tag_506\n        /* \"#utility.yul\":10387:10435   */\n      tag_507\n        /* \"#utility.yul\":10428:10434   */\n      dup5\n        /* \"#utility.yul\":10387:10435   */\n      tag_353\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":10371:10436   */\n      tag_352\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":10362:10436   */\n      swap1\n      pop\n        /* \"#utility.yul\":10459:10465   */\n      dup3\n        /* \"#utility.yul\":10452:10457   */\n      dup2\n        /* \"#utility.yul\":10445:10466   */\n      mstore\n        /* \"#utility.yul\":10497:10501   */\n      0x20\n        /* \"#utility.yul\":10490:10495   */\n      dup2\n        /* \"#utility.yul\":10486:10502   */\n      add\n        /* \"#utility.yul\":10535:10538   */\n      dup5\n        /* \"#utility.yul\":10526:10532   */\n      dup5\n        /* \"#utility.yul\":10521:10524   */\n      dup5\n        /* \"#utility.yul\":10517:10533   */\n      add\n        /* \"#utility.yul\":10514:10539   */\n      gt\n        /* \"#utility.yul\":10511:10623   */\n      iszero\n      tag_508\n      jumpi\n        /* \"#utility.yul\":10542:10621   */\n      tag_509\n      tag_350\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":10511:10623   */\n    tag_508:\n        /* \"#utility.yul\":10632:10686   */\n      tag_510\n        /* \"#utility.yul\":10679:10685   */\n      dup5\n        /* \"#utility.yul\":10674:10677   */\n      dup3\n        /* \"#utility.yul\":10669:10672   */\n      dup6\n        /* \"#utility.yul\":10632:10686   */\n      tag_354\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":10352:10692   */\n      pop\n        /* \"#utility.yul\":10269:10692   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10711:11049   */\n    tag_356:\n        /* \"#utility.yul\":10766:10771   */\n      0x00\n        /* \"#utility.yul\":10815:10818   */\n      dup3\n        /* \"#utility.yul\":10808:10812   */\n      0x1f\n        /* \"#utility.yul\":10800:10806   */\n      dup4\n        /* \"#utility.yul\":10796:10813   */\n      add\n        /* \"#utility.yul\":10792:10819   */\n      slt\n        /* \"#utility.yul\":10782:10904   */\n      tag_512\n      jumpi\n        /* \"#utility.yul\":10823:10902   */\n      tag_513\n      tag_349\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":10782:10904   */\n    tag_512:\n        /* \"#utility.yul\":10940:10946   */\n      dup2\n        /* \"#utility.yul\":10927:10947   */\n      calldataload\n        /* \"#utility.yul\":10965:11043   */\n      tag_514\n        /* \"#utility.yul\":11039:11042   */\n      dup5\n        /* \"#utility.yul\":11031:11037   */\n      dup3\n        /* \"#utility.yul\":11024:11028   */\n      0x20\n        /* \"#utility.yul\":11016:11022   */\n      dup7\n        /* \"#utility.yul\":11012:11029   */\n      add\n        /* \"#utility.yul\":10965:11043   */\n      tag_355\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":10956:11043   */\n      swap2\n      pop\n        /* \"#utility.yul\":10772:11049   */\n      pop\n        /* \"#utility.yul\":10711:11049   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11055:11998   */\n    tag_81:\n        /* \"#utility.yul\":11150:11156   */\n      0x00\n        /* \"#utility.yul\":11158:11164   */\n      dup1\n        /* \"#utility.yul\":11166:11172   */\n      0x00\n        /* \"#utility.yul\":11174:11180   */\n      dup1\n        /* \"#utility.yul\":11223:11226   */\n      0x80\n        /* \"#utility.yul\":11211:11220   */\n      dup6\n        /* \"#utility.yul\":11202:11209   */\n      dup8\n        /* \"#utility.yul\":11198:11221   */\n      sub\n        /* \"#utility.yul\":11194:11227   */\n      slt\n        /* \"#utility.yul\":11191:11311   */\n      iszero\n      tag_516\n      jumpi\n        /* \"#utility.yul\":11230:11309   */\n      tag_517\n      tag_319\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":11191:11311   */\n    tag_516:\n        /* \"#utility.yul\":11350:11351   */\n      0x00\n        /* \"#utility.yul\":11375:11428   */\n      tag_518\n        /* \"#utility.yul\":11420:11427   */\n      dup8\n        /* \"#utility.yul\":11411:11417   */\n      dup3\n        /* \"#utility.yul\":11400:11409   */\n      dup9\n        /* \"#utility.yul\":11396:11418   */\n      add\n        /* \"#utility.yul\":11375:11428   */\n      tag_338\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":11365:11428   */\n      swap5\n      pop\n        /* \"#utility.yul\":11321:11438   */\n      pop\n        /* \"#utility.yul\":11477:11479   */\n      0x20\n        /* \"#utility.yul\":11503:11556   */\n      tag_519\n        /* \"#utility.yul\":11548:11555   */\n      dup8\n        /* \"#utility.yul\":11539:11545   */\n      dup3\n        /* \"#utility.yul\":11528:11537   */\n      dup9\n        /* \"#utility.yul\":11524:11546   */\n      add\n        /* \"#utility.yul\":11503:11556   */\n      tag_338\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":11493:11556   */\n      swap4\n      pop\n        /* \"#utility.yul\":11448:11566   */\n      pop\n        /* \"#utility.yul\":11605:11607   */\n      0x40\n        /* \"#utility.yul\":11631:11684   */\n      tag_520\n        /* \"#utility.yul\":11676:11683   */\n      dup8\n        /* \"#utility.yul\":11667:11673   */\n      dup3\n        /* \"#utility.yul\":11656:11665   */\n      dup9\n        /* \"#utility.yul\":11652:11674   */\n      add\n        /* \"#utility.yul\":11631:11684   */\n      tag_333\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":11621:11684   */\n      swap3\n      pop\n        /* \"#utility.yul\":11576:11694   */\n      pop\n        /* \"#utility.yul\":11761:11763   */\n      0x60\n        /* \"#utility.yul\":11750:11759   */\n      dup6\n        /* \"#utility.yul\":11746:11764   */\n      add\n        /* \"#utility.yul\":11733:11765   */\n      calldataload\n        /* \"#utility.yul\":11792:11810   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11784:11790   */\n      dup2\n        /* \"#utility.yul\":11781:11811   */\n      gt\n        /* \"#utility.yul\":11778:11895   */\n      iszero\n      tag_521\n      jumpi\n        /* \"#utility.yul\":11814:11893   */\n      tag_522\n      tag_320\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":11778:11895   */\n    tag_521:\n        /* \"#utility.yul\":11919:11981   */\n      tag_523\n        /* \"#utility.yul\":11973:11980   */\n      dup8\n        /* \"#utility.yul\":11964:11970   */\n      dup3\n        /* \"#utility.yul\":11953:11962   */\n      dup9\n        /* \"#utility.yul\":11949:11971   */\n      add\n        /* \"#utility.yul\":11919:11981   */\n      tag_356\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":11909:11981   */\n      swap2\n      pop\n        /* \"#utility.yul\":11704:11991   */\n      pop\n        /* \"#utility.yul\":11055:11998   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12004:12312   */\n    tag_357:\n        /* \"#utility.yul\":12066:12070   */\n      0x00\n        /* \"#utility.yul\":12156:12174   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12148:12154   */\n      dup3\n        /* \"#utility.yul\":12145:12175   */\n      gt\n        /* \"#utility.yul\":12142:12198   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":12178:12196   */\n      tag_526\n      tag_284\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":12142:12198   */\n    tag_525:\n        /* \"#utility.yul\":12216:12245   */\n      tag_527\n        /* \"#utility.yul\":12238:12244   */\n      dup3\n        /* \"#utility.yul\":12216:12245   */\n      tag_329\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":12208:12245   */\n      swap1\n      pop\n        /* \"#utility.yul\":12300:12304   */\n      0x20\n        /* \"#utility.yul\":12294:12298   */\n      dup2\n        /* \"#utility.yul\":12290:12305   */\n      add\n        /* \"#utility.yul\":12282:12305   */\n      swap1\n      pop\n        /* \"#utility.yul\":12004:12312   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12318:12743   */\n    tag_358:\n        /* \"#utility.yul\":12396:12401   */\n      0x00\n        /* \"#utility.yul\":12421:12487   */\n      tag_529\n        /* \"#utility.yul\":12437:12486   */\n      tag_530\n        /* \"#utility.yul\":12479:12485   */\n      dup5\n        /* \"#utility.yul\":12437:12486   */\n      tag_357\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":12421:12487   */\n      tag_352\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":12412:12487   */\n      swap1\n      pop\n        /* \"#utility.yul\":12510:12516   */\n      dup3\n        /* \"#utility.yul\":12503:12508   */\n      dup2\n        /* \"#utility.yul\":12496:12517   */\n      mstore\n        /* \"#utility.yul\":12548:12552   */\n      0x20\n        /* \"#utility.yul\":12541:12546   */\n      dup2\n        /* \"#utility.yul\":12537:12553   */\n      add\n        /* \"#utility.yul\":12586:12589   */\n      dup5\n        /* \"#utility.yul\":12577:12583   */\n      dup5\n        /* \"#utility.yul\":12572:12575   */\n      dup5\n        /* \"#utility.yul\":12568:12584   */\n      add\n        /* \"#utility.yul\":12565:12590   */\n      gt\n        /* \"#utility.yul\":12562:12674   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":12593:12672   */\n      tag_532\n      tag_350\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":12562:12674   */\n    tag_531:\n        /* \"#utility.yul\":12683:12737   */\n      tag_533\n        /* \"#utility.yul\":12730:12736   */\n      dup5\n        /* \"#utility.yul\":12725:12728   */\n      dup3\n        /* \"#utility.yul\":12720:12723   */\n      dup6\n        /* \"#utility.yul\":12683:12737   */\n      tag_354\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":12402:12743   */\n      pop\n        /* \"#utility.yul\":12318:12743   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12763:13103   */\n    tag_359:\n        /* \"#utility.yul\":12819:12824   */\n      0x00\n        /* \"#utility.yul\":12868:12871   */\n      dup3\n        /* \"#utility.yul\":12861:12865   */\n      0x1f\n        /* \"#utility.yul\":12853:12859   */\n      dup4\n        /* \"#utility.yul\":12849:12866   */\n      add\n        /* \"#utility.yul\":12845:12872   */\n      slt\n        /* \"#utility.yul\":12835:12957   */\n      tag_535\n      jumpi\n        /* \"#utility.yul\":12876:12955   */\n      tag_536\n      tag_349\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":12835:12957   */\n    tag_535:\n        /* \"#utility.yul\":12993:12999   */\n      dup2\n        /* \"#utility.yul\":12980:13000   */\n      calldataload\n        /* \"#utility.yul\":13018:13097   */\n      tag_537\n        /* \"#utility.yul\":13093:13096   */\n      dup5\n        /* \"#utility.yul\":13085:13091   */\n      dup3\n        /* \"#utility.yul\":13078:13082   */\n      0x20\n        /* \"#utility.yul\":13070:13076   */\n      dup7\n        /* \"#utility.yul\":13066:13083   */\n      add\n        /* \"#utility.yul\":13018:13097   */\n      tag_358\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":13009:13097   */\n      swap2\n      pop\n        /* \"#utility.yul\":12825:13103   */\n      pop\n        /* \"#utility.yul\":12763:13103   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13109:14054   */\n    tag_89:\n        /* \"#utility.yul\":13205:13211   */\n      0x00\n        /* \"#utility.yul\":13213:13219   */\n      dup1\n        /* \"#utility.yul\":13221:13227   */\n      0x00\n        /* \"#utility.yul\":13229:13235   */\n      dup1\n        /* \"#utility.yul\":13278:13281   */\n      0x80\n        /* \"#utility.yul\":13266:13275   */\n      dup6\n        /* \"#utility.yul\":13257:13264   */\n      dup8\n        /* \"#utility.yul\":13253:13276   */\n      sub\n        /* \"#utility.yul\":13249:13282   */\n      slt\n        /* \"#utility.yul\":13246:13366   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":13285:13364   */\n      tag_540\n      tag_319\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":13246:13366   */\n    tag_539:\n        /* \"#utility.yul\":13405:13406   */\n      0x00\n        /* \"#utility.yul\":13430:13483   */\n      tag_541\n        /* \"#utility.yul\":13475:13482   */\n      dup8\n        /* \"#utility.yul\":13466:13472   */\n      dup3\n        /* \"#utility.yul\":13455:13464   */\n      dup9\n        /* \"#utility.yul\":13451:13473   */\n      add\n        /* \"#utility.yul\":13430:13483   */\n      tag_338\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":13420:13483   */\n      swap5\n      pop\n        /* \"#utility.yul\":13376:13493   */\n      pop\n        /* \"#utility.yul\":13560:13562   */\n      0x20\n        /* \"#utility.yul\":13549:13558   */\n      dup6\n        /* \"#utility.yul\":13545:13563   */\n      add\n        /* \"#utility.yul\":13532:13564   */\n      calldataload\n        /* \"#utility.yul\":13591:13609   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13583:13589   */\n      dup2\n        /* \"#utility.yul\":13580:13610   */\n      gt\n        /* \"#utility.yul\":13577:13694   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":13613:13692   */\n      tag_543\n      tag_320\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":13577:13694   */\n    tag_542:\n        /* \"#utility.yul\":13718:13781   */\n      tag_544\n        /* \"#utility.yul\":13773:13780   */\n      dup8\n        /* \"#utility.yul\":13764:13770   */\n      dup3\n        /* \"#utility.yul\":13753:13762   */\n      dup9\n        /* \"#utility.yul\":13749:13771   */\n      add\n        /* \"#utility.yul\":13718:13781   */\n      tag_359\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":13708:13781   */\n      swap4\n      pop\n        /* \"#utility.yul\":13503:13791   */\n      pop\n        /* \"#utility.yul\":13830:13832   */\n      0x40\n        /* \"#utility.yul\":13856:13909   */\n      tag_545\n        /* \"#utility.yul\":13901:13908   */\n      dup8\n        /* \"#utility.yul\":13892:13898   */\n      dup3\n        /* \"#utility.yul\":13881:13890   */\n      dup9\n        /* \"#utility.yul\":13877:13899   */\n      add\n        /* \"#utility.yul\":13856:13909   */\n      tag_333\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":13846:13909   */\n      swap3\n      pop\n        /* \"#utility.yul\":13801:13919   */\n      pop\n        /* \"#utility.yul\":13958:13960   */\n      0x60\n        /* \"#utility.yul\":13984:14037   */\n      tag_546\n        /* \"#utility.yul\":14029:14036   */\n      dup8\n        /* \"#utility.yul\":14020:14026   */\n      dup3\n        /* \"#utility.yul\":14009:14018   */\n      dup9\n        /* \"#utility.yul\":14005:14027   */\n      add\n        /* \"#utility.yul\":13984:14037   */\n      tag_333\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":13974:14037   */\n      swap2\n      pop\n        /* \"#utility.yul\":13929:14047   */\n      pop\n        /* \"#utility.yul\":13109:14054   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14060:14534   */\n    tag_94:\n        /* \"#utility.yul\":14128:14134   */\n      0x00\n        /* \"#utility.yul\":14136:14142   */\n      dup1\n        /* \"#utility.yul\":14185:14187   */\n      0x40\n        /* \"#utility.yul\":14173:14182   */\n      dup4\n        /* \"#utility.yul\":14164:14171   */\n      dup6\n        /* \"#utility.yul\":14160:14183   */\n      sub\n        /* \"#utility.yul\":14156:14188   */\n      slt\n        /* \"#utility.yul\":14153:14272   */\n      iszero\n      tag_548\n      jumpi\n        /* \"#utility.yul\":14191:14270   */\n      tag_549\n      tag_319\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":14153:14272   */\n    tag_548:\n        /* \"#utility.yul\":14311:14312   */\n      0x00\n        /* \"#utility.yul\":14336:14389   */\n      tag_550\n        /* \"#utility.yul\":14381:14388   */\n      dup6\n        /* \"#utility.yul\":14372:14378   */\n      dup3\n        /* \"#utility.yul\":14361:14370   */\n      dup7\n        /* \"#utility.yul\":14357:14379   */\n      add\n        /* \"#utility.yul\":14336:14389   */\n      tag_338\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":14326:14389   */\n      swap3\n      pop\n        /* \"#utility.yul\":14282:14399   */\n      pop\n        /* \"#utility.yul\":14438:14440   */\n      0x20\n        /* \"#utility.yul\":14464:14517   */\n      tag_551\n        /* \"#utility.yul\":14509:14516   */\n      dup6\n        /* \"#utility.yul\":14500:14506   */\n      dup3\n        /* \"#utility.yul\":14489:14498   */\n      dup7\n        /* \"#utility.yul\":14485:14507   */\n      add\n        /* \"#utility.yul\":14464:14517   */\n      tag_338\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":14454:14517   */\n      swap2\n      pop\n        /* \"#utility.yul\":14409:14527   */\n      pop\n        /* \"#utility.yul\":14060:14534   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14540:14720   */\n    tag_360:\n        /* \"#utility.yul\":14588:14665   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14585:14586   */\n      0x00\n        /* \"#utility.yul\":14578:14666   */\n      mstore\n        /* \"#utility.yul\":14685:14689   */\n      0x22\n        /* \"#utility.yul\":14682:14683   */\n      0x04\n        /* \"#utility.yul\":14675:14690   */\n      mstore\n        /* \"#utility.yul\":14709:14713   */\n      0x24\n        /* \"#utility.yul\":14706:14707   */\n      0x00\n        /* \"#utility.yul\":14699:14714   */\n      revert\n        /* \"#utility.yul\":14726:15046   */\n    tag_103:\n        /* \"#utility.yul\":14770:14776   */\n      0x00\n        /* \"#utility.yul\":14807:14808   */\n      0x02\n        /* \"#utility.yul\":14801:14805   */\n      dup3\n        /* \"#utility.yul\":14797:14809   */\n      div\n        /* \"#utility.yul\":14787:14809   */\n      swap1\n      pop\n        /* \"#utility.yul\":14854:14855   */\n      0x01\n        /* \"#utility.yul\":14848:14852   */\n      dup3\n        /* \"#utility.yul\":14844:14856   */\n      and\n        /* \"#utility.yul\":14875:14893   */\n      dup1\n        /* \"#utility.yul\":14865:14946   */\n      tag_554\n      jumpi\n        /* \"#utility.yul\":14931:14935   */\n      0x7f\n        /* \"#utility.yul\":14923:14929   */\n      dup3\n        /* \"#utility.yul\":14919:14936   */\n      and\n        /* \"#utility.yul\":14909:14936   */\n      swap2\n      pop\n        /* \"#utility.yul\":14865:14946   */\n    tag_554:\n        /* \"#utility.yul\":14993:14995   */\n      0x20\n        /* \"#utility.yul\":14985:14991   */\n      dup3\n        /* \"#utility.yul\":14982:14996   */\n      lt\n        /* \"#utility.yul\":14962:14980   */\n      dup2\n        /* \"#utility.yul\":14959:14997   */\n      sub\n        /* \"#utility.yul\":14956:15040   */\n      tag_555\n      jumpi\n        /* \"#utility.yul\":15012:15030   */\n      tag_556\n      tag_360\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":14956:15040   */\n    tag_555:\n        /* \"#utility.yul\":14777:15046   */\n      pop\n        /* \"#utility.yul\":14726:15046   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15052:15494   */\n    tag_126:\n        /* \"#utility.yul\":15201:15205   */\n      0x00\n        /* \"#utility.yul\":15239:15241   */\n      0x60\n        /* \"#utility.yul\":15228:15237   */\n      dup3\n        /* \"#utility.yul\":15224:15242   */\n      add\n        /* \"#utility.yul\":15216:15242   */\n      swap1\n      pop\n        /* \"#utility.yul\":15252:15323   */\n      tag_558\n        /* \"#utility.yul\":15320:15321   */\n      0x00\n        /* \"#utility.yul\":15309:15318   */\n      dup4\n        /* \"#utility.yul\":15305:15322   */\n      add\n        /* \"#utility.yul\":15296:15302   */\n      dup7\n        /* \"#utility.yul\":15252:15323   */\n      tag_336\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":15333:15405   */\n      tag_559\n        /* \"#utility.yul\":15401:15403   */\n      0x20\n        /* \"#utility.yul\":15390:15399   */\n      dup4\n        /* \"#utility.yul\":15386:15404   */\n      add\n        /* \"#utility.yul\":15377:15383   */\n      dup6\n        /* \"#utility.yul\":15333:15405   */\n      tag_339\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":15415:15487   */\n      tag_560\n        /* \"#utility.yul\":15483:15485   */\n      0x40\n        /* \"#utility.yul\":15472:15481   */\n      dup4\n        /* \"#utility.yul\":15468:15486   */\n      add\n        /* \"#utility.yul\":15459:15465   */\n      dup5\n        /* \"#utility.yul\":15415:15487   */\n      tag_336\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":15052:15494   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15500:15669   */\n    tag_361:\n        /* \"#utility.yul\":15640:15661   */\n      0x4e6f204e465420666f7220746869732062757300000000000000000000000000\n        /* \"#utility.yul\":15636:15637   */\n      0x00\n        /* \"#utility.yul\":15628:15634   */\n      dup3\n        /* \"#utility.yul\":15624:15638   */\n      add\n        /* \"#utility.yul\":15617:15662   */\n      mstore\n        /* \"#utility.yul\":15500:15669   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15675:16041   */\n    tag_362:\n        /* \"#utility.yul\":15817:15820   */\n      0x00\n        /* \"#utility.yul\":15838:15905   */\n      tag_563\n        /* \"#utility.yul\":15902:15904   */\n      0x13\n        /* \"#utility.yul\":15897:15900   */\n      dup4\n        /* \"#utility.yul\":15838:15905   */\n      tag_327\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":15831:15905   */\n      swap2\n      pop\n        /* \"#utility.yul\":15914:16007   */\n      tag_564\n        /* \"#utility.yul\":16003:16006   */\n      dup3\n        /* \"#utility.yul\":15914:16007   */\n      tag_361\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":16032:16034   */\n      0x20\n        /* \"#utility.yul\":16027:16030   */\n      dup3\n        /* \"#utility.yul\":16023:16035   */\n      add\n        /* \"#utility.yul\":16016:16035   */\n      swap1\n      pop\n        /* \"#utility.yul\":15675:16041   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16047:16466   */\n    tag_137:\n        /* \"#utility.yul\":16213:16217   */\n      0x00\n        /* \"#utility.yul\":16251:16253   */\n      0x20\n        /* \"#utility.yul\":16240:16249   */\n      dup3\n        /* \"#utility.yul\":16236:16254   */\n      add\n        /* \"#utility.yul\":16228:16254   */\n      swap1\n      pop\n        /* \"#utility.yul\":16300:16309   */\n      dup2\n        /* \"#utility.yul\":16294:16298   */\n      dup2\n        /* \"#utility.yul\":16290:16310   */\n      sub\n        /* \"#utility.yul\":16286:16287   */\n      0x00\n        /* \"#utility.yul\":16275:16284   */\n      dup4\n        /* \"#utility.yul\":16271:16288   */\n      add\n        /* \"#utility.yul\":16264:16311   */\n      mstore\n        /* \"#utility.yul\":16328:16459   */\n      tag_566\n        /* \"#utility.yul\":16454:16458   */\n      dup2\n        /* \"#utility.yul\":16328:16459   */\n      tag_362\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":16320:16459   */\n      swap1\n      pop\n        /* \"#utility.yul\":16047:16466   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16472:16620   */\n    tag_363:\n        /* \"#utility.yul\":16574:16585   */\n      0x00\n        /* \"#utility.yul\":16611:16614   */\n      dup2\n        /* \"#utility.yul\":16596:16614   */\n      swap1\n      pop\n        /* \"#utility.yul\":16472:16620   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16626:17016   */\n    tag_364:\n        /* \"#utility.yul\":16732:16735   */\n      0x00\n        /* \"#utility.yul\":16760:16799   */\n      tag_569\n        /* \"#utility.yul\":16793:16798   */\n      dup3\n        /* \"#utility.yul\":16760:16799   */\n      tag_326\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":16815:16904   */\n      tag_570\n        /* \"#utility.yul\":16897:16903   */\n      dup2\n        /* \"#utility.yul\":16892:16895   */\n      dup6\n        /* \"#utility.yul\":16815:16904   */\n      tag_363\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":16808:16904   */\n      swap4\n      pop\n        /* \"#utility.yul\":16913:16978   */\n      tag_571\n        /* \"#utility.yul\":16971:16977   */\n      dup2\n        /* \"#utility.yul\":16966:16969   */\n      dup6\n        /* \"#utility.yul\":16959:16963   */\n      0x20\n        /* \"#utility.yul\":16952:16957   */\n      dup7\n        /* \"#utility.yul\":16948:16964   */\n      add\n        /* \"#utility.yul\":16913:16978   */\n      tag_328\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":17003:17009   */\n      dup1\n        /* \"#utility.yul\":16998:17001   */\n      dup5\n        /* \"#utility.yul\":16994:17010   */\n      add\n        /* \"#utility.yul\":16987:17010   */\n      swap2\n      pop\n        /* \"#utility.yul\":16736:17016   */\n      pop\n        /* \"#utility.yul\":16626:17016   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17022:17457   */\n    tag_167:\n        /* \"#utility.yul\":17202:17205   */\n      0x00\n        /* \"#utility.yul\":17224:17319   */\n      tag_573\n        /* \"#utility.yul\":17315:17318   */\n      dup3\n        /* \"#utility.yul\":17306:17312   */\n      dup6\n        /* \"#utility.yul\":17224:17319   */\n      tag_364\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":17217:17319   */\n      swap2\n      pop\n        /* \"#utility.yul\":17336:17431   */\n      tag_574\n        /* \"#utility.yul\":17427:17430   */\n      dup3\n        /* \"#utility.yul\":17418:17424   */\n      dup5\n        /* \"#utility.yul\":17336:17431   */\n      tag_364\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":17329:17431   */\n      swap2\n      pop\n        /* \"#utility.yul\":17448:17451   */\n      dup2\n        /* \"#utility.yul\":17441:17451   */\n      swap1\n      pop\n        /* \"#utility.yul\":17022:17457   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17463:17600   */\n    tag_365:\n        /* \"#utility.yul\":17517:17522   */\n      0x00\n        /* \"#utility.yul\":17548:17554   */\n      dup2\n        /* \"#utility.yul\":17542:17555   */\n      mload\n        /* \"#utility.yul\":17533:17555   */\n      swap1\n      pop\n        /* \"#utility.yul\":17564:17594   */\n      tag_576\n        /* \"#utility.yul\":17588:17593   */\n      dup2\n        /* \"#utility.yul\":17564:17594   */\n      tag_347\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":17463:17600   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17606:17951   */\n    tag_175:\n        /* \"#utility.yul\":17673:17679   */\n      0x00\n        /* \"#utility.yul\":17722:17724   */\n      0x20\n        /* \"#utility.yul\":17710:17719   */\n      dup3\n        /* \"#utility.yul\":17701:17708   */\n      dup5\n        /* \"#utility.yul\":17697:17720   */\n      sub\n        /* \"#utility.yul\":17693:17725   */\n      slt\n        /* \"#utility.yul\":17690:17809   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":17728:17807   */\n      tag_579\n      tag_319\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":17690:17809   */\n    tag_578:\n        /* \"#utility.yul\":17848:17849   */\n      0x00\n        /* \"#utility.yul\":17873:17934   */\n      tag_580\n        /* \"#utility.yul\":17926:17933   */\n      dup5\n        /* \"#utility.yul\":17917:17923   */\n      dup3\n        /* \"#utility.yul\":17906:17915   */\n      dup6\n        /* \"#utility.yul\":17902:17924   */\n      add\n        /* \"#utility.yul\":17873:17934   */\n      tag_365\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":17863:17934   */\n      swap2\n      pop\n        /* \"#utility.yul\":17819:17944   */\n      pop\n        /* \"#utility.yul\":17606:17951   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17957:18183   */\n    tag_366:\n        /* \"#utility.yul\":18097:18131   */\n      0x43616c6c6572206973206e6f7420616e20617574686f72697a656420676f7665\n        /* \"#utility.yul\":18093:18094   */\n      0x00\n        /* \"#utility.yul\":18085:18091   */\n      dup3\n        /* \"#utility.yul\":18081:18095   */\n      add\n        /* \"#utility.yul\":18074:18132   */\n      mstore\n        /* \"#utility.yul\":18166:18175   */\n      0x726e6d656e742e00000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18161:18163   */\n      0x20\n        /* \"#utility.yul\":18153:18159   */\n      dup3\n        /* \"#utility.yul\":18149:18164   */\n      add\n        /* \"#utility.yul\":18142:18176   */\n      mstore\n        /* \"#utility.yul\":17957:18183   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18189:18555   */\n    tag_367:\n        /* \"#utility.yul\":18331:18334   */\n      0x00\n        /* \"#utility.yul\":18352:18419   */\n      tag_583\n        /* \"#utility.yul\":18416:18418   */\n      0x27\n        /* \"#utility.yul\":18411:18414   */\n      dup4\n        /* \"#utility.yul\":18352:18419   */\n      tag_327\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":18345:18419   */\n      swap2\n      pop\n        /* \"#utility.yul\":18428:18521   */\n      tag_584\n        /* \"#utility.yul\":18517:18520   */\n      dup3\n        /* \"#utility.yul\":18428:18521   */\n      tag_366\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":18546:18548   */\n      0x40\n        /* \"#utility.yul\":18541:18544   */\n      dup3\n        /* \"#utility.yul\":18537:18549   */\n      add\n        /* \"#utility.yul\":18530:18549   */\n      swap1\n      pop\n        /* \"#utility.yul\":18189:18555   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18561:18980   */\n    tag_178:\n        /* \"#utility.yul\":18727:18731   */\n      0x00\n        /* \"#utility.yul\":18765:18767   */\n      0x20\n        /* \"#utility.yul\":18754:18763   */\n      dup3\n        /* \"#utility.yul\":18750:18768   */\n      add\n        /* \"#utility.yul\":18742:18768   */\n      swap1\n      pop\n        /* \"#utility.yul\":18814:18823   */\n      dup2\n        /* \"#utility.yul\":18808:18812   */\n      dup2\n        /* \"#utility.yul\":18804:18824   */\n      sub\n        /* \"#utility.yul\":18800:18801   */\n      0x00\n        /* \"#utility.yul\":18789:18798   */\n      dup4\n        /* \"#utility.yul\":18785:18802   */\n      add\n        /* \"#utility.yul\":18778:18825   */\n      mstore\n        /* \"#utility.yul\":18842:18973   */\n      tag_586\n        /* \"#utility.yul\":18968:18972   */\n      dup2\n        /* \"#utility.yul\":18842:18973   */\n      tag_367\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":18834:18973   */\n      swap1\n      pop\n        /* \"#utility.yul\":18561:18980   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18986:19084   */\n    tag_368:\n        /* \"#utility.yul\":19037:19043   */\n      0x00\n        /* \"#utility.yul\":19071:19076   */\n      dup2\n        /* \"#utility.yul\":19065:19077   */\n      mload\n        /* \"#utility.yul\":19055:19077   */\n      swap1\n      pop\n        /* \"#utility.yul\":18986:19084   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19090:19258   */\n    tag_369:\n        /* \"#utility.yul\":19173:19184   */\n      0x00\n        /* \"#utility.yul\":19207:19213   */\n      dup3\n        /* \"#utility.yul\":19202:19205   */\n      dup3\n        /* \"#utility.yul\":19195:19214   */\n      mstore\n        /* \"#utility.yul\":19247:19251   */\n      0x20\n        /* \"#utility.yul\":19242:19245   */\n      dup3\n        /* \"#utility.yul\":19238:19252   */\n      add\n        /* \"#utility.yul\":19223:19252   */\n      swap1\n      pop\n        /* \"#utility.yul\":19090:19258   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19264:19637   */\n    tag_370:\n        /* \"#utility.yul\":19350:19353   */\n      0x00\n        /* \"#utility.yul\":19378:19416   */\n      tag_590\n        /* \"#utility.yul\":19410:19415   */\n      dup3\n        /* \"#utility.yul\":19378:19416   */\n      tag_368\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":19432:19502   */\n      tag_591\n        /* \"#utility.yul\":19495:19501   */\n      dup2\n        /* \"#utility.yul\":19490:19493   */\n      dup6\n        /* \"#utility.yul\":19432:19502   */\n      tag_369\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":19425:19502   */\n      swap4\n      pop\n        /* \"#utility.yul\":19511:19576   */\n      tag_592\n        /* \"#utility.yul\":19569:19575   */\n      dup2\n        /* \"#utility.yul\":19564:19567   */\n      dup6\n        /* \"#utility.yul\":19557:19561   */\n      0x20\n        /* \"#utility.yul\":19550:19555   */\n      dup7\n        /* \"#utility.yul\":19546:19562   */\n      add\n        /* \"#utility.yul\":19511:19576   */\n      tag_328\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":19601:19630   */\n      tag_593\n        /* \"#utility.yul\":19623:19629   */\n      dup2\n        /* \"#utility.yul\":19601:19630   */\n      tag_329\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":19596:19599   */\n      dup5\n        /* \"#utility.yul\":19592:19631   */\n      add\n        /* \"#utility.yul\":19585:19631   */\n      swap2\n      pop\n        /* \"#utility.yul\":19354:19637   */\n      pop\n        /* \"#utility.yul\":19264:19637   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19643:20283   */\n    tag_221:\n        /* \"#utility.yul\":19838:19842   */\n      0x00\n        /* \"#utility.yul\":19876:19879   */\n      0x80\n        /* \"#utility.yul\":19865:19874   */\n      dup3\n        /* \"#utility.yul\":19861:19880   */\n      add\n        /* \"#utility.yul\":19853:19880   */\n      swap1\n      pop\n        /* \"#utility.yul\":19890:19961   */\n      tag_595\n        /* \"#utility.yul\":19958:19959   */\n      0x00\n        /* \"#utility.yul\":19947:19956   */\n      dup4\n        /* \"#utility.yul\":19943:19960   */\n      add\n        /* \"#utility.yul\":19934:19940   */\n      dup8\n        /* \"#utility.yul\":19890:19961   */\n      tag_336\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":19971:20043   */\n      tag_596\n        /* \"#utility.yul\":20039:20041   */\n      0x20\n        /* \"#utility.yul\":20028:20037   */\n      dup4\n        /* \"#utility.yul\":20024:20042   */\n      add\n        /* \"#utility.yul\":20015:20021   */\n      dup7\n        /* \"#utility.yul\":19971:20043   */\n      tag_336\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":20053:20125   */\n      tag_597\n        /* \"#utility.yul\":20121:20123   */\n      0x40\n        /* \"#utility.yul\":20110:20119   */\n      dup4\n        /* \"#utility.yul\":20106:20124   */\n      add\n        /* \"#utility.yul\":20097:20103   */\n      dup6\n        /* \"#utility.yul\":20053:20125   */\n      tag_339\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":20172:20181   */\n      dup2\n        /* \"#utility.yul\":20166:20170   */\n      dup2\n        /* \"#utility.yul\":20162:20182   */\n      sub\n        /* \"#utility.yul\":20157:20159   */\n      0x60\n        /* \"#utility.yul\":20146:20155   */\n      dup4\n        /* \"#utility.yul\":20142:20160   */\n      add\n        /* \"#utility.yul\":20135:20183   */\n      mstore\n        /* \"#utility.yul\":20200:20276   */\n      tag_598\n        /* \"#utility.yul\":20271:20275   */\n      dup2\n        /* \"#utility.yul\":20262:20268   */\n      dup5\n        /* \"#utility.yul\":20200:20276   */\n      tag_370\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":20192:20276   */\n      swap1\n      pop\n        /* \"#utility.yul\":19643:20283   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20289:20430   */\n    tag_371:\n        /* \"#utility.yul\":20345:20350   */\n      0x00\n        /* \"#utility.yul\":20376:20382   */\n      dup2\n        /* \"#utility.yul\":20370:20383   */\n      mload\n        /* \"#utility.yul\":20361:20383   */\n      swap1\n      pop\n        /* \"#utility.yul\":20392:20424   */\n      tag_600\n        /* \"#utility.yul\":20418:20423   */\n      dup2\n        /* \"#utility.yul\":20392:20424   */\n      tag_322\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":20289:20430   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20436:20785   */\n    tag_224:\n        /* \"#utility.yul\":20505:20511   */\n      0x00\n        /* \"#utility.yul\":20554:20556   */\n      0x20\n        /* \"#utility.yul\":20542:20551   */\n      dup3\n        /* \"#utility.yul\":20533:20540   */\n      dup5\n        /* \"#utility.yul\":20529:20552   */\n      sub\n        /* \"#utility.yul\":20525:20557   */\n      slt\n        /* \"#utility.yul\":20522:20641   */\n      iszero\n      tag_602\n      jumpi\n        /* \"#utility.yul\":20560:20639   */\n      tag_603\n      tag_319\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":20522:20641   */\n    tag_602:\n        /* \"#utility.yul\":20680:20681   */\n      0x00\n        /* \"#utility.yul\":20705:20768   */\n      tag_604\n        /* \"#utility.yul\":20760:20767   */\n      dup5\n        /* \"#utility.yul\":20751:20757   */\n      dup3\n        /* \"#utility.yul\":20740:20749   */\n      dup6\n        /* \"#utility.yul\":20736:20758   */\n      add\n        /* \"#utility.yul\":20705:20768   */\n      tag_371\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":20695:20768   */\n      swap2\n      pop\n        /* \"#utility.yul\":20651:20778   */\n      pop\n        /* \"#utility.yul\":20436:20785   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20791:20932   */\n    tag_372:\n        /* \"#utility.yul\":20840:20844   */\n      0x00\n        /* \"#utility.yul\":20863:20866   */\n      dup2\n        /* \"#utility.yul\":20855:20866   */\n      swap1\n      pop\n        /* \"#utility.yul\":20886:20889   */\n      dup2\n        /* \"#utility.yul\":20883:20884   */\n      0x00\n        /* \"#utility.yul\":20876:20890   */\n      mstore\n        /* \"#utility.yul\":20920:20924   */\n      0x20\n        /* \"#utility.yul\":20917:20918   */\n      0x00\n        /* \"#utility.yul\":20907:20925   */\n      keccak256\n        /* \"#utility.yul\":20899:20925   */\n      swap1\n      pop\n        /* \"#utility.yul\":20791:20932   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20938:21031   */\n    tag_373:\n        /* \"#utility.yul\":20975:20981   */\n      0x00\n        /* \"#utility.yul\":21022:21024   */\n      0x20\n        /* \"#utility.yul\":21017:21019   */\n      0x1f\n        /* \"#utility.yul\":21010:21015   */\n      dup4\n        /* \"#utility.yul\":21006:21020   */\n      add\n        /* \"#utility.yul\":21002:21025   */\n      div\n        /* \"#utility.yul\":20992:21025   */\n      swap1\n      pop\n        /* \"#utility.yul\":20938:21031   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21037:21144   */\n    tag_374:\n        /* \"#utility.yul\":21081:21089   */\n      0x00\n        /* \"#utility.yul\":21131:21136   */\n      dup3\n        /* \"#utility.yul\":21125:21129   */\n      dup3\n        /* \"#utility.yul\":21121:21137   */\n      shl\n        /* \"#utility.yul\":21100:21137   */\n      swap1\n      pop\n        /* \"#utility.yul\":21037:21144   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21150:21543   */\n    tag_375:\n        /* \"#utility.yul\":21219:21225   */\n      0x00\n        /* \"#utility.yul\":21269:21270   */\n      0x08\n        /* \"#utility.yul\":21257:21267   */\n      dup4\n        /* \"#utility.yul\":21253:21271   */\n      mul\n        /* \"#utility.yul\":21292:21389   */\n      tag_609\n        /* \"#utility.yul\":21322:21388   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":21311:21320   */\n      dup3\n        /* \"#utility.yul\":21292:21389   */\n      tag_374\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":21410:21449   */\n      tag_610\n        /* \"#utility.yul\":21440:21448   */\n      dup7\n        /* \"#utility.yul\":21429:21438   */\n      dup4\n        /* \"#utility.yul\":21410:21449   */\n      tag_374\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":21398:21449   */\n      swap6\n      pop\n        /* \"#utility.yul\":21482:21486   */\n      dup1\n        /* \"#utility.yul\":21478:21487   */\n      not\n        /* \"#utility.yul\":21471:21476   */\n      dup5\n        /* \"#utility.yul\":21467:21488   */\n      and\n        /* \"#utility.yul\":21458:21488   */\n      swap4\n      pop\n        /* \"#utility.yul\":21531:21535   */\n      dup1\n        /* \"#utility.yul\":21521:21529   */\n      dup7\n        /* \"#utility.yul\":21517:21536   */\n      and\n        /* \"#utility.yul\":21510:21515   */\n      dup5\n        /* \"#utility.yul\":21507:21537   */\n      or\n        /* \"#utility.yul\":21497:21537   */\n      swap3\n      pop\n        /* \"#utility.yul\":21226:21543   */\n      pop\n      pop\n        /* \"#utility.yul\":21150:21543   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21549:21609   */\n    tag_376:\n        /* \"#utility.yul\":21577:21580   */\n      0x00\n        /* \"#utility.yul\":21598:21603   */\n      dup2\n        /* \"#utility.yul\":21591:21603   */\n      swap1\n      pop\n        /* \"#utility.yul\":21549:21609   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21615:21757   */\n    tag_377:\n        /* \"#utility.yul\":21665:21674   */\n      0x00\n        /* \"#utility.yul\":21698:21751   */\n      tag_613\n        /* \"#utility.yul\":21716:21750   */\n      tag_614\n        /* \"#utility.yul\":21725:21749   */\n      tag_615\n        /* \"#utility.yul\":21743:21748   */\n      dup5\n        /* \"#utility.yul\":21725:21749   */\n      tag_331\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":21716:21750   */\n      tag_376\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":21698:21751   */\n      tag_331\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":21685:21751   */\n      swap1\n      pop\n        /* \"#utility.yul\":21615:21757   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21763:21838   */\n    tag_378:\n        /* \"#utility.yul\":21806:21809   */\n      0x00\n        /* \"#utility.yul\":21827:21832   */\n      dup2\n        /* \"#utility.yul\":21820:21832   */\n      swap1\n      pop\n        /* \"#utility.yul\":21763:21838   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21844:22113   */\n    tag_379:\n        /* \"#utility.yul\":21954:21993   */\n      tag_618\n        /* \"#utility.yul\":21985:21992   */\n      dup4\n        /* \"#utility.yul\":21954:21993   */\n      tag_377\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":22015:22106   */\n      tag_619\n        /* \"#utility.yul\":22064:22105   */\n      tag_620\n        /* \"#utility.yul\":22088:22104   */\n      dup3\n        /* \"#utility.yul\":22064:22105   */\n      tag_378\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":22056:22062   */\n      dup5\n        /* \"#utility.yul\":22049:22053   */\n      dup5\n        /* \"#utility.yul\":22043:22054   */\n      sload\n        /* \"#utility.yul\":22015:22106   */\n      tag_375\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":22009:22013   */\n      dup3\n        /* \"#utility.yul\":22002:22107   */\n      sstore\n        /* \"#utility.yul\":21920:22113   */\n      pop\n        /* \"#utility.yul\":21844:22113   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22119:22192   */\n    tag_380:\n        /* \"#utility.yul\":22164:22167   */\n      0x00\n        /* \"#utility.yul\":22119:22192   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":22198:22387   */\n    tag_381:\n        /* \"#utility.yul\":22275:22307   */\n      tag_623\n      tag_380\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":22316:22381   */\n      tag_624\n        /* \"#utility.yul\":22374:22380   */\n      dup2\n        /* \"#utility.yul\":22366:22372   */\n      dup5\n        /* \"#utility.yul\":22360:22364   */\n      dup5\n        /* \"#utility.yul\":22316:22381   */\n      tag_379\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":22251:22387   */\n      pop\n        /* \"#utility.yul\":22198:22387   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22393:22579   */\n    tag_382:\n        /* \"#utility.yul\":22453:22573   */\n    tag_626:\n        /* \"#utility.yul\":22470:22473   */\n      dup2\n        /* \"#utility.yul\":22463:22468   */\n      dup2\n        /* \"#utility.yul\":22460:22474   */\n      lt\n        /* \"#utility.yul\":22453:22573   */\n      iszero\n      tag_628\n      jumpi\n        /* \"#utility.yul\":22524:22563   */\n      tag_629\n        /* \"#utility.yul\":22561:22562   */\n      0x00\n        /* \"#utility.yul\":22554:22559   */\n      dup3\n        /* \"#utility.yul\":22524:22563   */\n      tag_381\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":22497:22498   */\n      0x01\n        /* \"#utility.yul\":22490:22495   */\n      dup2\n        /* \"#utility.yul\":22486:22499   */\n      add\n        /* \"#utility.yul\":22477:22499   */\n      swap1\n      pop\n        /* \"#utility.yul\":22453:22573   */\n      jump(tag_626)\n    tag_628:\n        /* \"#utility.yul\":22393:22579   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22585:23128   */\n    tag_383:\n        /* \"#utility.yul\":22686:22688   */\n      0x1f\n        /* \"#utility.yul\":22681:22684   */\n      dup3\n        /* \"#utility.yul\":22678:22689   */\n      gt\n        /* \"#utility.yul\":22675:23121   */\n      iszero\n      tag_631\n      jumpi\n        /* \"#utility.yul\":22720:22758   */\n      tag_632\n        /* \"#utility.yul\":22752:22757   */\n      dup2\n        /* \"#utility.yul\":22720:22758   */\n      tag_372\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":22804:22833   */\n      tag_633\n        /* \"#utility.yul\":22822:22832   */\n      dup5\n        /* \"#utility.yul\":22804:22833   */\n      tag_373\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":22794:22802   */\n      dup2\n        /* \"#utility.yul\":22790:22834   */\n      add\n        /* \"#utility.yul\":22987:22989   */\n      0x20\n        /* \"#utility.yul\":22975:22985   */\n      dup6\n        /* \"#utility.yul\":22972:22990   */\n      lt\n        /* \"#utility.yul\":22969:23018   */\n      iszero\n      tag_634\n      jumpi\n        /* \"#utility.yul\":23008:23016   */\n      dup2\n        /* \"#utility.yul\":22993:23016   */\n      swap1\n      pop\n        /* \"#utility.yul\":22969:23018   */\n    tag_634:\n        /* \"#utility.yul\":23031:23111   */\n      tag_635\n        /* \"#utility.yul\":23087:23109   */\n      tag_636\n        /* \"#utility.yul\":23105:23108   */\n      dup6\n        /* \"#utility.yul\":23087:23109   */\n      tag_373\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":23077:23085   */\n      dup4\n        /* \"#utility.yul\":23073:23110   */\n      add\n        /* \"#utility.yul\":23060:23071   */\n      dup3\n        /* \"#utility.yul\":23031:23111   */\n      tag_382\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":22690:23121   */\n      pop\n      pop\n        /* \"#utility.yul\":22675:23121   */\n    tag_631:\n        /* \"#utility.yul\":22585:23128   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23134:23251   */\n    tag_384:\n        /* \"#utility.yul\":23188:23196   */\n      0x00\n        /* \"#utility.yul\":23238:23243   */\n      dup3\n        /* \"#utility.yul\":23232:23236   */\n      dup3\n        /* \"#utility.yul\":23228:23244   */\n      shr\n        /* \"#utility.yul\":23207:23244   */\n      swap1\n      pop\n        /* \"#utility.yul\":23134:23251   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23257:23426   */\n    tag_385:\n        /* \"#utility.yul\":23301:23307   */\n      0x00\n        /* \"#utility.yul\":23334:23385   */\n      tag_639\n        /* \"#utility.yul\":23382:23383   */\n      0x00\n        /* \"#utility.yul\":23378:23384   */\n      not\n        /* \"#utility.yul\":23370:23375   */\n      dup5\n        /* \"#utility.yul\":23367:23368   */\n      0x08\n        /* \"#utility.yul\":23363:23376   */\n      mul\n        /* \"#utility.yul\":23334:23385   */\n      tag_384\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":23330:23386   */\n      not\n        /* \"#utility.yul\":23415:23419   */\n      dup1\n        /* \"#utility.yul\":23409:23413   */\n      dup4\n        /* \"#utility.yul\":23405:23420   */\n      and\n        /* \"#utility.yul\":23395:23420   */\n      swap2\n      pop\n        /* \"#utility.yul\":23308:23426   */\n      pop\n        /* \"#utility.yul\":23257:23426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23431:23726   */\n    tag_386:\n        /* \"#utility.yul\":23507:23511   */\n      0x00\n        /* \"#utility.yul\":23653:23682   */\n      tag_641\n        /* \"#utility.yul\":23678:23681   */\n      dup4\n        /* \"#utility.yul\":23672:23676   */\n      dup4\n        /* \"#utility.yul\":23653:23682   */\n      tag_385\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":23645:23682   */\n      swap2\n      pop\n        /* \"#utility.yul\":23715:23718   */\n      dup3\n        /* \"#utility.yul\":23712:23713   */\n      0x02\n        /* \"#utility.yul\":23708:23719   */\n      mul\n        /* \"#utility.yul\":23702:23706   */\n      dup3\n        /* \"#utility.yul\":23699:23720   */\n      or\n        /* \"#utility.yul\":23691:23720   */\n      swap1\n      pop\n        /* \"#utility.yul\":23431:23726   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23731:25126   */\n    tag_256:\n        /* \"#utility.yul\":23848:23885   */\n      tag_643\n        /* \"#utility.yul\":23881:23884   */\n      dup3\n        /* \"#utility.yul\":23848:23885   */\n      tag_326\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":23950:23968   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":23942:23948   */\n      dup2\n        /* \"#utility.yul\":23939:23969   */\n      gt\n        /* \"#utility.yul\":23936:23992   */\n      iszero\n      tag_644\n      jumpi\n        /* \"#utility.yul\":23972:23990   */\n      tag_645\n      tag_284\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":23936:23992   */\n    tag_644:\n        /* \"#utility.yul\":24016:24054   */\n      tag_646\n        /* \"#utility.yul\":24048:24052   */\n      dup3\n        /* \"#utility.yul\":24042:24053   */\n      sload\n        /* \"#utility.yul\":24016:24054   */\n      tag_103\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":24101:24168   */\n      tag_647\n        /* \"#utility.yul\":24161:24167   */\n      dup3\n        /* \"#utility.yul\":24153:24159   */\n      dup3\n        /* \"#utility.yul\":24147:24151   */\n      dup6\n        /* \"#utility.yul\":24101:24168   */\n      tag_383\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":24195:24196   */\n      0x00\n        /* \"#utility.yul\":24219:24223   */\n      0x20\n        /* \"#utility.yul\":24206:24223   */\n      swap1\n      pop\n        /* \"#utility.yul\":24251:24253   */\n      0x1f\n        /* \"#utility.yul\":24243:24249   */\n      dup4\n        /* \"#utility.yul\":24240:24254   */\n      gt\n        /* \"#utility.yul\":24268:24269   */\n      0x01\n        /* \"#utility.yul\":24263:24881   */\n      dup2\n      eq\n      tag_649\n      jumpi\n        /* \"#utility.yul\":24925:24926   */\n      0x00\n        /* \"#utility.yul\":24942:24948   */\n      dup5\n        /* \"#utility.yul\":24939:25016   */\n      iszero\n      tag_650\n      jumpi\n        /* \"#utility.yul\":24991:25000   */\n      dup3\n        /* \"#utility.yul\":24986:24989   */\n      dup8\n        /* \"#utility.yul\":24982:25001   */\n      add\n        /* \"#utility.yul\":24976:25002   */\n      mload\n        /* \"#utility.yul\":24967:25002   */\n      swap1\n      pop\n        /* \"#utility.yul\":24939:25016   */\n    tag_650:\n        /* \"#utility.yul\":25042:25109   */\n      tag_651\n        /* \"#utility.yul\":25102:25108   */\n      dup6\n        /* \"#utility.yul\":25095:25100   */\n      dup3\n        /* \"#utility.yul\":25042:25109   */\n      tag_386\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":25036:25040   */\n      dup7\n        /* \"#utility.yul\":25029:25110   */\n      sstore\n        /* \"#utility.yul\":24898:25120   */\n      pop\n        /* \"#utility.yul\":24233:25120   */\n      jump(tag_648)\n        /* \"#utility.yul\":24263:24881   */\n    tag_649:\n        /* \"#utility.yul\":24315:24319   */\n      0x1f\n        /* \"#utility.yul\":24311:24320   */\n      not\n        /* \"#utility.yul\":24303:24309   */\n      dup5\n        /* \"#utility.yul\":24299:24321   */\n      and\n        /* \"#utility.yul\":24349:24386   */\n      tag_652\n        /* \"#utility.yul\":24381:24385   */\n      dup7\n        /* \"#utility.yul\":24349:24386   */\n      tag_372\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":24408:24409   */\n      0x00\n        /* \"#utility.yul\":24422:24630   */\n    tag_653:\n        /* \"#utility.yul\":24436:24443   */\n      dup3\n        /* \"#utility.yul\":24433:24434   */\n      dup2\n        /* \"#utility.yul\":24430:24444   */\n      lt\n        /* \"#utility.yul\":24422:24630   */\n      iszero\n      tag_655\n      jumpi\n        /* \"#utility.yul\":24515:24524   */\n      dup5\n        /* \"#utility.yul\":24510:24513   */\n      dup10\n        /* \"#utility.yul\":24506:24525   */\n      add\n        /* \"#utility.yul\":24500:24526   */\n      mload\n        /* \"#utility.yul\":24492:24498   */\n      dup3\n        /* \"#utility.yul\":24485:24527   */\n      sstore\n        /* \"#utility.yul\":24566:24567   */\n      0x01\n        /* \"#utility.yul\":24558:24564   */\n      dup3\n        /* \"#utility.yul\":24554:24568   */\n      add\n        /* \"#utility.yul\":24544:24568   */\n      swap2\n      pop\n        /* \"#utility.yul\":24613:24615   */\n      0x20\n        /* \"#utility.yul\":24602:24611   */\n      dup6\n        /* \"#utility.yul\":24598:24616   */\n      add\n        /* \"#utility.yul\":24585:24616   */\n      swap5\n      pop\n        /* \"#utility.yul\":24459:24463   */\n      0x20\n        /* \"#utility.yul\":24456:24457   */\n      dup2\n        /* \"#utility.yul\":24452:24464   */\n      add\n        /* \"#utility.yul\":24447:24464   */\n      swap1\n      pop\n        /* \"#utility.yul\":24422:24630   */\n      jump(tag_653)\n    tag_655:\n        /* \"#utility.yul\":24658:24664   */\n      dup7\n        /* \"#utility.yul\":24649:24656   */\n      dup4\n        /* \"#utility.yul\":24646:24665   */\n      lt\n        /* \"#utility.yul\":24643:24822   */\n      iszero\n      tag_656\n      jumpi\n        /* \"#utility.yul\":24716:24725   */\n      dup5\n        /* \"#utility.yul\":24711:24714   */\n      dup10\n        /* \"#utility.yul\":24707:24726   */\n      add\n        /* \"#utility.yul\":24701:24727   */\n      mload\n        /* \"#utility.yul\":24759:24807   */\n      tag_657\n        /* \"#utility.yul\":24801:24805   */\n      0x1f\n        /* \"#utility.yul\":24793:24799   */\n      dup10\n        /* \"#utility.yul\":24789:24806   */\n      and\n        /* \"#utility.yul\":24778:24787   */\n      dup3\n        /* \"#utility.yul\":24759:24807   */\n      tag_385\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":24751:24757   */\n      dup4\n        /* \"#utility.yul\":24744:24808   */\n      sstore\n        /* \"#utility.yul\":24666:24822   */\n      pop\n        /* \"#utility.yul\":24643:24822   */\n    tag_656:\n        /* \"#utility.yul\":24868:24869   */\n      0x01\n        /* \"#utility.yul\":24864:24865   */\n      0x02\n        /* \"#utility.yul\":24856:24862   */\n      dup9\n        /* \"#utility.yul\":24852:24866   */\n      mul\n        /* \"#utility.yul\":24848:24870   */\n      add\n        /* \"#utility.yul\":24842:24846   */\n      dup9\n        /* \"#utility.yul\":24835:24871   */\n      sstore\n        /* \"#utility.yul\":24270:24881   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":24233:25120   */\n    tag_648:\n      pop\n        /* \"#utility.yul\":23823:25126   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":23731:25126   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25132:25464   */\n    tag_278:\n        /* \"#utility.yul\":25253:25257   */\n      0x00\n        /* \"#utility.yul\":25291:25293   */\n      0x40\n        /* \"#utility.yul\":25280:25289   */\n      dup3\n        /* \"#utility.yul\":25276:25294   */\n      add\n        /* \"#utility.yul\":25268:25294   */\n      swap1\n      pop\n        /* \"#utility.yul\":25304:25375   */\n      tag_659\n        /* \"#utility.yul\":25372:25373   */\n      0x00\n        /* \"#utility.yul\":25361:25370   */\n      dup4\n        /* \"#utility.yul\":25357:25374   */\n      add\n        /* \"#utility.yul\":25348:25354   */\n      dup6\n        /* \"#utility.yul\":25304:25375   */\n      tag_336\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":25385:25457   */\n      tag_660\n        /* \"#utility.yul\":25453:25455   */\n      0x20\n        /* \"#utility.yul\":25442:25451   */\n      dup4\n        /* \"#utility.yul\":25438:25456   */\n      add\n        /* \"#utility.yul\":25429:25435   */\n      dup5\n        /* \"#utility.yul\":25385:25457   */\n      tag_339\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":25132:25464   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25470:25650   */\n    tag_290:\n        /* \"#utility.yul\":25518:25595   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25515:25516   */\n      0x00\n        /* \"#utility.yul\":25508:25596   */\n      mstore\n        /* \"#utility.yul\":25615:25619   */\n      0x12\n        /* \"#utility.yul\":25612:25613   */\n      0x04\n        /* \"#utility.yul\":25605:25620   */\n      mstore\n        /* \"#utility.yul\":25639:25643   */\n      0x24\n        /* \"#utility.yul\":25636:25637   */\n      0x00\n        /* \"#utility.yul\":25629:25644   */\n      revert\n\n    auxdata: 0xa2646970667358221220bc97173b0893b00f0ce97f17580875dd2e7be7ea26b04b8e855581aff062655064736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_238": {
									"entryPoint": null,
									"id": 238,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_3217": {
									"entryPoint": null,
									"id": 3217,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 880,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 474,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 429,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 616,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 767,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 324,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 810,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6426:18",
										"nodeType": "YulBlock",
										"src": "0:6426:18",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:18",
													"nodeType": "YulBlock",
													"src": "47:35:18",
													"statements": [
														{
															"nativeSrc": "57:19:18",
															"nodeType": "YulAssignment",
															"src": "57:19:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:18",
																		"nodeType": "YulLiteral",
																		"src": "73:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:18"
																},
																"nativeSrc": "67:9:18",
																"nodeType": "YulFunctionCall",
																"src": "67:9:18"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:18"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:18",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:18",
														"nodeType": "YulTypedName",
														"src": "40:6:18",
														"type": ""
													}
												],
												"src": "7:75:18"
											},
											{
												"body": {
													"nativeSrc": "177:28:18",
													"nodeType": "YulBlock",
													"src": "177:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:18",
																		"nodeType": "YulLiteral",
																		"src": "194:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:18",
																		"nodeType": "YulLiteral",
																		"src": "197:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:18"
																},
																"nativeSrc": "187:12:18",
																"nodeType": "YulFunctionCall",
																"src": "187:12:18"
															},
															"nativeSrc": "187:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:18"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:18"
											},
											{
												"body": {
													"nativeSrc": "300:28:18",
													"nodeType": "YulBlock",
													"src": "300:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:18",
																		"nodeType": "YulLiteral",
																		"src": "317:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:18",
																		"nodeType": "YulLiteral",
																		"src": "320:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:18"
																},
																"nativeSrc": "310:12:18",
																"nodeType": "YulFunctionCall",
																"src": "310:12:18"
															},
															"nativeSrc": "310:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:18"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:18"
											},
											{
												"body": {
													"nativeSrc": "379:81:18",
													"nodeType": "YulBlock",
													"src": "379:81:18",
													"statements": [
														{
															"nativeSrc": "389:65:18",
															"nodeType": "YulAssignment",
															"src": "389:65:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:18",
																		"nodeType": "YulLiteral",
																		"src": "411:42:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:18"
																},
																"nativeSrc": "400:54:18",
																"nodeType": "YulFunctionCall",
																"src": "400:54:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:18",
														"nodeType": "YulTypedName",
														"src": "361:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:18",
														"nodeType": "YulTypedName",
														"src": "371:7:18",
														"type": ""
													}
												],
												"src": "334:126:18"
											},
											{
												"body": {
													"nativeSrc": "511:51:18",
													"nodeType": "YulBlock",
													"src": "511:51:18",
													"statements": [
														{
															"nativeSrc": "521:35:18",
															"nodeType": "YulAssignment",
															"src": "521:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:18"
																},
																"nativeSrc": "532:24:18",
																"nodeType": "YulFunctionCall",
																"src": "532:24:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:18",
														"nodeType": "YulTypedName",
														"src": "493:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:18",
														"nodeType": "YulTypedName",
														"src": "503:7:18",
														"type": ""
													}
												],
												"src": "466:96:18"
											},
											{
												"body": {
													"nativeSrc": "611:79:18",
													"nodeType": "YulBlock",
													"src": "611:79:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:18",
																"nodeType": "YulBlock",
																"src": "668:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:18",
																					"nodeType": "YulLiteral",
																					"src": "677:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:18",
																					"nodeType": "YulLiteral",
																					"src": "680:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:18"
																			},
																			"nativeSrc": "670:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:18"
																		},
																		"nativeSrc": "670:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:18"
																				},
																				"nativeSrc": "641:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:18"
																		},
																		"nativeSrc": "631:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:18"
																},
																"nativeSrc": "624:43:18",
																"nodeType": "YulFunctionCall",
																"src": "624:43:18"
															},
															"nativeSrc": "621:63:18",
															"nodeType": "YulIf",
															"src": "621:63:18"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:18",
														"nodeType": "YulTypedName",
														"src": "604:5:18",
														"type": ""
													}
												],
												"src": "568:122:18"
											},
											{
												"body": {
													"nativeSrc": "759:80:18",
													"nodeType": "YulBlock",
													"src": "759:80:18",
													"statements": [
														{
															"nativeSrc": "769:22:18",
															"nodeType": "YulAssignment",
															"src": "769:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:18"
																},
																"nativeSrc": "778:13:18",
																"nodeType": "YulFunctionCall",
																"src": "778:13:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:18"
																},
																"nativeSrc": "800:33:18",
																"nodeType": "YulFunctionCall",
																"src": "800:33:18"
															},
															"nativeSrc": "800:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:18"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:18",
														"nodeType": "YulTypedName",
														"src": "737:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:18",
														"nodeType": "YulTypedName",
														"src": "745:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:18",
														"nodeType": "YulTypedName",
														"src": "753:5:18",
														"type": ""
													}
												],
												"src": "696:143:18"
											},
											{
												"body": {
													"nativeSrc": "922:274:18",
													"nodeType": "YulBlock",
													"src": "922:274:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:18",
																"nodeType": "YulBlock",
																"src": "968:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:18"
																			},
																			"nativeSrc": "970:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:18"
																		},
																		"nativeSrc": "970:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:18"
																		},
																		"nativeSrc": "939:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:18",
																		"nodeType": "YulLiteral",
																		"src": "964:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:18"
																},
																"nativeSrc": "935:32:18",
																"nodeType": "YulFunctionCall",
																"src": "935:32:18"
															},
															"nativeSrc": "932:119:18",
															"nodeType": "YulIf",
															"src": "932:119:18"
														},
														{
															"nativeSrc": "1061:128:18",
															"nodeType": "YulBlock",
															"src": "1061:128:18",
															"statements": [
																{
																	"nativeSrc": "1076:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:18",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:18",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:18"
																				},
																				"nativeSrc": "1147:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:18",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:18"
																		},
																		"nativeSrc": "1115:64:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:18",
														"nodeType": "YulTypedName",
														"src": "892:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:18",
														"nodeType": "YulTypedName",
														"src": "903:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:18",
														"nodeType": "YulTypedName",
														"src": "915:6:18",
														"type": ""
													}
												],
												"src": "845:351:18"
											},
											{
												"body": {
													"nativeSrc": "1261:40:18",
													"nodeType": "YulBlock",
													"src": "1261:40:18",
													"statements": [
														{
															"nativeSrc": "1272:22:18",
															"nodeType": "YulAssignment",
															"src": "1272:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1288:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1282:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:18"
																},
																"nativeSrc": "1282:12:18",
																"nodeType": "YulFunctionCall",
																"src": "1282:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1272:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1202:99:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1244:5:18",
														"nodeType": "YulTypedName",
														"src": "1244:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1254:6:18",
														"nodeType": "YulTypedName",
														"src": "1254:6:18",
														"type": ""
													}
												],
												"src": "1202:99:18"
											},
											{
												"body": {
													"nativeSrc": "1335:152:18",
													"nodeType": "YulBlock",
													"src": "1335:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1352:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:77:18",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1345:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:18"
																},
																"nativeSrc": "1345:88:18",
																"nodeType": "YulFunctionCall",
																"src": "1345:88:18"
															},
															"nativeSrc": "1345:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1449:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:4:18",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:18",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1442:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:18"
																},
																"nativeSrc": "1442:15:18",
																"nodeType": "YulFunctionCall",
																"src": "1442:15:18"
															},
															"nativeSrc": "1442:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1473:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1476:4:18",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1466:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:18"
																},
																"nativeSrc": "1466:15:18",
																"nodeType": "YulFunctionCall",
																"src": "1466:15:18"
															},
															"nativeSrc": "1466:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:18"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1307:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:18"
											},
											{
												"body": {
													"nativeSrc": "1521:152:18",
													"nodeType": "YulBlock",
													"src": "1521:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:77:18",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:18"
																},
																"nativeSrc": "1531:88:18",
																"nodeType": "YulFunctionCall",
																"src": "1531:88:18"
															},
															"nativeSrc": "1531:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1635:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1638:4:18",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:18",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1628:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:18"
																},
																"nativeSrc": "1628:15:18",
																"nodeType": "YulFunctionCall",
																"src": "1628:15:18"
															},
															"nativeSrc": "1628:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:4:18",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:18"
																},
																"nativeSrc": "1652:15:18",
																"nodeType": "YulFunctionCall",
																"src": "1652:15:18"
															},
															"nativeSrc": "1652:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:18"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1493:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:18"
											},
											{
												"body": {
													"nativeSrc": "1730:269:18",
													"nodeType": "YulBlock",
													"src": "1730:269:18",
													"statements": [
														{
															"nativeSrc": "1740:22:18",
															"nodeType": "YulAssignment",
															"src": "1740:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1754:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1760:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:18",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1750:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:18"
																},
																"nativeSrc": "1750:12:18",
																"nodeType": "YulFunctionCall",
																"src": "1750:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1740:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:18"
																}
															]
														},
														{
															"nativeSrc": "1771:38:18",
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1801:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1807:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1797:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:18"
																},
																"nativeSrc": "1797:12:18",
																"nodeType": "YulFunctionCall",
																"src": "1797:12:18"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1775:18:18",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1848:51:18",
																"nodeType": "YulBlock",
																"src": "1848:51:18",
																"statements": [
																	{
																		"nativeSrc": "1862:27:18",
																		"nodeType": "YulAssignment",
																		"src": "1862:27:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1876:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1884:4:18",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:18",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1872:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:18"
																			},
																			"nativeSrc": "1872:17:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:18"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1862:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1828:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1821:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:18"
																},
																"nativeSrc": "1821:26:18",
																"nodeType": "YulFunctionCall",
																"src": "1821:26:18"
															},
															"nativeSrc": "1818:81:18",
															"nodeType": "YulIf",
															"src": "1818:81:18"
														},
														{
															"body": {
																"nativeSrc": "1951:42:18",
																"nodeType": "YulBlock",
																"src": "1951:42:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1965:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:18"
																			},
																			"nativeSrc": "1965:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:18"
																		},
																		"nativeSrc": "1965:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1915:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1938:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1946:2:18",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1935:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:18"
																		},
																		"nativeSrc": "1935:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:18"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1912:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:18"
																},
																"nativeSrc": "1912:38:18",
																"nodeType": "YulFunctionCall",
																"src": "1912:38:18"
															},
															"nativeSrc": "1909:84:18",
															"nodeType": "YulIf",
															"src": "1909:84:18"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1679:320:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1714:4:18",
														"nodeType": "YulTypedName",
														"src": "1714:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1723:6:18",
														"nodeType": "YulTypedName",
														"src": "1723:6:18",
														"type": ""
													}
												],
												"src": "1679:320:18"
											},
											{
												"body": {
													"nativeSrc": "2059:87:18",
													"nodeType": "YulBlock",
													"src": "2059:87:18",
													"statements": [
														{
															"nativeSrc": "2069:11:18",
															"nodeType": "YulAssignment",
															"src": "2069:11:18",
															"value": {
																"name": "ptr",
																"nativeSrc": "2077:3:18",
																"nodeType": "YulIdentifier",
																"src": "2077:3:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2069:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:18",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2100:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:18"
																},
																"nativeSrc": "2090:14:18",
																"nodeType": "YulFunctionCall",
																"src": "2090:14:18"
															},
															"nativeSrc": "2090:14:18",
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:18"
														},
														{
															"nativeSrc": "2113:26:18",
															"nodeType": "YulAssignment",
															"src": "2113:26:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2131:1:18",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2134:4:18",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2121:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:18"
																},
																"nativeSrc": "2121:18:18",
																"nodeType": "YulFunctionCall",
																"src": "2121:18:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2113:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:18"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2005:141:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2046:3:18",
														"nodeType": "YulTypedName",
														"src": "2046:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2054:4:18",
														"nodeType": "YulTypedName",
														"src": "2054:4:18",
														"type": ""
													}
												],
												"src": "2005:141:18"
											},
											{
												"body": {
													"nativeSrc": "2196:49:18",
													"nodeType": "YulBlock",
													"src": "2196:49:18",
													"statements": [
														{
															"nativeSrc": "2206:33:18",
															"nodeType": "YulAssignment",
															"src": "2206:33:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2224:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:2:18",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2220:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:18"
																		},
																		"nativeSrc": "2220:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2236:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2216:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:18"
																},
																"nativeSrc": "2216:23:18",
																"nodeType": "YulFunctionCall",
																"src": "2216:23:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2206:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:18"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2152:93:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2179:5:18",
														"nodeType": "YulTypedName",
														"src": "2179:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2189:6:18",
														"nodeType": "YulTypedName",
														"src": "2189:6:18",
														"type": ""
													}
												],
												"src": "2152:93:18"
											},
											{
												"body": {
													"nativeSrc": "2304:54:18",
													"nodeType": "YulBlock",
													"src": "2304:54:18",
													"statements": [
														{
															"nativeSrc": "2314:37:18",
															"nodeType": "YulAssignment",
															"src": "2314:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2339:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:18"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2345:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:18"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2335:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:18"
																},
																"nativeSrc": "2335:16:18",
																"nodeType": "YulFunctionCall",
																"src": "2335:16:18"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2314:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:18"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2251:107:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2279:4:18",
														"nodeType": "YulTypedName",
														"src": "2279:4:18",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2285:5:18",
														"nodeType": "YulTypedName",
														"src": "2285:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2295:8:18",
														"nodeType": "YulTypedName",
														"src": "2295:8:18",
														"type": ""
													}
												],
												"src": "2251:107:18"
											},
											{
												"body": {
													"nativeSrc": "2440:317:18",
													"nodeType": "YulBlock",
													"src": "2440:317:18",
													"statements": [
														{
															"nativeSrc": "2450:35:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2471:10:18",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2483:1:18",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:18",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2467:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:18"
																},
																"nativeSrc": "2467:18:18",
																"nodeType": "YulFunctionCall",
																"src": "2467:18:18"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2454:9:18",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2494:109:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2525:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:66:18",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2506:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:18"
																},
																"nativeSrc": "2506:97:18",
																"nodeType": "YulFunctionCall",
																"src": "2506:97:18"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2498:4:18",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2612:51:18",
															"nodeType": "YulAssignment",
															"src": "2612:51:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2643:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:18"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2654:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:18"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2624:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:18"
																},
																"nativeSrc": "2624:39:18",
																"nodeType": "YulFunctionCall",
																"src": "2624:39:18"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2612:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:18"
																}
															]
														},
														{
															"nativeSrc": "2672:30:18",
															"nodeType": "YulAssignment",
															"src": "2672:30:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2685:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2696:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:18"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2692:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:18"
																		},
																		"nativeSrc": "2692:9:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2681:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:18"
																},
																"nativeSrc": "2681:21:18",
																"nodeType": "YulFunctionCall",
																"src": "2681:21:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2672:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:18"
																}
															]
														},
														{
															"nativeSrc": "2711:40:18",
															"nodeType": "YulAssignment",
															"src": "2711:40:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2724:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2735:8:18",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:18"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2745:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2731:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:18"
																		},
																		"nativeSrc": "2731:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2721:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:18"
																},
																"nativeSrc": "2721:30:18",
																"nodeType": "YulFunctionCall",
																"src": "2721:30:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2711:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:18"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2364:393:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2401:5:18",
														"nodeType": "YulTypedName",
														"src": "2401:5:18",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2408:10:18",
														"nodeType": "YulTypedName",
														"src": "2408:10:18",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2420:8:18",
														"nodeType": "YulTypedName",
														"src": "2420:8:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2433:6:18",
														"nodeType": "YulTypedName",
														"src": "2433:6:18",
														"type": ""
													}
												],
												"src": "2364:393:18"
											},
											{
												"body": {
													"nativeSrc": "2808:32:18",
													"nodeType": "YulBlock",
													"src": "2808:32:18",
													"statements": [
														{
															"nativeSrc": "2818:16:18",
															"nodeType": "YulAssignment",
															"src": "2818:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "2829:5:18",
																"nodeType": "YulIdentifier",
																"src": "2829:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2818:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2763:77:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2790:5:18",
														"nodeType": "YulTypedName",
														"src": "2790:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2800:7:18",
														"nodeType": "YulTypedName",
														"src": "2800:7:18",
														"type": ""
													}
												],
												"src": "2763:77:18"
											},
											{
												"body": {
													"nativeSrc": "2878:28:18",
													"nodeType": "YulBlock",
													"src": "2878:28:18",
													"statements": [
														{
															"nativeSrc": "2888:12:18",
															"nodeType": "YulAssignment",
															"src": "2888:12:18",
															"value": {
																"name": "value",
																"nativeSrc": "2895:5:18",
																"nodeType": "YulIdentifier",
																"src": "2895:5:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2888:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:18"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2846:60:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2864:5:18",
														"nodeType": "YulTypedName",
														"src": "2864:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2874:3:18",
														"nodeType": "YulTypedName",
														"src": "2874:3:18",
														"type": ""
													}
												],
												"src": "2846:60:18"
											},
											{
												"body": {
													"nativeSrc": "2972:82:18",
													"nodeType": "YulBlock",
													"src": "2972:82:18",
													"statements": [
														{
															"nativeSrc": "2982:66:18",
															"nodeType": "YulAssignment",
															"src": "2982:66:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3040:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3022:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:18"
																				},
																				"nativeSrc": "3022:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:18"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3013:8:18",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:18"
																		},
																		"nativeSrc": "3013:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2995:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:18"
																},
																"nativeSrc": "2995:53:18",
																"nodeType": "YulFunctionCall",
																"src": "2995:53:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2982:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2912:142:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2952:5:18",
														"nodeType": "YulTypedName",
														"src": "2952:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2962:9:18",
														"nodeType": "YulTypedName",
														"src": "2962:9:18",
														"type": ""
													}
												],
												"src": "2912:142:18"
											},
											{
												"body": {
													"nativeSrc": "3107:28:18",
													"nodeType": "YulBlock",
													"src": "3107:28:18",
													"statements": [
														{
															"nativeSrc": "3117:12:18",
															"nodeType": "YulAssignment",
															"src": "3117:12:18",
															"value": {
																"name": "value",
																"nativeSrc": "3124:5:18",
																"nodeType": "YulIdentifier",
																"src": "3124:5:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3117:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:18"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3060:75:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3093:5:18",
														"nodeType": "YulTypedName",
														"src": "3093:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3103:3:18",
														"nodeType": "YulTypedName",
														"src": "3103:3:18",
														"type": ""
													}
												],
												"src": "3060:75:18"
											},
											{
												"body": {
													"nativeSrc": "3217:193:18",
													"nodeType": "YulBlock",
													"src": "3217:193:18",
													"statements": [
														{
															"nativeSrc": "3227:63:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:18",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3282:7:18",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:18"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3251:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:18"
																},
																"nativeSrc": "3251:39:18",
																"nodeType": "YulFunctionCall",
																"src": "3251:39:18"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3231:16:18",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3306:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3346:4:18",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:18"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3340:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:18"
																				},
																				"nativeSrc": "3340:11:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:18"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3353:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3385:16:18",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:18"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3361:23:18",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:18"
																				},
																				"nativeSrc": "3361:41:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:18"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3312:27:18",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:18"
																		},
																		"nativeSrc": "3312:91:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:18"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3299:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:18"
																},
																"nativeSrc": "3299:105:18",
																"nodeType": "YulFunctionCall",
																"src": "3299:105:18"
															},
															"nativeSrc": "3299:105:18",
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:18"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3141:269:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3194:4:18",
														"nodeType": "YulTypedName",
														"src": "3194:4:18",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3200:6:18",
														"nodeType": "YulTypedName",
														"src": "3200:6:18",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3208:7:18",
														"nodeType": "YulTypedName",
														"src": "3208:7:18",
														"type": ""
													}
												],
												"src": "3141:269:18"
											},
											{
												"body": {
													"nativeSrc": "3465:24:18",
													"nodeType": "YulBlock",
													"src": "3465:24:18",
													"statements": [
														{
															"nativeSrc": "3475:8:18",
															"nodeType": "YulAssignment",
															"src": "3475:8:18",
															"value": {
																"kind": "number",
																"nativeSrc": "3482:1:18",
																"nodeType": "YulLiteral",
																"src": "3482:1:18",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3475:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:18"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3416:73:18",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3461:3:18",
														"nodeType": "YulTypedName",
														"src": "3461:3:18",
														"type": ""
													}
												],
												"src": "3416:73:18"
											},
											{
												"body": {
													"nativeSrc": "3548:136:18",
													"nodeType": "YulBlock",
													"src": "3548:136:18",
													"statements": [
														{
															"nativeSrc": "3558:46:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:18",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3572:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:18"
																},
																"nativeSrc": "3572:32:18",
																"nodeType": "YulFunctionCall",
																"src": "3572:32:18"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3562:6:18",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3657:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:18"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3663:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:18"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3671:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:18"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3613:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:18"
																},
																"nativeSrc": "3613:65:18",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:18"
															},
															"nativeSrc": "3613:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:18"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3495:189:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3534:4:18",
														"nodeType": "YulTypedName",
														"src": "3534:4:18",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3540:6:18",
														"nodeType": "YulTypedName",
														"src": "3540:6:18",
														"type": ""
													}
												],
												"src": "3495:189:18"
											},
											{
												"body": {
													"nativeSrc": "3740:136:18",
													"nodeType": "YulBlock",
													"src": "3740:136:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "3807:63:18",
																"nodeType": "YulBlock",
																"src": "3807:63:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3851:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3858:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3821:29:18",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:18"
																			},
																			"nativeSrc": "3821:39:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:18"
																		},
																		"nativeSrc": "3821:39:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3760:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3767:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3757:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:18"
																},
																"nativeSrc": "3757:14:18",
																"nodeType": "YulFunctionCall",
																"src": "3757:14:18"
															},
															"nativeSrc": "3750:120:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3772:26:18",
																"nodeType": "YulBlock",
																"src": "3772:26:18",
																"statements": [
																	{
																		"nativeSrc": "3774:22:18",
																		"nodeType": "YulAssignment",
																		"src": "3774:22:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3787:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3794:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:18",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3783:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:18"
																			},
																			"nativeSrc": "3783:13:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:18"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3774:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3754:2:18",
																"nodeType": "YulBlock",
																"src": "3754:2:18",
																"statements": []
															},
															"src": "3750:120:18"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3690:186:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3728:5:18",
														"nodeType": "YulTypedName",
														"src": "3728:5:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3735:3:18",
														"nodeType": "YulTypedName",
														"src": "3735:3:18",
														"type": ""
													}
												],
												"src": "3690:186:18"
											},
											{
												"body": {
													"nativeSrc": "3961:464:18",
													"nodeType": "YulBlock",
													"src": "3961:464:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "3987:431:18",
																"nodeType": "YulBlock",
																"src": "3987:431:18",
																"statements": [
																	{
																		"nativeSrc": "4001:54:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4049:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:18"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4017:31:18",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:18"
																			},
																			"nativeSrc": "4017:38:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:18"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4005:8:18",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4068:63:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4091:8:18",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4119:10:18",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:18"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4101:17:18",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:18"
																					},
																					"nativeSrc": "4101:29:18",
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4087:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:18"
																			},
																			"nativeSrc": "4087:44:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:18"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4072:11:18",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4288:27:18",
																			"nodeType": "YulBlock",
																			"src": "4288:27:18",
																			"statements": [
																				{
																					"nativeSrc": "4290:23:18",
																					"nodeType": "YulAssignment",
																					"src": "4290:23:18",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4305:8:18",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:18"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4290:11:18",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:18"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4272:10:18",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4284:2:18",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:18",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4269:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:18"
																			},
																			"nativeSrc": "4269:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:18"
																		},
																		"nativeSrc": "4266:49:18",
																		"nodeType": "YulIf",
																		"src": "4266:49:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4357:11:18",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4374:8:18",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4402:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:18"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4384:17:18",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:18"
																							},
																							"nativeSrc": "4384:22:18",
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4370:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:18"
																					},
																					"nativeSrc": "4370:37:18",
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:18"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4328:28:18",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:18"
																			},
																			"nativeSrc": "4328:80:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:18"
																		},
																		"nativeSrc": "4328:80:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3978:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3983:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3975:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:18"
																},
																"nativeSrc": "3975:11:18",
																"nodeType": "YulFunctionCall",
																"src": "3975:11:18"
															},
															"nativeSrc": "3972:446:18",
															"nodeType": "YulIf",
															"src": "3972:446:18"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3882:543:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3937:5:18",
														"nodeType": "YulTypedName",
														"src": "3937:5:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3944:3:18",
														"nodeType": "YulTypedName",
														"src": "3944:3:18",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3949:10:18",
														"nodeType": "YulTypedName",
														"src": "3949:10:18",
														"type": ""
													}
												],
												"src": "3882:543:18"
											},
											{
												"body": {
													"nativeSrc": "4494:54:18",
													"nodeType": "YulBlock",
													"src": "4494:54:18",
													"statements": [
														{
															"nativeSrc": "4504:37:18",
															"nodeType": "YulAssignment",
															"src": "4504:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4529:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:18"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4535:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:18"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4525:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:18"
																},
																"nativeSrc": "4525:16:18",
																"nodeType": "YulFunctionCall",
																"src": "4525:16:18"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4504:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:18"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4431:117:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4469:4:18",
														"nodeType": "YulTypedName",
														"src": "4469:4:18",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4475:5:18",
														"nodeType": "YulTypedName",
														"src": "4475:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4485:8:18",
														"nodeType": "YulTypedName",
														"src": "4485:8:18",
														"type": ""
													}
												],
												"src": "4431:117:18"
											},
											{
												"body": {
													"nativeSrc": "4605:118:18",
													"nodeType": "YulBlock",
													"src": "4605:118:18",
													"statements": [
														{
															"nativeSrc": "4615:68:18",
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4664:1:18",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:18",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4667:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:18"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4660:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:18"
																				},
																				"nativeSrc": "4660:13:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:18"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4679:1:18",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:18",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4675:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:18"
																				},
																				"nativeSrc": "4675:6:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:18"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4631:28:18",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:18"
																		},
																		"nativeSrc": "4631:51:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:18"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4627:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:18"
																},
																"nativeSrc": "4627:56:18",
																"nodeType": "YulFunctionCall",
																"src": "4627:56:18"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4619:4:18",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4692:25:18",
															"nodeType": "YulAssignment",
															"src": "4692:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4706:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:18"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4712:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4702:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:18"
																},
																"nativeSrc": "4702:15:18",
																"nodeType": "YulFunctionCall",
																"src": "4702:15:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4692:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:18"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4554:169:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4582:4:18",
														"nodeType": "YulTypedName",
														"src": "4582:4:18",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4588:5:18",
														"nodeType": "YulTypedName",
														"src": "4588:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4598:6:18",
														"nodeType": "YulTypedName",
														"src": "4598:6:18",
														"type": ""
													}
												],
												"src": "4554:169:18"
											},
											{
												"body": {
													"nativeSrc": "4809:214:18",
													"nodeType": "YulBlock",
													"src": "4809:214:18",
													"statements": [
														{
															"nativeSrc": "4942:37:18",
															"nodeType": "YulAssignment",
															"src": "4942:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4969:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:18"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4975:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:18"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4950:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:18"
																},
																"nativeSrc": "4950:29:18",
																"nodeType": "YulFunctionCall",
																"src": "4950:29:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4942:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:18"
																}
															]
														},
														{
															"nativeSrc": "4988:29:18",
															"nodeType": "YulAssignment",
															"src": "4988:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4999:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5009:1:18",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:18",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5012:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:18"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5005:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:18"
																		},
																		"nativeSrc": "5005:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4996:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:18"
																},
																"nativeSrc": "4996:21:18",
																"nodeType": "YulFunctionCall",
																"src": "4996:21:18"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4988:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:18"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4728:295:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4790:4:18",
														"nodeType": "YulTypedName",
														"src": "4790:4:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4796:3:18",
														"nodeType": "YulTypedName",
														"src": "4796:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4804:4:18",
														"nodeType": "YulTypedName",
														"src": "4804:4:18",
														"type": ""
													}
												],
												"src": "4728:295:18"
											},
											{
												"body": {
													"nativeSrc": "5120:1303:18",
													"nodeType": "YulBlock",
													"src": "5120:1303:18",
													"statements": [
														{
															"nativeSrc": "5131:51:18",
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:18",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5178:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5145:32:18",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:18"
																},
																"nativeSrc": "5145:37:18",
																"nodeType": "YulFunctionCall",
																"src": "5145:37:18"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5135:6:18",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5267:22:18",
																"nodeType": "YulBlock",
																"src": "5267:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5269:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:18"
																			},
																			"nativeSrc": "5269:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:18"
																		},
																		"nativeSrc": "5269:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5239:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5247:18:18",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5236:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:18"
																},
																"nativeSrc": "5236:30:18",
																"nodeType": "YulFunctionCall",
																"src": "5236:30:18"
															},
															"nativeSrc": "5233:56:18",
															"nodeType": "YulIf",
															"src": "5233:56:18"
														},
														{
															"nativeSrc": "5299:52:18",
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5345:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:18"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5339:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:18"
																		},
																		"nativeSrc": "5339:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:18"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5313:25:18",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:18"
																},
																"nativeSrc": "5313:38:18",
																"nodeType": "YulFunctionCall",
																"src": "5313:38:18"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5303:6:18",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5444:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:18"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5450:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:18"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5458:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:18"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5398:45:18",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:18"
																},
																"nativeSrc": "5398:67:18",
																"nodeType": "YulFunctionCall",
																"src": "5398:67:18"
															},
															"nativeSrc": "5398:67:18",
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:18"
														},
														{
															"nativeSrc": "5475:18:18",
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:18",
															"value": {
																"kind": "number",
																"nativeSrc": "5492:1:18",
																"nodeType": "YulLiteral",
																"src": "5492:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5479:9:18",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5503:17:18",
															"nodeType": "YulAssignment",
															"src": "5503:17:18",
															"value": {
																"kind": "number",
																"nativeSrc": "5516:4:18",
																"nodeType": "YulLiteral",
																"src": "5516:4:18",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5503:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:18"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5567:611:18",
																		"nodeType": "YulBlock",
																		"src": "5567:611:18",
																		"statements": [
																			{
																				"nativeSrc": "5581:37:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5600:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:18"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5612:4:18",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:18",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5608:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:18"
																							},
																							"nativeSrc": "5608:9:18",
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:18"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5596:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:18"
																					},
																					"nativeSrc": "5596:22:18",
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:18"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5585:7:18",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5632:51:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5678:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:18"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5646:31:18",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:18"
																					},
																					"nativeSrc": "5646:37:18",
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:18"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5636:6:18",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5696:10:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5705:1:18",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5700:1:18",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5764:163:18",
																					"nodeType": "YulBlock",
																					"src": "5764:163:18",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5789:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5807:3:18",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:18"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5812:9:18",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:18"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5803:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:18"
																												},
																												"nativeSrc": "5803:19:18",
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:18"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5797:5:18",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:18"
																										},
																										"nativeSrc": "5797:26:18",
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5782:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:18"
																								},
																								"nativeSrc": "5782:42:18",
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:18"
																							},
																							"nativeSrc": "5782:42:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:18"
																						},
																						{
																							"nativeSrc": "5841:24:18",
																							"nodeType": "YulAssignment",
																							"src": "5841:24:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5855:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5863:1:18",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:18",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5851:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:18"
																								},
																								"nativeSrc": "5851:14:18",
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:18"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5841:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:18"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5882:31:18",
																							"nodeType": "YulAssignment",
																							"src": "5882:31:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5899:9:18",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5910:2:18",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:18",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5895:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:18"
																								},
																								"nativeSrc": "5895:18:18",
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:18"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5882:9:18",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5730:1:18",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:18"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5733:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5727:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:18"
																					},
																					"nativeSrc": "5727:14:18",
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:18"
																				},
																				"nativeSrc": "5719:208:18",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5742:21:18",
																					"nodeType": "YulBlock",
																					"src": "5742:21:18",
																					"statements": [
																						{
																							"nativeSrc": "5744:17:18",
																							"nodeType": "YulAssignment",
																							"src": "5744:17:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5753:1:18",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5756:4:18",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:18",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5749:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:18"
																								},
																								"nativeSrc": "5749:12:18",
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:18"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5744:1:18",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:18"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5723:3:18",
																					"nodeType": "YulBlock",
																					"src": "5723:3:18",
																					"statements": []
																				},
																				"src": "5719:208:18"
																			},
																			{
																				"body": {
																					"nativeSrc": "5963:156:18",
																					"nodeType": "YulBlock",
																					"src": "5963:156:18",
																					"statements": [
																						{
																							"nativeSrc": "5981:43:18",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6008:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6013:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6004:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:18"
																										},
																										"nativeSrc": "6004:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5998:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:18"
																								},
																								"nativeSrc": "5998:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:18"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5985:9:18",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:18",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6048:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6075:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:18"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6090:6:18",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:18"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6098:4:18",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:18",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6086:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:18"
																												},
																												"nativeSrc": "6086:17:18",
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:18"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6056:18:18",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:18"
																										},
																										"nativeSrc": "6056:48:18",
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6041:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:18"
																								},
																								"nativeSrc": "6041:64:18",
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:18"
																							},
																							"nativeSrc": "6041:64:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:18"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5946:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:18"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5955:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5943:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:18"
																					},
																					"nativeSrc": "5943:19:18",
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:18"
																				},
																				"nativeSrc": "5940:179:18",
																				"nodeType": "YulIf",
																				"src": "5940:179:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6139:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6153:6:18",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:18"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6161:1:18",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:18",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6149:3:18",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:18"
																									},
																									"nativeSrc": "6149:14:18",
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6165:1:18",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:18",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6145:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:18"
																							},
																							"nativeSrc": "6145:22:18",
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6132:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:18"
																					},
																					"nativeSrc": "6132:36:18",
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:18"
																				},
																				"nativeSrc": "6132:36:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:18"
																			}
																		]
																	},
																	"nativeSrc": "5560:618:18",
																	"nodeType": "YulCase",
																	"src": "5560:618:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5565:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:18",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6195:222:18",
																		"nodeType": "YulBlock",
																		"src": "6195:222:18",
																		"statements": [
																			{
																				"nativeSrc": "6209:14:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6222:1:18",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6213:5:18",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6246:67:18",
																					"nodeType": "YulBlock",
																					"src": "6246:67:18",
																					"statements": [
																						{
																							"nativeSrc": "6264:35:18",
																							"nodeType": "YulAssignment",
																							"src": "6264:35:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6283:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6288:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6279:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:18"
																										},
																										"nativeSrc": "6279:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6273:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:18"
																								},
																								"nativeSrc": "6273:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:18"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6264:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6239:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:18"
																				},
																				"nativeSrc": "6236:77:18",
																				"nodeType": "YulIf",
																				"src": "6236:77:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6333:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6392:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:18"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6399:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:18"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6339:52:18",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:18"
																							},
																							"nativeSrc": "6339:67:18",
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6326:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:18"
																					},
																					"nativeSrc": "6326:81:18",
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:18"
																				},
																				"nativeSrc": "6326:81:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:18"
																			}
																		]
																	},
																	"nativeSrc": "6187:230:18",
																	"nodeType": "YulCase",
																	"src": "6187:230:18",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5540:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5537:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:18"
																},
																"nativeSrc": "5537:14:18",
																"nodeType": "YulFunctionCall",
																"src": "5537:14:18"
															},
															"nativeSrc": "5530:887:18",
															"nodeType": "YulSwitch",
															"src": "5530:887:18"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5028:1395:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5109:4:18",
														"nodeType": "YulTypedName",
														"src": "5109:4:18",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5115:3:18",
														"nodeType": "YulTypedName",
														"src": "5115:3:18",
														"type": ""
													}
												],
												"src": "5028:1395:18"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162002c8338038062002c83833981810160405281019062000036919062000173565b6040518060400160405280600681526020017f4275734e465400000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4255530000000000000000000000000000000000000000000000000000000000815250815f9081620000b2919062000407565b508060019081620000c4919062000407565b5050508060085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620004eb565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200013d8262000112565b9050919050565b6200014f8162000131565b81146200015a575f80fd5b50565b5f815190506200016d8162000144565b92915050565b5f602082840312156200018b576200018a6200010e565b5b5f6200019a848285016200015d565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200021f57607f821691505b602082108103620002355762000234620001da565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620002997fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200025c565b620002a586836200025c565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620002ef620002e9620002e384620002bd565b620002c6565b620002bd565b9050919050565b5f819050919050565b6200030a83620002cf565b620003226200031982620002f6565b84845462000268565b825550505050565b5f90565b620003386200032a565b62000345818484620002ff565b505050565b5b818110156200036c57620003605f826200032e565b6001810190506200034b565b5050565b601f821115620003bb5762000385816200023b565b62000390846200024d565b81016020851015620003a0578190505b620003b8620003af856200024d565b8301826200034a565b50505b505050565b5f82821c905092915050565b5f620003dd5f1984600802620003c0565b1980831691505092915050565b5f620003f78383620003cc565b9150826002028217905092915050565b6200041282620001a3565b67ffffffffffffffff8111156200042e576200042d620001ad565b5b6200043a825462000207565b6200044782828562000370565b5f60209050601f8311600181146200047d575f841562000468578287015190505b620004748582620003ea565b865550620004e3565b601f1984166200048d866200023b565b5f5b82811015620004b6578489015182556001820191506020850194506020810190506200048f565b86831015620004d65784890151620004d2601f891682620003cc565b8355505b6001600288020188555050505b505050505050565b61278a80620004f95f395ff3fe608060405234801561000f575f80fd5b5060043610610109575f3560e01c806370a08231116100a0578063a22cb4651161006f578063a22cb465146102db578063b88d4fde146102f7578063c87b56dd14610313578063e524f2d514610343578063e985e9c51461037357610109565b806370a082311461022d5780638c8c30891461025d57806395d89b411461028d5780639bc60154146102ab57610109565b806323b872dd116100dc57806323b872dd146101a75780632ae9915b146101c357806342842e0e146101e15780636352211e146101fd57610109565b806301ffc9a71461010d57806306fdde031461013d578063081812fc1461015b578063095ea7b31461018b575b5f80fd5b61012760048036038101906101229190611a85565b6103a3565b6040516101349190611aca565b60405180910390f35b610145610403565b6040516101529190611b6d565b60405180910390f35b61017560048036038101906101709190611bc0565b610492565b6040516101829190611c2a565b60405180910390f35b6101a560048036038101906101a09190611c6d565b6104ad565b005b6101c160048036038101906101bc9190611cab565b6104c3565b005b6101cb6105c2565b6040516101d89190611c2a565b60405180910390f35b6101fb60048036038101906101f69190611cab565b6105e7565b005b61021760048036038101906102129190611bc0565b610606565b6040516102249190611c2a565b60405180910390f35b61024760048036038101906102429190611cfb565b610617565b6040516102549190611d35565b60405180910390f35b61027760048036038101906102729190611bc0565b6106cd565b6040516102849190611d35565b60405180910390f35b61029561073a565b6040516102a29190611b6d565b60405180910390f35b6102c560048036038101906102c09190611bc0565b6107ca565b6040516102d29190611e05565b60405180910390f35b6102f560048036038101906102f09190611e4f565b610831565b005b610311600480360381019061030c9190611fb9565b610847565b005b61032d60048036038101906103289190611bc0565b610864565b60405161033a9190611b6d565b60405180910390f35b61035d600480360381019061035891906120d7565b61096f565b60405161036a9190611d35565b60405180910390f35b61038d60048036038101906103889190612157565b610aca565b60405161039a9190611aca565b60405180910390f35b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103fc57506103fb82610b58565b5b9050919050565b60605f8054610411906121c2565b80601f016020809104026020016040519081016040528092919081815260200182805461043d906121c2565b80156104885780601f1061045f57610100808354040283529160200191610488565b820191905f5260205f20905b81548152906001019060200180831161046b57829003601f168201915b5050505050905090565b5f61049c82610c39565b506104a682610cbf565b9050919050565b6104bf82826104ba610cf8565b610cff565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610533575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161052a9190611c2a565b60405180910390fd5b5f6105468383610541610cf8565b610d11565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105bc578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016105b3939291906121f2565b60405180910390fd5b50505050565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61060183838360405180602001604052805f815250610847565b505050565b5f61061082610c39565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610688575f6040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161067f9190611c2a565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f8060095f8481526020019081526020015f205403610721576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071890612271565b60405180910390fd5b60095f8381526020019081526020015f20549050919050565b606060018054610749906121c2565b80601f0160208091040260200160405190810160405280929190818152602001828054610775906121c2565b80156107c05780601f10610797576101008083540402835291602001916107c0565b820191905f5260205f20905b8154815290600101906020018083116107a357829003601f168201915b5050505050905090565b6060600a5f8381526020019081526020015f2080548060200260200160405190810160405280929190818152602001828054801561082557602002820191905f5260205f20905b815481526020019060010190808311610811575b50505050509050919050565b61084361083c610cf8565b8383610f1c565b5050565b6108528484846104c3565b61085e84848484611085565b50505050565b606061086f82610c39565b505f60065f8481526020019081526020015f20805461088d906121c2565b80601f01602080910402602001604051908101604052809291908181526020018280546108b9906121c2565b80156109045780601f106108db57610100808354040283529160200191610904565b820191905f5260205f20905b8154815290600101906020018083116108e757829003601f168201915b505050505090505f610914611237565b90505f81510361092857819250505061096a565b5f8251111561095c5780826040516020016109449291906122c9565b6040516020818303038152906040529250505061096a565b6109658461124d565b925050505b919050565b5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fd8cdd32336040518263ffffffff1660e01b81526004016109ca9190611c2a565b602060405180830381865afa1580156109e5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a099190612300565b610a48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3f9061239b565b60405180910390fd5b610a5260076112b3565b5f610a5d60076112c7565b9050610a6986826112d3565b610a7381866113c6565b8060095f8681526020019081526020015f2081905550600a5f8481526020019081526020015f2081908060018154018082558091505060019003905f5260205f20015f909190919091505580915050949350505050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610c2257507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610c325750610c3182611420565b5b9050919050565b5f80610c4483611489565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cb657826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610cad9190611d35565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610d0c83838360016114c2565b505050565b5f80610d1c84611489565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610d5d57610d5c818486611681565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610de857610d9c5f855f806114c2565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610e6757600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f8c57816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610f839190611c2a565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110789190611aca565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611231578273ffffffffffffffffffffffffffffffffffffffff1663150b7a026110c8610cf8565b8685856040518563ffffffff1660e01b81526004016110ea949392919061240b565b6020604051808303815f875af192505050801561112557506040513d601f19601f820116820180604052508101906111229190612469565b60015b6111a6573d805f8114611153576040519150601f19603f3d011682016040523d82523d5f602084013e611158565b606091505b505f81510361119e57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111959190611c2a565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461122f57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112269190611c2a565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b606061125882610c39565b505f611262611237565b90505f8151116112805760405180602001604052805f8152506112ab565b8061128a84611744565b60405160200161129b9291906122c9565b6040516020818303038152906040525b915050919050565b6001815f015f828254019250508190555050565b5f815f01549050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611343575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161133a9190611c2a565b60405180910390fd5b5f61134f83835f610d11565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146113c1575f6040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016113b89190611c2a565b60405180910390fd5b505050565b8060065f8481526020019081526020015f2090816113e49190612631565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516114149190611d35565b60405180910390a15050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806114fa57505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561162c575f61150984610c39565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561157357508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561158657506115848184610aca565b155b156115c857826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016115bf9190611c2a565b60405180910390fd5b811561162a57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b61168c83838361180e565b61173f575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361170057806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016116f79190611d35565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611736929190612700565b60405180910390fd5b505050565b60605f6001611752846118ce565b0190505f8167ffffffffffffffff8111156117705761176f611e95565b5b6040519080825280601f01601f1916602001820160405280156117a25781602001600182028036833780820191505090505b5090505f82602001820190505b600115611803578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816117f8576117f7612727565b5b0494505f85036117af575b819350505050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156118c557508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061188657506118858484610aca565b5b806118c457508273ffffffffffffffffffffffffffffffffffffffff166118ac83610cbf565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061192a577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816119205761191f612727565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611967576d04ee2d6d415b85acef8100000000838161195d5761195c612727565b5b0492506020810190505b662386f26fc10000831061199657662386f26fc10000838161198c5761198b612727565b5b0492506010810190505b6305f5e10083106119bf576305f5e10083816119b5576119b4612727565b5b0492506008810190505b61271083106119e45761271083816119da576119d9612727565b5b0492506004810190505b60648310611a0757606483816119fd576119fc612727565b5b0492506002810190505b600a8310611a16576001810190505b80915050919050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611a6481611a30565b8114611a6e575f80fd5b50565b5f81359050611a7f81611a5b565b92915050565b5f60208284031215611a9a57611a99611a28565b5b5f611aa784828501611a71565b91505092915050565b5f8115159050919050565b611ac481611ab0565b82525050565b5f602082019050611add5f830184611abb565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611b1a578082015181840152602081019050611aff565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611b3f82611ae3565b611b498185611aed565b9350611b59818560208601611afd565b611b6281611b25565b840191505092915050565b5f6020820190508181035f830152611b858184611b35565b905092915050565b5f819050919050565b611b9f81611b8d565b8114611ba9575f80fd5b50565b5f81359050611bba81611b96565b92915050565b5f60208284031215611bd557611bd4611a28565b5b5f611be284828501611bac565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611c1482611beb565b9050919050565b611c2481611c0a565b82525050565b5f602082019050611c3d5f830184611c1b565b92915050565b611c4c81611c0a565b8114611c56575f80fd5b50565b5f81359050611c6781611c43565b92915050565b5f8060408385031215611c8357611c82611a28565b5b5f611c9085828601611c59565b9250506020611ca185828601611bac565b9150509250929050565b5f805f60608486031215611cc257611cc1611a28565b5b5f611ccf86828701611c59565b9350506020611ce086828701611c59565b9250506040611cf186828701611bac565b9150509250925092565b5f60208284031215611d1057611d0f611a28565b5b5f611d1d84828501611c59565b91505092915050565b611d2f81611b8d565b82525050565b5f602082019050611d485f830184611d26565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611d8081611b8d565b82525050565b5f611d918383611d77565b60208301905092915050565b5f602082019050919050565b5f611db382611d4e565b611dbd8185611d58565b9350611dc883611d68565b805f5b83811015611df8578151611ddf8882611d86565b9750611dea83611d9d565b925050600181019050611dcb565b5085935050505092915050565b5f6020820190508181035f830152611e1d8184611da9565b905092915050565b611e2e81611ab0565b8114611e38575f80fd5b50565b5f81359050611e4981611e25565b92915050565b5f8060408385031215611e6557611e64611a28565b5b5f611e7285828601611c59565b9250506020611e8385828601611e3b565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611ecb82611b25565b810181811067ffffffffffffffff82111715611eea57611ee9611e95565b5b80604052505050565b5f611efc611a1f565b9050611f088282611ec2565b919050565b5f67ffffffffffffffff821115611f2757611f26611e95565b5b611f3082611b25565b9050602081019050919050565b828183375f83830152505050565b5f611f5d611f5884611f0d565b611ef3565b905082815260208101848484011115611f7957611f78611e91565b5b611f84848285611f3d565b509392505050565b5f82601f830112611fa057611f9f611e8d565b5b8135611fb0848260208601611f4b565b91505092915050565b5f805f8060808587031215611fd157611fd0611a28565b5b5f611fde87828801611c59565b9450506020611fef87828801611c59565b935050604061200087828801611bac565b925050606085013567ffffffffffffffff81111561202157612020611a2c565b5b61202d87828801611f8c565b91505092959194509250565b5f67ffffffffffffffff82111561205357612052611e95565b5b61205c82611b25565b9050602081019050919050565b5f61207b61207684612039565b611ef3565b90508281526020810184848401111561209757612096611e91565b5b6120a2848285611f3d565b509392505050565b5f82601f8301126120be576120bd611e8d565b5b81356120ce848260208601612069565b91505092915050565b5f805f80608085870312156120ef576120ee611a28565b5b5f6120fc87828801611c59565b945050602085013567ffffffffffffffff81111561211d5761211c611a2c565b5b612129878288016120aa565b935050604061213a87828801611bac565b925050606061214b87828801611bac565b91505092959194509250565b5f806040838503121561216d5761216c611a28565b5b5f61217a85828601611c59565b925050602061218b85828601611c59565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806121d957607f821691505b6020821081036121ec576121eb612195565b5b50919050565b5f6060820190506122055f830186611c1b565b6122126020830185611d26565b61221f6040830184611c1b565b949350505050565b7f4e6f204e465420666f72207468697320627573000000000000000000000000005f82015250565b5f61225b601383611aed565b915061226682612227565b602082019050919050565b5f6020820190508181035f8301526122888161224f565b9050919050565b5f81905092915050565b5f6122a382611ae3565b6122ad818561228f565b93506122bd818560208601611afd565b80840191505092915050565b5f6122d48285612299565b91506122e08284612299565b91508190509392505050565b5f815190506122fa81611e25565b92915050565b5f6020828403121561231557612314611a28565b5b5f612322848285016122ec565b91505092915050565b7f43616c6c6572206973206e6f7420616e20617574686f72697a656420676f76655f8201527f726e6d656e742e00000000000000000000000000000000000000000000000000602082015250565b5f612385602783611aed565b91506123908261232b565b604082019050919050565b5f6020820190508181035f8301526123b281612379565b9050919050565b5f81519050919050565b5f82825260208201905092915050565b5f6123dd826123b9565b6123e781856123c3565b93506123f7818560208601611afd565b61240081611b25565b840191505092915050565b5f60808201905061241e5f830187611c1b565b61242b6020830186611c1b565b6124386040830185611d26565b818103606083015261244a81846123d3565b905095945050505050565b5f8151905061246381611a5b565b92915050565b5f6020828403121561247e5761247d611a28565b5b5f61248b84828501612455565b91505092915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026124f07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826124b5565b6124fa86836124b5565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61253561253061252b84611b8d565b612512565b611b8d565b9050919050565b5f819050919050565b61254e8361251b565b61256261255a8261253c565b8484546124c1565b825550505050565b5f90565b61257661256a565b612581818484612545565b505050565b5b818110156125a4576125995f8261256e565b600181019050612587565b5050565b601f8211156125e9576125ba81612494565b6125c3846124a6565b810160208510156125d2578190505b6125e66125de856124a6565b830182612586565b50505b505050565b5f82821c905092915050565b5f6126095f19846008026125ee565b1980831691505092915050565b5f61262183836125fa565b9150826002028217905092915050565b61263a82611ae3565b67ffffffffffffffff81111561265357612652611e95565b5b61265d82546121c2565b6126688282856125a8565b5f60209050601f831160018114612699575f8415612687578287015190505b6126918582612616565b8655506126f8565b601f1984166126a786612494565b5f5b828110156126ce578489015182556001820191506020850194506020810190506126a9565b868310156126eb57848901516126e7601f8916826125fa565b8355505b6001600288020188555050505b505050505050565b5f6040820190506127135f830185611c1b565b6127206020830184611d26565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea2646970667358221220bc97173b0893b00f0ce97f17580875dd2e7be7ea26b04b8e855581aff062655064736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2C83 CODESIZE SUB DUP1 PUSH3 0x2C83 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4275734E46540000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4255530000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH3 0xB2 SWAP2 SWAP1 PUSH3 0x407 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xC4 SWAP2 SWAP1 PUSH3 0x407 JUMP JUMPDEST POP POP POP DUP1 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x4EB JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x13D DUP3 PUSH3 0x112 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x14F DUP2 PUSH3 0x131 JUMP JUMPDEST DUP2 EQ PUSH3 0x15A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x16D DUP2 PUSH3 0x144 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x18B JUMPI PUSH3 0x18A PUSH3 0x10E JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x19A DUP5 DUP3 DUP6 ADD PUSH3 0x15D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x21F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x235 JUMPI PUSH3 0x234 PUSH3 0x1DA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x299 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x25C JUMP JUMPDEST PUSH3 0x2A5 DUP7 DUP4 PUSH3 0x25C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x2EF PUSH3 0x2E9 PUSH3 0x2E3 DUP5 PUSH3 0x2BD JUMP JUMPDEST PUSH3 0x2C6 JUMP JUMPDEST PUSH3 0x2BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x30A DUP4 PUSH3 0x2CF JUMP JUMPDEST PUSH3 0x322 PUSH3 0x319 DUP3 PUSH3 0x2F6 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x268 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x338 PUSH3 0x32A JUMP JUMPDEST PUSH3 0x345 DUP2 DUP5 DUP5 PUSH3 0x2FF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x36C JUMPI PUSH3 0x360 PUSH0 DUP3 PUSH3 0x32E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x34B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x3BB JUMPI PUSH3 0x385 DUP2 PUSH3 0x23B JUMP JUMPDEST PUSH3 0x390 DUP5 PUSH3 0x24D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x3A0 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x3B8 PUSH3 0x3AF DUP6 PUSH3 0x24D JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x34A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x3DD PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x3C0 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x3F7 DUP4 DUP4 PUSH3 0x3CC JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x412 DUP3 PUSH3 0x1A3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x42E JUMPI PUSH3 0x42D PUSH3 0x1AD JUMP JUMPDEST JUMPDEST PUSH3 0x43A DUP3 SLOAD PUSH3 0x207 JUMP JUMPDEST PUSH3 0x447 DUP3 DUP3 DUP6 PUSH3 0x370 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x47D JUMPI PUSH0 DUP5 ISZERO PUSH3 0x468 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x474 DUP6 DUP3 PUSH3 0x3EA JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x4E3 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x48D DUP7 PUSH3 0x23B JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x4B6 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x48F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x4D6 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x4D2 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x3CC JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x278A DUP1 PUSH3 0x4F9 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xE524F2D5 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x373 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x8C8C3089 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x9BC60154 EQ PUSH2 0x2AB JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x2AE9915B EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1FD JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1A85 JUMP JUMPDEST PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH2 0x403 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1B6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1BC0 JUMP JUMPDEST PUSH2 0x492 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1C6D JUMP JUMPDEST PUSH2 0x4AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x1CAB JUMP JUMPDEST PUSH2 0x4C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CB PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x1CAB JUMP JUMPDEST PUSH2 0x5E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x217 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x1BC0 JUMP JUMPDEST PUSH2 0x606 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0x617 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x1D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x1BC0 JUMP JUMPDEST PUSH2 0x6CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x1D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x295 PUSH2 0x73A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x1B6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x1BC0 JUMP JUMPDEST PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x1E05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x1E4F JUMP JUMPDEST PUSH2 0x831 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x1FB9 JUMP JUMPDEST PUSH2 0x847 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x1BC0 JUMP JUMPDEST PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x1B6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x20D7 JUMP JUMPDEST PUSH2 0x96F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x1D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x388 SWAP2 SWAP1 PUSH2 0x2157 JUMP JUMPDEST PUSH2 0xACA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39A SWAP2 SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3FC JUMPI POP PUSH2 0x3FB DUP3 PUSH2 0xB58 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x411 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x43D SWAP1 PUSH2 0x21C2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x488 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x45F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x488 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x46B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x49C DUP3 PUSH2 0xC39 JUMP JUMPDEST POP PUSH2 0x4A6 DUP3 PUSH2 0xCBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4BF DUP3 DUP3 PUSH2 0x4BA PUSH2 0xCF8 JUMP JUMPDEST PUSH2 0xCFF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x533 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52A SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x546 DUP4 DUP4 PUSH2 0x541 PUSH2 0xCF8 JUMP JUMPDEST PUSH2 0xD11 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5BC JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x601 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x847 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x610 DUP3 PUSH2 0xC39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x688 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67F SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x718 SWAP1 PUSH2 0x2271 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x749 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x775 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7C0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x797 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7C0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7A3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x825 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x811 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x843 PUSH2 0x83C PUSH2 0xCF8 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xF1C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x852 DUP5 DUP5 DUP5 PUSH2 0x4C3 JUMP JUMPDEST PUSH2 0x85E DUP5 DUP5 DUP5 DUP5 PUSH2 0x1085 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x86F DUP3 PUSH2 0xC39 JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x88D SWAP1 PUSH2 0x21C2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8B9 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x904 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8DB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x904 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8E7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x914 PUSH2 0x1237 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0x928 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x96A JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x95C JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x944 SWAP3 SWAP2 SWAP1 PUSH2 0x22C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x96A JUMP JUMPDEST PUSH2 0x965 DUP5 PUSH2 0x124D JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFD8CDD32 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CA SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9E5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA09 SWAP2 SWAP1 PUSH2 0x2300 JUMP JUMPDEST PUSH2 0xA48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3F SWAP1 PUSH2 0x239B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA52 PUSH1 0x7 PUSH2 0x12B3 JUMP JUMPDEST PUSH0 PUSH2 0xA5D PUSH1 0x7 PUSH2 0x12C7 JUMP JUMPDEST SWAP1 POP PUSH2 0xA69 DUP7 DUP3 PUSH2 0x12D3 JUMP JUMPDEST PUSH2 0xA73 DUP2 DUP7 PUSH2 0x13C6 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xC22 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xC32 JUMPI POP PUSH2 0xC31 DUP3 PUSH2 0x1420 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xC44 DUP4 PUSH2 0x1489 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCB6 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAD SWAP2 SWAP1 PUSH2 0x1D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD0C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x14C2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xD1C DUP5 PUSH2 0x1489 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD5D JUMPI PUSH2 0xD5C DUP2 DUP5 DUP7 PUSH2 0x1681 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDE8 JUMPI PUSH2 0xD9C PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE67 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF8C JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF83 SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1078 SWAP2 SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1231 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x10C8 PUSH2 0xCF8 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10EA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x240B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1125 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1122 SWAP2 SWAP1 PUSH2 0x2469 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x11A6 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1153 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1158 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x119E JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1195 SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x122F JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1226 SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1258 DUP3 PUSH2 0xC39 JUMP JUMPDEST POP PUSH0 PUSH2 0x1262 PUSH2 0x1237 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x1280 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x12AB JUMP JUMPDEST DUP1 PUSH2 0x128A DUP5 PUSH2 0x1744 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x129B SWAP3 SWAP2 SWAP1 PUSH2 0x22C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1343 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x133A SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x134F DUP4 DUP4 PUSH0 PUSH2 0xD11 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13C1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B8 SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x13E4 SWAP2 SWAP1 PUSH2 0x2631 JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1414 SWAP2 SWAP1 PUSH2 0x1D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x14FA JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x162C JUMPI PUSH0 PUSH2 0x1509 DUP5 PUSH2 0xC39 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1573 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1586 JUMPI POP PUSH2 0x1584 DUP2 DUP5 PUSH2 0xACA JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x15C8 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15BF SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x162A JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x168C DUP4 DUP4 DUP4 PUSH2 0x180E JUMP JUMPDEST PUSH2 0x173F JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1700 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16F7 SWAP2 SWAP1 PUSH2 0x1D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1736 SWAP3 SWAP2 SWAP1 PUSH2 0x2700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1752 DUP5 PUSH2 0x18CE JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1770 JUMPI PUSH2 0x176F PUSH2 0x1E95 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17A2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1803 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x17F8 JUMPI PUSH2 0x17F7 PUSH2 0x2727 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x17AF JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x18C5 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1886 JUMPI POP PUSH2 0x1885 DUP5 DUP5 PUSH2 0xACA JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x18C4 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18AC DUP4 PUSH2 0xCBF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x192A JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1920 JUMPI PUSH2 0x191F PUSH2 0x2727 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1967 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x195D JUMPI PUSH2 0x195C PUSH2 0x2727 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1996 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x198C JUMPI PUSH2 0x198B PUSH2 0x2727 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x19BF JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x19B5 JUMPI PUSH2 0x19B4 PUSH2 0x2727 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x19E4 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x19DA JUMPI PUSH2 0x19D9 PUSH2 0x2727 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1A07 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x19FD JUMPI PUSH2 0x19FC PUSH2 0x2727 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1A16 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A64 DUP2 PUSH2 0x1A30 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A6E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A7F DUP2 PUSH2 0x1A5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A9A JUMPI PUSH2 0x1A99 PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AA7 DUP5 DUP3 DUP6 ADD PUSH2 0x1A71 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AC4 DUP2 PUSH2 0x1AB0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ADD PUSH0 DUP4 ADD DUP5 PUSH2 0x1ABB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B1A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1AFF JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B3F DUP3 PUSH2 0x1AE3 JUMP JUMPDEST PUSH2 0x1B49 DUP2 DUP6 PUSH2 0x1AED JUMP JUMPDEST SWAP4 POP PUSH2 0x1B59 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0x1B62 DUP2 PUSH2 0x1B25 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B85 DUP2 DUP5 PUSH2 0x1B35 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B9F DUP2 PUSH2 0x1B8D JUMP JUMPDEST DUP2 EQ PUSH2 0x1BA9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BBA DUP2 PUSH2 0x1B96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BD5 JUMPI PUSH2 0x1BD4 PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BE2 DUP5 DUP3 DUP6 ADD PUSH2 0x1BAC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C14 DUP3 PUSH2 0x1BEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C24 DUP2 PUSH2 0x1C0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C3D PUSH0 DUP4 ADD DUP5 PUSH2 0x1C1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C4C DUP2 PUSH2 0x1C0A JUMP JUMPDEST DUP2 EQ PUSH2 0x1C56 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C67 DUP2 PUSH2 0x1C43 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C83 JUMPI PUSH2 0x1C82 PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C90 DUP6 DUP3 DUP7 ADD PUSH2 0x1C59 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CA1 DUP6 DUP3 DUP7 ADD PUSH2 0x1BAC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1CC2 JUMPI PUSH2 0x1CC1 PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CCF DUP7 DUP3 DUP8 ADD PUSH2 0x1C59 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1CE0 DUP7 DUP3 DUP8 ADD PUSH2 0x1C59 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1CF1 DUP7 DUP3 DUP8 ADD PUSH2 0x1BAC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D10 JUMPI PUSH2 0x1D0F PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D1D DUP5 DUP3 DUP6 ADD PUSH2 0x1C59 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D2F DUP2 PUSH2 0x1B8D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D48 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D80 DUP2 PUSH2 0x1B8D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D91 DUP4 DUP4 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DB3 DUP3 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x1DBD DUP2 DUP6 PUSH2 0x1D58 JUMP JUMPDEST SWAP4 POP PUSH2 0x1DC8 DUP4 PUSH2 0x1D68 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DF8 JUMPI DUP2 MLOAD PUSH2 0x1DDF DUP9 DUP3 PUSH2 0x1D86 JUMP JUMPDEST SWAP8 POP PUSH2 0x1DEA DUP4 PUSH2 0x1D9D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1DCB JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E1D DUP2 DUP5 PUSH2 0x1DA9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E2E DUP2 PUSH2 0x1AB0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E38 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E49 DUP2 PUSH2 0x1E25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E65 JUMPI PUSH2 0x1E64 PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E72 DUP6 DUP3 DUP7 ADD PUSH2 0x1C59 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E83 DUP6 DUP3 DUP7 ADD PUSH2 0x1E3B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1ECB DUP3 PUSH2 0x1B25 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1EEA JUMPI PUSH2 0x1EE9 PUSH2 0x1E95 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EFC PUSH2 0x1A1F JUMP JUMPDEST SWAP1 POP PUSH2 0x1F08 DUP3 DUP3 PUSH2 0x1EC2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F27 JUMPI PUSH2 0x1F26 PUSH2 0x1E95 JUMP JUMPDEST JUMPDEST PUSH2 0x1F30 DUP3 PUSH2 0x1B25 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F5D PUSH2 0x1F58 DUP5 PUSH2 0x1F0D JUMP JUMPDEST PUSH2 0x1EF3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1F79 JUMPI PUSH2 0x1F78 PUSH2 0x1E91 JUMP JUMPDEST JUMPDEST PUSH2 0x1F84 DUP5 DUP3 DUP6 PUSH2 0x1F3D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FA0 JUMPI PUSH2 0x1F9F PUSH2 0x1E8D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1FB0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1F4B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1FD1 JUMPI PUSH2 0x1FD0 PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FDE DUP8 DUP3 DUP9 ADD PUSH2 0x1C59 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1FEF DUP8 DUP3 DUP9 ADD PUSH2 0x1C59 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2000 DUP8 DUP3 DUP9 ADD PUSH2 0x1BAC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2021 JUMPI PUSH2 0x2020 PUSH2 0x1A2C JUMP JUMPDEST JUMPDEST PUSH2 0x202D DUP8 DUP3 DUP9 ADD PUSH2 0x1F8C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2053 JUMPI PUSH2 0x2052 PUSH2 0x1E95 JUMP JUMPDEST JUMPDEST PUSH2 0x205C DUP3 PUSH2 0x1B25 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x207B PUSH2 0x2076 DUP5 PUSH2 0x2039 JUMP JUMPDEST PUSH2 0x1EF3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2097 JUMPI PUSH2 0x2096 PUSH2 0x1E91 JUMP JUMPDEST JUMPDEST PUSH2 0x20A2 DUP5 DUP3 DUP6 PUSH2 0x1F3D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x20BE JUMPI PUSH2 0x20BD PUSH2 0x1E8D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x20CE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2069 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x20EF JUMPI PUSH2 0x20EE PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20FC DUP8 DUP3 DUP9 ADD PUSH2 0x1C59 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x211D JUMPI PUSH2 0x211C PUSH2 0x1A2C JUMP JUMPDEST JUMPDEST PUSH2 0x2129 DUP8 DUP3 DUP9 ADD PUSH2 0x20AA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x213A DUP8 DUP3 DUP9 ADD PUSH2 0x1BAC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x214B DUP8 DUP3 DUP9 ADD PUSH2 0x1BAC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x216D JUMPI PUSH2 0x216C PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x217A DUP6 DUP3 DUP7 ADD PUSH2 0x1C59 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x218B DUP6 DUP3 DUP7 ADD PUSH2 0x1C59 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x21D9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x21EC JUMPI PUSH2 0x21EB PUSH2 0x2195 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2205 PUSH0 DUP4 ADD DUP7 PUSH2 0x1C1B JUMP JUMPDEST PUSH2 0x2212 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D26 JUMP JUMPDEST PUSH2 0x221F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C1B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F204E465420666F7220746869732062757300000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x225B PUSH1 0x13 DUP4 PUSH2 0x1AED JUMP JUMPDEST SWAP2 POP PUSH2 0x2266 DUP3 PUSH2 0x2227 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2288 DUP2 PUSH2 0x224F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22A3 DUP3 PUSH2 0x1AE3 JUMP JUMPDEST PUSH2 0x22AD DUP2 DUP6 PUSH2 0x228F JUMP JUMPDEST SWAP4 POP PUSH2 0x22BD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1AFD JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22D4 DUP3 DUP6 PUSH2 0x2299 JUMP JUMPDEST SWAP2 POP PUSH2 0x22E0 DUP3 DUP5 PUSH2 0x2299 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x22FA DUP2 PUSH2 0x1E25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2315 JUMPI PUSH2 0x2314 PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2322 DUP5 DUP3 DUP6 ADD PUSH2 0x22EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420616E20617574686F72697A656420676F7665 PUSH0 DUP3 ADD MSTORE PUSH32 0x726E6D656E742E00000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2385 PUSH1 0x27 DUP4 PUSH2 0x1AED JUMP JUMPDEST SWAP2 POP PUSH2 0x2390 DUP3 PUSH2 0x232B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23B2 DUP2 PUSH2 0x2379 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23DD DUP3 PUSH2 0x23B9 JUMP JUMPDEST PUSH2 0x23E7 DUP2 DUP6 PUSH2 0x23C3 JUMP JUMPDEST SWAP4 POP PUSH2 0x23F7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0x2400 DUP2 PUSH2 0x1B25 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x241E PUSH0 DUP4 ADD DUP8 PUSH2 0x1C1B JUMP JUMPDEST PUSH2 0x242B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1C1B JUMP JUMPDEST PUSH2 0x2438 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D26 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x244A DUP2 DUP5 PUSH2 0x23D3 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2463 DUP2 PUSH2 0x1A5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x247E JUMPI PUSH2 0x247D PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x248B DUP5 DUP3 DUP6 ADD PUSH2 0x2455 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x24F0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x24B5 JUMP JUMPDEST PUSH2 0x24FA DUP7 DUP4 PUSH2 0x24B5 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2535 PUSH2 0x2530 PUSH2 0x252B DUP5 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x2512 JUMP JUMPDEST PUSH2 0x1B8D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x254E DUP4 PUSH2 0x251B JUMP JUMPDEST PUSH2 0x2562 PUSH2 0x255A DUP3 PUSH2 0x253C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x24C1 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2576 PUSH2 0x256A JUMP JUMPDEST PUSH2 0x2581 DUP2 DUP5 DUP5 PUSH2 0x2545 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x25A4 JUMPI PUSH2 0x2599 PUSH0 DUP3 PUSH2 0x256E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2587 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x25E9 JUMPI PUSH2 0x25BA DUP2 PUSH2 0x2494 JUMP JUMPDEST PUSH2 0x25C3 DUP5 PUSH2 0x24A6 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x25D2 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x25E6 PUSH2 0x25DE DUP6 PUSH2 0x24A6 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2586 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2609 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x25EE JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2621 DUP4 DUP4 PUSH2 0x25FA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x263A DUP3 PUSH2 0x1AE3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2653 JUMPI PUSH2 0x2652 PUSH2 0x1E95 JUMP JUMPDEST JUMPDEST PUSH2 0x265D DUP3 SLOAD PUSH2 0x21C2 JUMP JUMPDEST PUSH2 0x2668 DUP3 DUP3 DUP6 PUSH2 0x25A8 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2699 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2687 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2691 DUP6 DUP3 PUSH2 0x2616 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x26F8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x26A7 DUP7 PUSH2 0x2494 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x26CE JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x26A9 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x26EB JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x26E7 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x25FA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2713 PUSH0 DUP4 ADD DUP6 PUSH2 0x1C1B JUMP JUMPDEST PUSH2 0x2720 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D26 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC SWAP8 OR EXTCODESIZE ADDMOD SWAP4 0xB0 0xF 0xC 0xE9 PUSH32 0x17580875DD2E7BE7EA26B04B8E855581AFF062655064736F6C63430008160033 ",
							"sourceMap": "276:1824:17:-:0;;;654:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1381:113:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:5;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;757:22:17::1;733:21;;:46;;;;;;;;;;;;;;;;;;654:133:::0;276:1824;;88:117:18;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;276:1824:17:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1046": {
									"entryPoint": 5314,
									"id": 1046,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_980": {
									"entryPoint": 3327,
									"id": 980,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_373": {
									"entryPoint": 4663,
									"id": 373,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_628": {
									"entryPoint": 5761,
									"id": 628,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1176": {
									"entryPoint": 4229,
									"id": 1176,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_getApproved_555": {
									"entryPoint": 3263,
									"id": 555,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_591": {
									"entryPoint": 6158,
									"id": 591,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_784": {
									"entryPoint": 4819,
									"id": 784,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1478": {
									"entryPoint": 3320,
									"id": 1478,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_542": {
									"entryPoint": 5257,
									"id": 542,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1112": {
									"entryPoint": 3129,
									"id": 1112,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_setApprovalForAll_1083": {
									"entryPoint": 3868,
									"id": 1083,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setTokenURI_1437": {
									"entryPoint": 5062,
									"id": 1437,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_734": {
									"entryPoint": 3345,
									"id": 734,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@addressManagerAddress_3194": {
									"entryPoint": 1474,
									"id": 3194,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@approve_389": {
									"entryPoint": 1197,
									"id": 389,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_297": {
									"entryPoint": 1559,
									"id": 297,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@current_1514": {
									"entryPoint": 4807,
									"id": 1514,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_406": {
									"entryPoint": 1170,
									"id": 406,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getNftForApprovedBus_3305": {
									"entryPoint": 1741,
									"id": 3305,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getNftsByCompany_3318": {
									"entryPoint": 1994,
									"id": 3318,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increment_1528": {
									"entryPoint": 4787,
									"id": 1528,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isApprovedForAll_439": {
									"entryPoint": 2762,
									"id": 439,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_2735": {
									"entryPoint": 6350,
									"id": 2735,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mintNFTForApprovedBus_3284": {
									"entryPoint": 2415,
									"id": 3284,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@name_319": {
									"entryPoint": 1027,
									"id": 319,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_310": {
									"entryPoint": 1542,
									"id": 310,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_503": {
									"entryPoint": 1511,
									"id": 503,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_529": {
									"entryPoint": 2119,
									"id": 529,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_422": {
									"entryPoint": 2097,
									"id": 422,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1361": {
									"entryPoint": 931,
									"id": 1361,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1848": {
									"entryPoint": 5152,
									"id": 1848,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_269": {
									"entryPoint": 2904,
									"id": 269,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_328": {
									"entryPoint": 1850,
									"id": 328,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1638": {
									"entryPoint": 5956,
									"id": 1638,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1418": {
									"entryPoint": 2148,
									"id": 1418,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_364": {
									"entryPoint": 4685,
									"id": 364,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_485": {
									"entryPoint": 1219,
									"id": 485,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 8011,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 8297,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 8940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 9301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 8076,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 8362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7084,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 8121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7759,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_string_memory_ptrt_uint256t_uint256": {
									"entryPoint": 8407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 9321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 7558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_16fc7e8bb1c4f22d3779cd41535c2f1b4f2be4694fd48d7116d0ac20c4362548_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7029c135594e6d4877bed3e9ac9287ea76f6c7066dd4013bb12b949a5a7828c1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 7543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8905,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9227,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9984,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 8690,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_16fc7e8bb1c4f22d3779cd41535c2f1b4f2be4694fd48d7116d0ac20c4362548__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9115,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7029c135594e6d4877bed3e9ac9287ea76f6c7066dd4013bb12b949a5a7828c1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6687,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 8249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 9364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9145,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 9640,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 7178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6704,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 9606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 9499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 9777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7997,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6909,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 9382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 8642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 9750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 9490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 9722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x12": {
									"entryPoint": 10023,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8597,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7829,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 9532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7821,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7825,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6700,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6696,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 9397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 9710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 9582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_16fc7e8bb1c4f22d3779cd41535c2f1b4f2be4694fd48d7116d0ac20c4362548": {
									"entryPoint": 9003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7029c135594e6d4877bed3e9ac9287ea76f6c7066dd4013bb12b949a5a7828c1": {
									"entryPoint": 8743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 9409,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 9541,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 9578,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:25653:18",
										"nodeType": "YulBlock",
										"src": "0:25653:18",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:18",
													"nodeType": "YulBlock",
													"src": "47:35:18",
													"statements": [
														{
															"nativeSrc": "57:19:18",
															"nodeType": "YulAssignment",
															"src": "57:19:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:18",
																		"nodeType": "YulLiteral",
																		"src": "73:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:18"
																},
																"nativeSrc": "67:9:18",
																"nodeType": "YulFunctionCall",
																"src": "67:9:18"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:18"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:18",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:18",
														"nodeType": "YulTypedName",
														"src": "40:6:18",
														"type": ""
													}
												],
												"src": "7:75:18"
											},
											{
												"body": {
													"nativeSrc": "177:28:18",
													"nodeType": "YulBlock",
													"src": "177:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:18",
																		"nodeType": "YulLiteral",
																		"src": "194:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:18",
																		"nodeType": "YulLiteral",
																		"src": "197:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:18"
																},
																"nativeSrc": "187:12:18",
																"nodeType": "YulFunctionCall",
																"src": "187:12:18"
															},
															"nativeSrc": "187:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:18"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:18"
											},
											{
												"body": {
													"nativeSrc": "300:28:18",
													"nodeType": "YulBlock",
													"src": "300:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:18",
																		"nodeType": "YulLiteral",
																		"src": "317:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:18",
																		"nodeType": "YulLiteral",
																		"src": "320:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:18"
																},
																"nativeSrc": "310:12:18",
																"nodeType": "YulFunctionCall",
																"src": "310:12:18"
															},
															"nativeSrc": "310:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:18"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:18"
											},
											{
												"body": {
													"nativeSrc": "378:105:18",
													"nodeType": "YulBlock",
													"src": "378:105:18",
													"statements": [
														{
															"nativeSrc": "388:89:18",
															"nodeType": "YulAssignment",
															"src": "388:89:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:18",
																		"nodeType": "YulLiteral",
																		"src": "410:66:18",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:18"
																},
																"nativeSrc": "399:78:18",
																"nodeType": "YulFunctionCall",
																"src": "399:78:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:18",
														"nodeType": "YulTypedName",
														"src": "360:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:18",
														"nodeType": "YulTypedName",
														"src": "370:7:18",
														"type": ""
													}
												],
												"src": "334:149:18"
											},
											{
												"body": {
													"nativeSrc": "531:78:18",
													"nodeType": "YulBlock",
													"src": "531:78:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:18",
																"nodeType": "YulBlock",
																"src": "587:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:18",
																					"nodeType": "YulLiteral",
																					"src": "596:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:18",
																					"nodeType": "YulLiteral",
																					"src": "599:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:18"
																			},
																			"nativeSrc": "589:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:18"
																		},
																		"nativeSrc": "589:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:18",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:18"
																				},
																				"nativeSrc": "561:23:18",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:18"
																		},
																		"nativeSrc": "551:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:18"
																},
																"nativeSrc": "544:42:18",
																"nodeType": "YulFunctionCall",
																"src": "544:42:18"
															},
															"nativeSrc": "541:62:18",
															"nodeType": "YulIf",
															"src": "541:62:18"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:18",
														"nodeType": "YulTypedName",
														"src": "524:5:18",
														"type": ""
													}
												],
												"src": "489:120:18"
											},
											{
												"body": {
													"nativeSrc": "666:86:18",
													"nodeType": "YulBlock",
													"src": "666:86:18",
													"statements": [
														{
															"nativeSrc": "676:29:18",
															"nodeType": "YulAssignment",
															"src": "676:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:18"
																},
																"nativeSrc": "685:20:18",
																"nodeType": "YulFunctionCall",
																"src": "685:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:18",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:18"
																},
																"nativeSrc": "714:32:18",
																"nodeType": "YulFunctionCall",
																"src": "714:32:18"
															},
															"nativeSrc": "714:32:18",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:18"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:18",
														"nodeType": "YulTypedName",
														"src": "644:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:18",
														"nodeType": "YulTypedName",
														"src": "652:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:18",
														"nodeType": "YulTypedName",
														"src": "660:5:18",
														"type": ""
													}
												],
												"src": "615:137:18"
											},
											{
												"body": {
													"nativeSrc": "823:262:18",
													"nodeType": "YulBlock",
													"src": "823:262:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:18",
																"nodeType": "YulBlock",
																"src": "869:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:18"
																			},
																			"nativeSrc": "871:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:18"
																		},
																		"nativeSrc": "871:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:18"
																		},
																		"nativeSrc": "840:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:18",
																		"nodeType": "YulLiteral",
																		"src": "865:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:18"
																},
																"nativeSrc": "836:32:18",
																"nodeType": "YulFunctionCall",
																"src": "836:32:18"
															},
															"nativeSrc": "833:119:18",
															"nodeType": "YulIf",
															"src": "833:119:18"
														},
														{
															"nativeSrc": "962:116:18",
															"nodeType": "YulBlock",
															"src": "962:116:18",
															"statements": [
																{
																	"nativeSrc": "977:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:18",
																		"nodeType": "YulLiteral",
																		"src": "991:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:18",
																			"nodeType": "YulTypedName",
																			"src": "981:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:18",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:18"
																				},
																				"nativeSrc": "1036:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:18",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:18"
																		},
																		"nativeSrc": "1016:52:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:18",
														"nodeType": "YulTypedName",
														"src": "793:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:18",
														"nodeType": "YulTypedName",
														"src": "804:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:18",
														"nodeType": "YulTypedName",
														"src": "816:6:18",
														"type": ""
													}
												],
												"src": "758:327:18"
											},
											{
												"body": {
													"nativeSrc": "1133:48:18",
													"nodeType": "YulBlock",
													"src": "1133:48:18",
													"statements": [
														{
															"nativeSrc": "1143:32:18",
															"nodeType": "YulAssignment",
															"src": "1143:32:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:18"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:18"
																		},
																		"nativeSrc": "1161:13:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:18"
																},
																"nativeSrc": "1154:21:18",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:18",
														"nodeType": "YulTypedName",
														"src": "1115:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:18",
														"nodeType": "YulTypedName",
														"src": "1125:7:18",
														"type": ""
													}
												],
												"src": "1091:90:18"
											},
											{
												"body": {
													"nativeSrc": "1246:50:18",
													"nodeType": "YulBlock",
													"src": "1246:50:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:18",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:18"
																		},
																		"nativeSrc": "1268:21:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:18"
																},
																"nativeSrc": "1256:34:18",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:18"
															},
															"nativeSrc": "1256:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:18"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:18",
														"nodeType": "YulTypedName",
														"src": "1234:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:18",
														"nodeType": "YulTypedName",
														"src": "1241:3:18",
														"type": ""
													}
												],
												"src": "1187:109:18"
											},
											{
												"body": {
													"nativeSrc": "1394:118:18",
													"nodeType": "YulBlock",
													"src": "1394:118:18",
													"statements": [
														{
															"nativeSrc": "1404:26:18",
															"nodeType": "YulAssignment",
															"src": "1404:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:18"
																},
																"nativeSrc": "1412:18:18",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:18",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:18"
																		},
																		"nativeSrc": "1487:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:18",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:18"
																},
																"nativeSrc": "1440:65:18",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:18"
															},
															"nativeSrc": "1440:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:18",
														"nodeType": "YulTypedName",
														"src": "1366:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:18",
														"nodeType": "YulTypedName",
														"src": "1378:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:18",
														"nodeType": "YulTypedName",
														"src": "1389:4:18",
														"type": ""
													}
												],
												"src": "1302:210:18"
											},
											{
												"body": {
													"nativeSrc": "1577:40:18",
													"nodeType": "YulBlock",
													"src": "1577:40:18",
													"statements": [
														{
															"nativeSrc": "1588:22:18",
															"nodeType": "YulAssignment",
															"src": "1588:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:18"
																},
																"nativeSrc": "1598:12:18",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:18",
														"nodeType": "YulTypedName",
														"src": "1560:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:18",
														"nodeType": "YulTypedName",
														"src": "1570:6:18",
														"type": ""
													}
												],
												"src": "1518:99:18"
											},
											{
												"body": {
													"nativeSrc": "1719:73:18",
													"nodeType": "YulBlock",
													"src": "1719:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:18"
																},
																"nativeSrc": "1729:19:18",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:18"
															},
															"nativeSrc": "1729:19:18",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:18"
														},
														{
															"nativeSrc": "1757:29:18",
															"nodeType": "YulAssignment",
															"src": "1757:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:18",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:18"
																},
																"nativeSrc": "1772:14:18",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:18",
														"nodeType": "YulTypedName",
														"src": "1691:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:18",
														"nodeType": "YulTypedName",
														"src": "1696:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:18",
														"nodeType": "YulTypedName",
														"src": "1707:11:18",
														"type": ""
													}
												],
												"src": "1623:169:18"
											},
											{
												"body": {
													"nativeSrc": "1860:184:18",
													"nodeType": "YulBlock",
													"src": "1860:184:18",
													"statements": [
														{
															"nativeSrc": "1870:10:18",
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:18",
															"value": {
																"kind": "number",
																"nativeSrc": "1879:1:18",
																"nodeType": "YulLiteral",
																"src": "1879:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1874:1:18",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1939:63:18",
																"nodeType": "YulBlock",
																"src": "1939:63:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1964:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:18"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1969:1:18",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1960:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:18"
																					},
																					"nativeSrc": "1960:11:18",
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:18"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1983:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:18"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1988:1:18",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:18"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1979:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:18"
																							},
																							"nativeSrc": "1979:11:18",
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:18"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1973:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:18"
																					},
																					"nativeSrc": "1973:18:18",
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1953:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:18"
																			},
																			"nativeSrc": "1953:39:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:18"
																		},
																		"nativeSrc": "1953:39:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1900:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1903:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1897:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:18"
																},
																"nativeSrc": "1897:13:18",
																"nodeType": "YulFunctionCall",
																"src": "1897:13:18"
															},
															"nativeSrc": "1889:113:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1911:19:18",
																"nodeType": "YulBlock",
																"src": "1911:19:18",
																"statements": [
																	{
																		"nativeSrc": "1913:15:18",
																		"nodeType": "YulAssignment",
																		"src": "1913:15:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1922:1:18",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1925:2:18",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:18",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1918:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:18"
																			},
																			"nativeSrc": "1918:10:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:18"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1913:1:18",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1893:3:18",
																"nodeType": "YulBlock",
																"src": "1893:3:18",
																"statements": []
															},
															"src": "1889:113:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2022:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2027:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2018:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:18"
																		},
																		"nativeSrc": "2018:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2036:1:18",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2011:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:18"
																},
																"nativeSrc": "2011:27:18",
																"nodeType": "YulFunctionCall",
																"src": "2011:27:18"
															},
															"nativeSrc": "2011:27:18",
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:18"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:246:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:18",
														"nodeType": "YulTypedName",
														"src": "1842:3:18",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:18",
														"nodeType": "YulTypedName",
														"src": "1847:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:18",
														"nodeType": "YulTypedName",
														"src": "1852:6:18",
														"type": ""
													}
												],
												"src": "1798:246:18"
											},
											{
												"body": {
													"nativeSrc": "2098:54:18",
													"nodeType": "YulBlock",
													"src": "2098:54:18",
													"statements": [
														{
															"nativeSrc": "2108:38:18",
															"nodeType": "YulAssignment",
															"src": "2108:38:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2126:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2133:2:18",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2122:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:18"
																		},
																		"nativeSrc": "2122:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2142:2:18",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2138:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:18"
																		},
																		"nativeSrc": "2138:7:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2118:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:18"
																},
																"nativeSrc": "2118:28:18",
																"nodeType": "YulFunctionCall",
																"src": "2118:28:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2108:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:18"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2050:102:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2081:5:18",
														"nodeType": "YulTypedName",
														"src": "2081:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2091:6:18",
														"nodeType": "YulTypedName",
														"src": "2091:6:18",
														"type": ""
													}
												],
												"src": "2050:102:18"
											},
											{
												"body": {
													"nativeSrc": "2250:285:18",
													"nodeType": "YulBlock",
													"src": "2250:285:18",
													"statements": [
														{
															"nativeSrc": "2260:53:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2307:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2274:32:18",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:18"
																},
																"nativeSrc": "2274:39:18",
																"nodeType": "YulFunctionCall",
																"src": "2274:39:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2264:6:18",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2322:78:18",
															"nodeType": "YulAssignment",
															"src": "2322:78:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2388:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2393:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2329:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:18"
																},
																"nativeSrc": "2329:71:18",
																"nodeType": "YulFunctionCall",
																"src": "2329:71:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2322:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2448:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2455:4:18",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2444:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:18"
																		},
																		"nativeSrc": "2444:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2462:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2467:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2409:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:18"
																},
																"nativeSrc": "2409:65:18",
																"nodeType": "YulFunctionCall",
																"src": "2409:65:18"
															},
															"nativeSrc": "2409:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:18"
														},
														{
															"nativeSrc": "2483:46:18",
															"nodeType": "YulAssignment",
															"src": "2483:46:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2494:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2521:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:18"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2499:21:18",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:18"
																		},
																		"nativeSrc": "2499:29:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:18"
																},
																"nativeSrc": "2490:39:18",
																"nodeType": "YulFunctionCall",
																"src": "2490:39:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2483:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2158:377:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2231:5:18",
														"nodeType": "YulTypedName",
														"src": "2231:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2238:3:18",
														"nodeType": "YulTypedName",
														"src": "2238:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2246:3:18",
														"nodeType": "YulTypedName",
														"src": "2246:3:18",
														"type": ""
													}
												],
												"src": "2158:377:18"
											},
											{
												"body": {
													"nativeSrc": "2659:195:18",
													"nodeType": "YulBlock",
													"src": "2659:195:18",
													"statements": [
														{
															"nativeSrc": "2669:26:18",
															"nodeType": "YulAssignment",
															"src": "2669:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2681:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2677:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:18"
																},
																"nativeSrc": "2677:18:18",
																"nodeType": "YulFunctionCall",
																"src": "2677:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2669:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2716:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2727:1:18",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2712:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:18"
																		},
																		"nativeSrc": "2712:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2735:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2741:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2731:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:18"
																		},
																		"nativeSrc": "2731:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2705:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:18"
																},
																"nativeSrc": "2705:47:18",
																"nodeType": "YulFunctionCall",
																"src": "2705:47:18"
															},
															"nativeSrc": "2705:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:18"
														},
														{
															"nativeSrc": "2761:86:18",
															"nodeType": "YulAssignment",
															"src": "2761:86:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2833:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:18"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2842:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2769:63:18",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:18"
																},
																"nativeSrc": "2769:78:18",
																"nodeType": "YulFunctionCall",
																"src": "2769:78:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2761:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2541:313:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2631:9:18",
														"nodeType": "YulTypedName",
														"src": "2631:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2643:6:18",
														"nodeType": "YulTypedName",
														"src": "2643:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2654:4:18",
														"nodeType": "YulTypedName",
														"src": "2654:4:18",
														"type": ""
													}
												],
												"src": "2541:313:18"
											},
											{
												"body": {
													"nativeSrc": "2905:32:18",
													"nodeType": "YulBlock",
													"src": "2905:32:18",
													"statements": [
														{
															"nativeSrc": "2915:16:18",
															"nodeType": "YulAssignment",
															"src": "2915:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "2926:5:18",
																"nodeType": "YulIdentifier",
																"src": "2926:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2915:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2860:77:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2887:5:18",
														"nodeType": "YulTypedName",
														"src": "2887:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2897:7:18",
														"nodeType": "YulTypedName",
														"src": "2897:7:18",
														"type": ""
													}
												],
												"src": "2860:77:18"
											},
											{
												"body": {
													"nativeSrc": "2986:79:18",
													"nodeType": "YulBlock",
													"src": "2986:79:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "3043:16:18",
																"nodeType": "YulBlock",
																"src": "3043:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3052:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3055:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3045:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:18"
																			},
																			"nativeSrc": "3045:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:18"
																		},
																		"nativeSrc": "3045:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3009:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3034:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3016:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:18"
																				},
																				"nativeSrc": "3016:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3006:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:18"
																		},
																		"nativeSrc": "3006:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2999:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:18"
																},
																"nativeSrc": "2999:43:18",
																"nodeType": "YulFunctionCall",
																"src": "2999:43:18"
															},
															"nativeSrc": "2996:63:18",
															"nodeType": "YulIf",
															"src": "2996:63:18"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2943:122:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2979:5:18",
														"nodeType": "YulTypedName",
														"src": "2979:5:18",
														"type": ""
													}
												],
												"src": "2943:122:18"
											},
											{
												"body": {
													"nativeSrc": "3123:87:18",
													"nodeType": "YulBlock",
													"src": "3123:87:18",
													"statements": [
														{
															"nativeSrc": "3133:29:18",
															"nodeType": "YulAssignment",
															"src": "3133:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3155:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3142:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:18"
																},
																"nativeSrc": "3142:20:18",
																"nodeType": "YulFunctionCall",
																"src": "3142:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3133:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3198:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3171:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:18"
																},
																"nativeSrc": "3171:33:18",
																"nodeType": "YulFunctionCall",
																"src": "3171:33:18"
															},
															"nativeSrc": "3171:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:18"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3071:139:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3101:6:18",
														"nodeType": "YulTypedName",
														"src": "3101:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3109:3:18",
														"nodeType": "YulTypedName",
														"src": "3109:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3117:5:18",
														"nodeType": "YulTypedName",
														"src": "3117:5:18",
														"type": ""
													}
												],
												"src": "3071:139:18"
											},
											{
												"body": {
													"nativeSrc": "3282:263:18",
													"nodeType": "YulBlock",
													"src": "3282:263:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "3328:83:18",
																"nodeType": "YulBlock",
																"src": "3328:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3330:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:18"
																			},
																			"nativeSrc": "3330:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:18"
																		},
																		"nativeSrc": "3330:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3303:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3299:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:18"
																		},
																		"nativeSrc": "3299:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3324:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3295:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:18"
																},
																"nativeSrc": "3295:32:18",
																"nodeType": "YulFunctionCall",
																"src": "3295:32:18"
															},
															"nativeSrc": "3292:119:18",
															"nodeType": "YulIf",
															"src": "3292:119:18"
														},
														{
															"nativeSrc": "3421:117:18",
															"nodeType": "YulBlock",
															"src": "3421:117:18",
															"statements": [
																{
																	"nativeSrc": "3436:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3450:1:18",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3440:6:18",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3465:63:18",
																	"nodeType": "YulAssignment",
																	"src": "3465:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3500:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3511:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3496:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:18"
																				},
																				"nativeSrc": "3496:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3520:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3475:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:18"
																		},
																		"nativeSrc": "3475:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3465:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3216:329:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3252:9:18",
														"nodeType": "YulTypedName",
														"src": "3252:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3263:7:18",
														"nodeType": "YulTypedName",
														"src": "3263:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3275:6:18",
														"nodeType": "YulTypedName",
														"src": "3275:6:18",
														"type": ""
													}
												],
												"src": "3216:329:18"
											},
											{
												"body": {
													"nativeSrc": "3596:81:18",
													"nodeType": "YulBlock",
													"src": "3596:81:18",
													"statements": [
														{
															"nativeSrc": "3606:65:18",
															"nodeType": "YulAssignment",
															"src": "3606:65:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3621:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3628:42:18",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3617:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:18"
																},
																"nativeSrc": "3617:54:18",
																"nodeType": "YulFunctionCall",
																"src": "3617:54:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3606:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3551:126:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3578:5:18",
														"nodeType": "YulTypedName",
														"src": "3578:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3588:7:18",
														"nodeType": "YulTypedName",
														"src": "3588:7:18",
														"type": ""
													}
												],
												"src": "3551:126:18"
											},
											{
												"body": {
													"nativeSrc": "3728:51:18",
													"nodeType": "YulBlock",
													"src": "3728:51:18",
													"statements": [
														{
															"nativeSrc": "3738:35:18",
															"nodeType": "YulAssignment",
															"src": "3738:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3767:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3749:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:18"
																},
																"nativeSrc": "3749:24:18",
																"nodeType": "YulFunctionCall",
																"src": "3749:24:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3738:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3683:96:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3710:5:18",
														"nodeType": "YulTypedName",
														"src": "3710:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3720:7:18",
														"nodeType": "YulTypedName",
														"src": "3720:7:18",
														"type": ""
													}
												],
												"src": "3683:96:18"
											},
											{
												"body": {
													"nativeSrc": "3850:53:18",
													"nodeType": "YulBlock",
													"src": "3850:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3867:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3890:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3872:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:18"
																		},
																		"nativeSrc": "3872:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3860:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:18"
																},
																"nativeSrc": "3860:37:18",
																"nodeType": "YulFunctionCall",
																"src": "3860:37:18"
															},
															"nativeSrc": "3860:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:18"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3785:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3838:5:18",
														"nodeType": "YulTypedName",
														"src": "3838:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3845:3:18",
														"nodeType": "YulTypedName",
														"src": "3845:3:18",
														"type": ""
													}
												],
												"src": "3785:118:18"
											},
											{
												"body": {
													"nativeSrc": "4007:124:18",
													"nodeType": "YulBlock",
													"src": "4007:124:18",
													"statements": [
														{
															"nativeSrc": "4017:26:18",
															"nodeType": "YulAssignment",
															"src": "4017:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4029:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4040:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4025:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:18"
																},
																"nativeSrc": "4025:18:18",
																"nodeType": "YulFunctionCall",
																"src": "4025:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4017:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4097:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4110:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4121:1:18",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4106:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:18"
																		},
																		"nativeSrc": "4106:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4053:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:18"
																},
																"nativeSrc": "4053:71:18",
																"nodeType": "YulFunctionCall",
																"src": "4053:71:18"
															},
															"nativeSrc": "4053:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3909:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3979:9:18",
														"nodeType": "YulTypedName",
														"src": "3979:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3991:6:18",
														"nodeType": "YulTypedName",
														"src": "3991:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4002:4:18",
														"nodeType": "YulTypedName",
														"src": "4002:4:18",
														"type": ""
													}
												],
												"src": "3909:222:18"
											},
											{
												"body": {
													"nativeSrc": "4180:79:18",
													"nodeType": "YulBlock",
													"src": "4180:79:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "4237:16:18",
																"nodeType": "YulBlock",
																"src": "4237:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4246:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4249:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4239:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:18"
																			},
																			"nativeSrc": "4239:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:18"
																		},
																		"nativeSrc": "4239:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4203:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4228:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4210:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:18"
																				},
																				"nativeSrc": "4210:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4200:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:18"
																		},
																		"nativeSrc": "4200:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4193:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:18"
																},
																"nativeSrc": "4193:43:18",
																"nodeType": "YulFunctionCall",
																"src": "4193:43:18"
															},
															"nativeSrc": "4190:63:18",
															"nodeType": "YulIf",
															"src": "4190:63:18"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4137:122:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4173:5:18",
														"nodeType": "YulTypedName",
														"src": "4173:5:18",
														"type": ""
													}
												],
												"src": "4137:122:18"
											},
											{
												"body": {
													"nativeSrc": "4317:87:18",
													"nodeType": "YulBlock",
													"src": "4317:87:18",
													"statements": [
														{
															"nativeSrc": "4327:29:18",
															"nodeType": "YulAssignment",
															"src": "4327:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4349:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4336:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:18"
																},
																"nativeSrc": "4336:20:18",
																"nodeType": "YulFunctionCall",
																"src": "4336:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4327:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4392:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4365:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:18"
																},
																"nativeSrc": "4365:33:18",
																"nodeType": "YulFunctionCall",
																"src": "4365:33:18"
															},
															"nativeSrc": "4365:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:18"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4265:139:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4295:6:18",
														"nodeType": "YulTypedName",
														"src": "4295:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4303:3:18",
														"nodeType": "YulTypedName",
														"src": "4303:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4311:5:18",
														"nodeType": "YulTypedName",
														"src": "4311:5:18",
														"type": ""
													}
												],
												"src": "4265:139:18"
											},
											{
												"body": {
													"nativeSrc": "4493:391:18",
													"nodeType": "YulBlock",
													"src": "4493:391:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "4539:83:18",
																"nodeType": "YulBlock",
																"src": "4539:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4541:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:18"
																			},
																			"nativeSrc": "4541:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:18"
																		},
																		"nativeSrc": "4541:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4514:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4523:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4510:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:18"
																		},
																		"nativeSrc": "4510:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4535:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4506:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:18"
																},
																"nativeSrc": "4506:32:18",
																"nodeType": "YulFunctionCall",
																"src": "4506:32:18"
															},
															"nativeSrc": "4503:119:18",
															"nodeType": "YulIf",
															"src": "4503:119:18"
														},
														{
															"nativeSrc": "4632:117:18",
															"nodeType": "YulBlock",
															"src": "4632:117:18",
															"statements": [
																{
																	"nativeSrc": "4647:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4661:1:18",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4651:6:18",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4676:63:18",
																	"nodeType": "YulAssignment",
																	"src": "4676:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4711:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4722:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4707:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:18"
																				},
																				"nativeSrc": "4707:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4731:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4686:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:18"
																		},
																		"nativeSrc": "4686:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4676:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4759:118:18",
															"nodeType": "YulBlock",
															"src": "4759:118:18",
															"statements": [
																{
																	"nativeSrc": "4774:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4788:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4778:6:18",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4804:63:18",
																	"nodeType": "YulAssignment",
																	"src": "4804:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4839:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4850:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4835:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:18"
																				},
																				"nativeSrc": "4835:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4859:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4814:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:18"
																		},
																		"nativeSrc": "4814:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4804:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4410:474:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4455:9:18",
														"nodeType": "YulTypedName",
														"src": "4455:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4466:7:18",
														"nodeType": "YulTypedName",
														"src": "4466:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4478:6:18",
														"nodeType": "YulTypedName",
														"src": "4478:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4486:6:18",
														"nodeType": "YulTypedName",
														"src": "4486:6:18",
														"type": ""
													}
												],
												"src": "4410:474:18"
											},
											{
												"body": {
													"nativeSrc": "4990:519:18",
													"nodeType": "YulBlock",
													"src": "4990:519:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "5036:83:18",
																"nodeType": "YulBlock",
																"src": "5036:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5038:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "5038:77:18"
																			},
																			"nativeSrc": "5038:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5038:79:18"
																		},
																		"nativeSrc": "5038:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "5038:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5011:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5011:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5020:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5020:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5007:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5007:3:18"
																		},
																		"nativeSrc": "5007:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5007:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5032:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5032:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5003:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5003:3:18"
																},
																"nativeSrc": "5003:32:18",
																"nodeType": "YulFunctionCall",
																"src": "5003:32:18"
															},
															"nativeSrc": "5000:119:18",
															"nodeType": "YulIf",
															"src": "5000:119:18"
														},
														{
															"nativeSrc": "5129:117:18",
															"nodeType": "YulBlock",
															"src": "5129:117:18",
															"statements": [
																{
																	"nativeSrc": "5144:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5144:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5158:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5158:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5148:6:18",
																			"nodeType": "YulTypedName",
																			"src": "5148:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5173:63:18",
																	"nodeType": "YulAssignment",
																	"src": "5173:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5208:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "5208:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5219:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5219:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5204:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5204:3:18"
																				},
																				"nativeSrc": "5204:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5204:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5228:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5228:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5183:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "5183:20:18"
																		},
																		"nativeSrc": "5183:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5183:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5173:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "5173:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5256:118:18",
															"nodeType": "YulBlock",
															"src": "5256:118:18",
															"statements": [
																{
																	"nativeSrc": "5271:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5271:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5285:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5285:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5275:6:18",
																			"nodeType": "YulTypedName",
																			"src": "5275:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5301:63:18",
																	"nodeType": "YulAssignment",
																	"src": "5301:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5336:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "5336:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5347:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5347:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5332:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5332:3:18"
																				},
																				"nativeSrc": "5332:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5332:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5356:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5356:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5311:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "5311:20:18"
																		},
																		"nativeSrc": "5311:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5311:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5301:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "5301:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5384:118:18",
															"nodeType": "YulBlock",
															"src": "5384:118:18",
															"statements": [
																{
																	"nativeSrc": "5399:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5399:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5413:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5413:2:18",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5403:6:18",
																			"nodeType": "YulTypedName",
																			"src": "5403:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5429:63:18",
																	"nodeType": "YulAssignment",
																	"src": "5429:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5464:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "5464:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5475:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5475:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5460:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5460:3:18"
																				},
																				"nativeSrc": "5460:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5460:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5484:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5484:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5439:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "5439:20:18"
																		},
																		"nativeSrc": "5439:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5439:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5429:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "5429:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4890:619:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4944:9:18",
														"nodeType": "YulTypedName",
														"src": "4944:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4955:7:18",
														"nodeType": "YulTypedName",
														"src": "4955:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4967:6:18",
														"nodeType": "YulTypedName",
														"src": "4967:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4975:6:18",
														"nodeType": "YulTypedName",
														"src": "4975:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4983:6:18",
														"nodeType": "YulTypedName",
														"src": "4983:6:18",
														"type": ""
													}
												],
												"src": "4890:619:18"
											},
											{
												"body": {
													"nativeSrc": "5581:263:18",
													"nodeType": "YulBlock",
													"src": "5581:263:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "5627:83:18",
																"nodeType": "YulBlock",
																"src": "5627:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5629:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "5629:77:18"
																			},
																			"nativeSrc": "5629:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5629:79:18"
																		},
																		"nativeSrc": "5629:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "5629:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5602:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5602:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5611:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5611:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5598:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5598:3:18"
																		},
																		"nativeSrc": "5598:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5598:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5623:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5623:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5594:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5594:3:18"
																},
																"nativeSrc": "5594:32:18",
																"nodeType": "YulFunctionCall",
																"src": "5594:32:18"
															},
															"nativeSrc": "5591:119:18",
															"nodeType": "YulIf",
															"src": "5591:119:18"
														},
														{
															"nativeSrc": "5720:117:18",
															"nodeType": "YulBlock",
															"src": "5720:117:18",
															"statements": [
																{
																	"nativeSrc": "5735:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5735:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5749:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5749:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5739:6:18",
																			"nodeType": "YulTypedName",
																			"src": "5739:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5764:63:18",
																	"nodeType": "YulAssignment",
																	"src": "5764:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5799:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "5799:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5810:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5810:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5795:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5795:3:18"
																				},
																				"nativeSrc": "5795:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5795:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5819:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5819:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5774:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "5774:20:18"
																		},
																		"nativeSrc": "5774:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5774:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5764:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "5764:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5515:329:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5551:9:18",
														"nodeType": "YulTypedName",
														"src": "5551:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5562:7:18",
														"nodeType": "YulTypedName",
														"src": "5562:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5574:6:18",
														"nodeType": "YulTypedName",
														"src": "5574:6:18",
														"type": ""
													}
												],
												"src": "5515:329:18"
											},
											{
												"body": {
													"nativeSrc": "5915:53:18",
													"nodeType": "YulBlock",
													"src": "5915:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5932:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "5932:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5955:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "5955:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5937:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "5937:17:18"
																		},
																		"nativeSrc": "5937:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5937:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5925:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5925:6:18"
																},
																"nativeSrc": "5925:37:18",
																"nodeType": "YulFunctionCall",
																"src": "5925:37:18"
															},
															"nativeSrc": "5925:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "5925:37:18"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5850:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5903:5:18",
														"nodeType": "YulTypedName",
														"src": "5903:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5910:3:18",
														"nodeType": "YulTypedName",
														"src": "5910:3:18",
														"type": ""
													}
												],
												"src": "5850:118:18"
											},
											{
												"body": {
													"nativeSrc": "6072:124:18",
													"nodeType": "YulBlock",
													"src": "6072:124:18",
													"statements": [
														{
															"nativeSrc": "6082:26:18",
															"nodeType": "YulAssignment",
															"src": "6082:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6094:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "6094:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6105:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6105:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6090:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6090:3:18"
																},
																"nativeSrc": "6090:18:18",
																"nodeType": "YulFunctionCall",
																"src": "6090:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6082:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "6082:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6162:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6162:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6175:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6175:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6186:1:18",
																				"nodeType": "YulLiteral",
																				"src": "6186:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6171:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6171:3:18"
																		},
																		"nativeSrc": "6171:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6171:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6118:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "6118:43:18"
																},
																"nativeSrc": "6118:71:18",
																"nodeType": "YulFunctionCall",
																"src": "6118:71:18"
															},
															"nativeSrc": "6118:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "6118:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5974:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6044:9:18",
														"nodeType": "YulTypedName",
														"src": "6044:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6056:6:18",
														"nodeType": "YulTypedName",
														"src": "6056:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6067:4:18",
														"nodeType": "YulTypedName",
														"src": "6067:4:18",
														"type": ""
													}
												],
												"src": "5974:222:18"
											},
											{
												"body": {
													"nativeSrc": "6276:40:18",
													"nodeType": "YulBlock",
													"src": "6276:40:18",
													"statements": [
														{
															"nativeSrc": "6287:22:18",
															"nodeType": "YulAssignment",
															"src": "6287:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6303:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "6303:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6297:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "6297:5:18"
																},
																"nativeSrc": "6297:12:18",
																"nodeType": "YulFunctionCall",
																"src": "6297:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6287:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6287:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6202:114:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6259:5:18",
														"nodeType": "YulTypedName",
														"src": "6259:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6269:6:18",
														"nodeType": "YulTypedName",
														"src": "6269:6:18",
														"type": ""
													}
												],
												"src": "6202:114:18"
											},
											{
												"body": {
													"nativeSrc": "6433:73:18",
													"nodeType": "YulBlock",
													"src": "6433:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6450:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "6450:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6455:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6455:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6443:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6443:6:18"
																},
																"nativeSrc": "6443:19:18",
																"nodeType": "YulFunctionCall",
																"src": "6443:19:18"
															},
															"nativeSrc": "6443:19:18",
															"nodeType": "YulExpressionStatement",
															"src": "6443:19:18"
														},
														{
															"nativeSrc": "6471:29:18",
															"nodeType": "YulAssignment",
															"src": "6471:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6490:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "6490:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6495:4:18",
																		"nodeType": "YulLiteral",
																		"src": "6495:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6486:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6486:3:18"
																},
																"nativeSrc": "6486:14:18",
																"nodeType": "YulFunctionCall",
																"src": "6486:14:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6471:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "6471:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6322:184:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6405:3:18",
														"nodeType": "YulTypedName",
														"src": "6405:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6410:6:18",
														"nodeType": "YulTypedName",
														"src": "6410:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6421:11:18",
														"nodeType": "YulTypedName",
														"src": "6421:11:18",
														"type": ""
													}
												],
												"src": "6322:184:18"
											},
											{
												"body": {
													"nativeSrc": "6584:60:18",
													"nodeType": "YulBlock",
													"src": "6584:60:18",
													"statements": [
														{
															"nativeSrc": "6594:11:18",
															"nodeType": "YulAssignment",
															"src": "6594:11:18",
															"value": {
																"name": "ptr",
																"nativeSrc": "6602:3:18",
																"nodeType": "YulIdentifier",
																"src": "6602:3:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6594:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "6594:4:18"
																}
															]
														},
														{
															"nativeSrc": "6615:22:18",
															"nodeType": "YulAssignment",
															"src": "6615:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6627:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "6627:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6632:4:18",
																		"nodeType": "YulLiteral",
																		"src": "6632:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6623:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6623:3:18"
																},
																"nativeSrc": "6623:14:18",
																"nodeType": "YulFunctionCall",
																"src": "6623:14:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6615:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "6615:4:18"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6512:132:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6571:3:18",
														"nodeType": "YulTypedName",
														"src": "6571:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "6579:4:18",
														"nodeType": "YulTypedName",
														"src": "6579:4:18",
														"type": ""
													}
												],
												"src": "6512:132:18"
											},
											{
												"body": {
													"nativeSrc": "6705:53:18",
													"nodeType": "YulBlock",
													"src": "6705:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6722:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "6722:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6745:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "6745:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6727:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "6727:17:18"
																		},
																		"nativeSrc": "6727:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6727:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6715:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6715:6:18"
																},
																"nativeSrc": "6715:37:18",
																"nodeType": "YulFunctionCall",
																"src": "6715:37:18"
															},
															"nativeSrc": "6715:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "6715:37:18"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "6650:108:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6693:5:18",
														"nodeType": "YulTypedName",
														"src": "6693:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6700:3:18",
														"nodeType": "YulTypedName",
														"src": "6700:3:18",
														"type": ""
													}
												],
												"src": "6650:108:18"
											},
											{
												"body": {
													"nativeSrc": "6844:99:18",
													"nodeType": "YulBlock",
													"src": "6844:99:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6888:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6888:6:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6896:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "6896:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "6854:33:18",
																	"nodeType": "YulIdentifier",
																	"src": "6854:33:18"
																},
																"nativeSrc": "6854:46:18",
																"nodeType": "YulFunctionCall",
																"src": "6854:46:18"
															},
															"nativeSrc": "6854:46:18",
															"nodeType": "YulExpressionStatement",
															"src": "6854:46:18"
														},
														{
															"nativeSrc": "6909:28:18",
															"nodeType": "YulAssignment",
															"src": "6909:28:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6927:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "6927:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6932:4:18",
																		"nodeType": "YulLiteral",
																		"src": "6932:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6923:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6923:3:18"
																},
																"nativeSrc": "6923:14:18",
																"nodeType": "YulFunctionCall",
																"src": "6923:14:18"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "6909:10:18",
																	"nodeType": "YulIdentifier",
																	"src": "6909:10:18"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "6764:179:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "6817:6:18",
														"nodeType": "YulTypedName",
														"src": "6817:6:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6825:3:18",
														"nodeType": "YulTypedName",
														"src": "6825:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "6833:10:18",
														"nodeType": "YulTypedName",
														"src": "6833:10:18",
														"type": ""
													}
												],
												"src": "6764:179:18"
											},
											{
												"body": {
													"nativeSrc": "7024:38:18",
													"nodeType": "YulBlock",
													"src": "7024:38:18",
													"statements": [
														{
															"nativeSrc": "7034:22:18",
															"nodeType": "YulAssignment",
															"src": "7034:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "7046:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7046:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7051:4:18",
																		"nodeType": "YulLiteral",
																		"src": "7051:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7042:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7042:3:18"
																},
																"nativeSrc": "7042:14:18",
																"nodeType": "YulFunctionCall",
																"src": "7042:14:18"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "7034:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "7034:4:18"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6949:113:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "7011:3:18",
														"nodeType": "YulTypedName",
														"src": "7011:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "7019:4:18",
														"nodeType": "YulTypedName",
														"src": "7019:4:18",
														"type": ""
													}
												],
												"src": "6949:113:18"
											},
											{
												"body": {
													"nativeSrc": "7222:608:18",
													"nodeType": "YulBlock",
													"src": "7222:608:18",
													"statements": [
														{
															"nativeSrc": "7232:68:18",
															"nodeType": "YulVariableDeclaration",
															"src": "7232:68:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7294:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "7294:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "7246:47:18",
																	"nodeType": "YulIdentifier",
																	"src": "7246:47:18"
																},
																"nativeSrc": "7246:54:18",
																"nodeType": "YulFunctionCall",
																"src": "7246:54:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7236:6:18",
																	"nodeType": "YulTypedName",
																	"src": "7236:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7309:93:18",
															"nodeType": "YulAssignment",
															"src": "7309:93:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7390:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7390:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7395:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7395:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "7316:73:18",
																	"nodeType": "YulIdentifier",
																	"src": "7316:73:18"
																},
																"nativeSrc": "7316:86:18",
																"nodeType": "YulFunctionCall",
																"src": "7316:86:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7309:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7309:3:18"
																}
															]
														},
														{
															"nativeSrc": "7411:71:18",
															"nodeType": "YulVariableDeclaration",
															"src": "7411:71:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7476:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "7476:5:18"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "7426:49:18",
																	"nodeType": "YulIdentifier",
																	"src": "7426:49:18"
																},
																"nativeSrc": "7426:56:18",
																"nodeType": "YulFunctionCall",
																"src": "7426:56:18"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "7415:7:18",
																	"nodeType": "YulTypedName",
																	"src": "7415:7:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7491:21:18",
															"nodeType": "YulVariableDeclaration",
															"src": "7491:21:18",
															"value": {
																"name": "baseRef",
																"nativeSrc": "7505:7:18",
																"nodeType": "YulIdentifier",
																"src": "7505:7:18"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "7495:6:18",
																	"nodeType": "YulTypedName",
																	"src": "7495:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7581:224:18",
																"nodeType": "YulBlock",
																"src": "7581:224:18",
																"statements": [
																	{
																		"nativeSrc": "7595:34:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7595:34:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7622:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "7622:6:18"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "7616:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "7616:5:18"
																			},
																			"nativeSrc": "7616:13:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7616:13:18"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "7599:13:18",
																				"nodeType": "YulTypedName",
																				"src": "7599:13:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7642:70:18",
																		"nodeType": "YulAssignment",
																		"src": "7642:70:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "7693:13:18",
																					"nodeType": "YulIdentifier",
																					"src": "7693:13:18"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "7708:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "7708:3:18"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "7649:43:18",
																				"nodeType": "YulIdentifier",
																				"src": "7649:43:18"
																			},
																			"nativeSrc": "7649:63:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7649:63:18"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "7642:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "7642:3:18"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7725:70:18",
																		"nodeType": "YulAssignment",
																		"src": "7725:70:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7788:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "7788:6:18"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "7735:52:18",
																				"nodeType": "YulIdentifier",
																				"src": "7735:52:18"
																			},
																			"nativeSrc": "7735:60:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7735:60:18"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "7725:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7725:6:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "7543:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "7543:1:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7546:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7546:6:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7540:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "7540:2:18"
																},
																"nativeSrc": "7540:13:18",
																"nodeType": "YulFunctionCall",
																"src": "7540:13:18"
															},
															"nativeSrc": "7521:284:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7554:18:18",
																"nodeType": "YulBlock",
																"src": "7554:18:18",
																"statements": [
																	{
																		"nativeSrc": "7556:14:18",
																		"nodeType": "YulAssignment",
																		"src": "7556:14:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "7565:1:18",
																					"nodeType": "YulIdentifier",
																					"src": "7565:1:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7568:1:18",
																					"nodeType": "YulLiteral",
																					"src": "7568:1:18",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7561:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "7561:3:18"
																			},
																			"nativeSrc": "7561:9:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7561:9:18"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "7556:1:18",
																				"nodeType": "YulIdentifier",
																				"src": "7556:1:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7525:14:18",
																"nodeType": "YulBlock",
																"src": "7525:14:18",
																"statements": [
																	{
																		"nativeSrc": "7527:10:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7527:10:18",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7536:1:18",
																			"nodeType": "YulLiteral",
																			"src": "7536:1:18",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "7531:1:18",
																				"nodeType": "YulTypedName",
																				"src": "7531:1:18",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7521:284:18"
														},
														{
															"nativeSrc": "7814:10:18",
															"nodeType": "YulAssignment",
															"src": "7814:10:18",
															"value": {
																"name": "pos",
																"nativeSrc": "7821:3:18",
																"nodeType": "YulIdentifier",
																"src": "7821:3:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7814:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7814:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "7098:732:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7201:5:18",
														"nodeType": "YulTypedName",
														"src": "7201:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7208:3:18",
														"nodeType": "YulTypedName",
														"src": "7208:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7217:3:18",
														"nodeType": "YulTypedName",
														"src": "7217:3:18",
														"type": ""
													}
												],
												"src": "7098:732:18"
											},
											{
												"body": {
													"nativeSrc": "7984:225:18",
													"nodeType": "YulBlock",
													"src": "7984:225:18",
													"statements": [
														{
															"nativeSrc": "7994:26:18",
															"nodeType": "YulAssignment",
															"src": "7994:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8006:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "8006:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8017:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8017:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8002:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8002:3:18"
																},
																"nativeSrc": "8002:18:18",
																"nodeType": "YulFunctionCall",
																"src": "8002:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7994:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "7994:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8041:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8041:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8052:1:18",
																				"nodeType": "YulLiteral",
																				"src": "8052:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8037:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8037:3:18"
																		},
																		"nativeSrc": "8037:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8037:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8060:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "8060:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8066:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8066:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8056:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8056:3:18"
																		},
																		"nativeSrc": "8056:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8056:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8030:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8030:6:18"
																},
																"nativeSrc": "8030:47:18",
																"nodeType": "YulFunctionCall",
																"src": "8030:47:18"
															},
															"nativeSrc": "8030:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "8030:47:18"
														},
														{
															"nativeSrc": "8086:116:18",
															"nodeType": "YulAssignment",
															"src": "8086:116:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8188:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8188:6:18"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8197:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "8197:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "8094:93:18",
																	"nodeType": "YulIdentifier",
																	"src": "8094:93:18"
																},
																"nativeSrc": "8094:108:18",
																"nodeType": "YulFunctionCall",
																"src": "8094:108:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8086:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "8086:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "7836:373:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7956:9:18",
														"nodeType": "YulTypedName",
														"src": "7956:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7968:6:18",
														"nodeType": "YulTypedName",
														"src": "7968:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7979:4:18",
														"nodeType": "YulTypedName",
														"src": "7979:4:18",
														"type": ""
													}
												],
												"src": "7836:373:18"
											},
											{
												"body": {
													"nativeSrc": "8255:76:18",
													"nodeType": "YulBlock",
													"src": "8255:76:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "8309:16:18",
																"nodeType": "YulBlock",
																"src": "8309:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8318:1:18",
																					"nodeType": "YulLiteral",
																					"src": "8318:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8321:1:18",
																					"nodeType": "YulLiteral",
																					"src": "8321:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8311:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8311:6:18"
																			},
																			"nativeSrc": "8311:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8311:12:18"
																		},
																		"nativeSrc": "8311:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8311:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8278:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "8278:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8300:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "8300:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "8285:14:18",
																					"nodeType": "YulIdentifier",
																					"src": "8285:14:18"
																				},
																				"nativeSrc": "8285:21:18",
																				"nodeType": "YulFunctionCall",
																				"src": "8285:21:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8275:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "8275:2:18"
																		},
																		"nativeSrc": "8275:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8275:32:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8268:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8268:6:18"
																},
																"nativeSrc": "8268:40:18",
																"nodeType": "YulFunctionCall",
																"src": "8268:40:18"
															},
															"nativeSrc": "8265:60:18",
															"nodeType": "YulIf",
															"src": "8265:60:18"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "8215:116:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8248:5:18",
														"nodeType": "YulTypedName",
														"src": "8248:5:18",
														"type": ""
													}
												],
												"src": "8215:116:18"
											},
											{
												"body": {
													"nativeSrc": "8386:84:18",
													"nodeType": "YulBlock",
													"src": "8386:84:18",
													"statements": [
														{
															"nativeSrc": "8396:29:18",
															"nodeType": "YulAssignment",
															"src": "8396:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8418:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8418:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8405:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "8405:12:18"
																},
																"nativeSrc": "8405:20:18",
																"nodeType": "YulFunctionCall",
																"src": "8405:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8396:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "8396:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8458:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "8458:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "8434:23:18",
																	"nodeType": "YulIdentifier",
																	"src": "8434:23:18"
																},
																"nativeSrc": "8434:30:18",
																"nodeType": "YulFunctionCall",
																"src": "8434:30:18"
															},
															"nativeSrc": "8434:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "8434:30:18"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "8337:133:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8364:6:18",
														"nodeType": "YulTypedName",
														"src": "8364:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8372:3:18",
														"nodeType": "YulTypedName",
														"src": "8372:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8380:5:18",
														"nodeType": "YulTypedName",
														"src": "8380:5:18",
														"type": ""
													}
												],
												"src": "8337:133:18"
											},
											{
												"body": {
													"nativeSrc": "8556:388:18",
													"nodeType": "YulBlock",
													"src": "8556:388:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "8602:83:18",
																"nodeType": "YulBlock",
																"src": "8602:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8604:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "8604:77:18"
																			},
																			"nativeSrc": "8604:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8604:79:18"
																		},
																		"nativeSrc": "8604:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8604:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8577:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "8577:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8586:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8586:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8573:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8573:3:18"
																		},
																		"nativeSrc": "8573:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8573:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8598:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8598:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8569:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8569:3:18"
																},
																"nativeSrc": "8569:32:18",
																"nodeType": "YulFunctionCall",
																"src": "8569:32:18"
															},
															"nativeSrc": "8566:119:18",
															"nodeType": "YulIf",
															"src": "8566:119:18"
														},
														{
															"nativeSrc": "8695:117:18",
															"nodeType": "YulBlock",
															"src": "8695:117:18",
															"statements": [
																{
																	"nativeSrc": "8710:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8710:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8724:1:18",
																		"nodeType": "YulLiteral",
																		"src": "8724:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8714:6:18",
																			"nodeType": "YulTypedName",
																			"src": "8714:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8739:63:18",
																	"nodeType": "YulAssignment",
																	"src": "8739:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8774:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "8774:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8785:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "8785:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8770:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "8770:3:18"
																				},
																				"nativeSrc": "8770:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "8770:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8794:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "8794:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8749:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "8749:20:18"
																		},
																		"nativeSrc": "8749:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8749:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8739:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "8739:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8822:115:18",
															"nodeType": "YulBlock",
															"src": "8822:115:18",
															"statements": [
																{
																	"nativeSrc": "8837:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8837:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8851:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8851:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8841:6:18",
																			"nodeType": "YulTypedName",
																			"src": "8841:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8867:60:18",
																	"nodeType": "YulAssignment",
																	"src": "8867:60:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8899:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "8899:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8910:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "8910:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8895:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "8895:3:18"
																				},
																				"nativeSrc": "8895:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "8895:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8919:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "8919:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "8877:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "8877:17:18"
																		},
																		"nativeSrc": "8877:50:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8877:50:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8867:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "8867:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "8476:468:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8518:9:18",
														"nodeType": "YulTypedName",
														"src": "8518:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8529:7:18",
														"nodeType": "YulTypedName",
														"src": "8529:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8541:6:18",
														"nodeType": "YulTypedName",
														"src": "8541:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8549:6:18",
														"nodeType": "YulTypedName",
														"src": "8549:6:18",
														"type": ""
													}
												],
												"src": "8476:468:18"
											},
											{
												"body": {
													"nativeSrc": "9039:28:18",
													"nodeType": "YulBlock",
													"src": "9039:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9056:1:18",
																		"nodeType": "YulLiteral",
																		"src": "9056:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9059:1:18",
																		"nodeType": "YulLiteral",
																		"src": "9059:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9049:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9049:6:18"
																},
																"nativeSrc": "9049:12:18",
																"nodeType": "YulFunctionCall",
																"src": "9049:12:18"
															},
															"nativeSrc": "9049:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "9049:12:18"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "8950:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "8950:117:18"
											},
											{
												"body": {
													"nativeSrc": "9162:28:18",
													"nodeType": "YulBlock",
													"src": "9162:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9179:1:18",
																		"nodeType": "YulLiteral",
																		"src": "9179:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9182:1:18",
																		"nodeType": "YulLiteral",
																		"src": "9182:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9172:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9172:6:18"
																},
																"nativeSrc": "9172:12:18",
																"nodeType": "YulFunctionCall",
																"src": "9172:12:18"
															},
															"nativeSrc": "9172:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "9172:12:18"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "9073:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "9073:117:18"
											},
											{
												"body": {
													"nativeSrc": "9224:152:18",
													"nodeType": "YulBlock",
													"src": "9224:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9241:1:18",
																		"nodeType": "YulLiteral",
																		"src": "9241:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9244:77:18",
																		"nodeType": "YulLiteral",
																		"src": "9244:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9234:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9234:6:18"
																},
																"nativeSrc": "9234:88:18",
																"nodeType": "YulFunctionCall",
																"src": "9234:88:18"
															},
															"nativeSrc": "9234:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "9234:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9338:1:18",
																		"nodeType": "YulLiteral",
																		"src": "9338:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9341:4:18",
																		"nodeType": "YulLiteral",
																		"src": "9341:4:18",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9331:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9331:6:18"
																},
																"nativeSrc": "9331:15:18",
																"nodeType": "YulFunctionCall",
																"src": "9331:15:18"
															},
															"nativeSrc": "9331:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "9331:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9362:1:18",
																		"nodeType": "YulLiteral",
																		"src": "9362:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9365:4:18",
																		"nodeType": "YulLiteral",
																		"src": "9365:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9355:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9355:6:18"
																},
																"nativeSrc": "9355:15:18",
																"nodeType": "YulFunctionCall",
																"src": "9355:15:18"
															},
															"nativeSrc": "9355:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "9355:15:18"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "9196:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "9196:180:18"
											},
											{
												"body": {
													"nativeSrc": "9425:238:18",
													"nodeType": "YulBlock",
													"src": "9425:238:18",
													"statements": [
														{
															"nativeSrc": "9435:58:18",
															"nodeType": "YulVariableDeclaration",
															"src": "9435:58:18",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "9457:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9457:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "9487:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "9487:4:18"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "9465:21:18",
																			"nodeType": "YulIdentifier",
																			"src": "9465:21:18"
																		},
																		"nativeSrc": "9465:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9465:27:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9453:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9453:3:18"
																},
																"nativeSrc": "9453:40:18",
																"nodeType": "YulFunctionCall",
																"src": "9453:40:18"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "9439:10:18",
																	"nodeType": "YulTypedName",
																	"src": "9439:10:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9604:22:18",
																"nodeType": "YulBlock",
																"src": "9604:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "9606:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "9606:16:18"
																			},
																			"nativeSrc": "9606:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9606:18:18"
																		},
																		"nativeSrc": "9606:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "9606:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "9547:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "9547:10:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9559:18:18",
																				"nodeType": "YulLiteral",
																				"src": "9559:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9544:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "9544:2:18"
																		},
																		"nativeSrc": "9544:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9544:34:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "9583:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "9583:10:18"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "9595:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "9595:6:18"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9580:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "9580:2:18"
																		},
																		"nativeSrc": "9580:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9580:22:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "9541:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "9541:2:18"
																},
																"nativeSrc": "9541:62:18",
																"nodeType": "YulFunctionCall",
																"src": "9541:62:18"
															},
															"nativeSrc": "9538:88:18",
															"nodeType": "YulIf",
															"src": "9538:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9642:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9642:2:18",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "9646:10:18",
																		"nodeType": "YulIdentifier",
																		"src": "9646:10:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9635:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9635:6:18"
																},
																"nativeSrc": "9635:22:18",
																"nodeType": "YulFunctionCall",
																"src": "9635:22:18"
															},
															"nativeSrc": "9635:22:18",
															"nodeType": "YulExpressionStatement",
															"src": "9635:22:18"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "9382:281:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9411:6:18",
														"nodeType": "YulTypedName",
														"src": "9411:6:18",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "9419:4:18",
														"nodeType": "YulTypedName",
														"src": "9419:4:18",
														"type": ""
													}
												],
												"src": "9382:281:18"
											},
											{
												"body": {
													"nativeSrc": "9710:88:18",
													"nodeType": "YulBlock",
													"src": "9710:88:18",
													"statements": [
														{
															"nativeSrc": "9720:30:18",
															"nodeType": "YulAssignment",
															"src": "9720:30:18",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "9730:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "9730:18:18"
																},
																"nativeSrc": "9730:20:18",
																"nodeType": "YulFunctionCall",
																"src": "9730:20:18"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "9720:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9720:6:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "9779:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9779:6:18"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "9787:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "9787:4:18"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "9759:19:18",
																	"nodeType": "YulIdentifier",
																	"src": "9759:19:18"
																},
																"nativeSrc": "9759:33:18",
																"nodeType": "YulFunctionCall",
																"src": "9759:33:18"
															},
															"nativeSrc": "9759:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "9759:33:18"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "9669:129:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "9694:4:18",
														"nodeType": "YulTypedName",
														"src": "9694:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "9703:6:18",
														"nodeType": "YulTypedName",
														"src": "9703:6:18",
														"type": ""
													}
												],
												"src": "9669:129:18"
											},
											{
												"body": {
													"nativeSrc": "9870:241:18",
													"nodeType": "YulBlock",
													"src": "9870:241:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "9975:22:18",
																"nodeType": "YulBlock",
																"src": "9975:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "9977:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "9977:16:18"
																			},
																			"nativeSrc": "9977:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9977:18:18"
																		},
																		"nativeSrc": "9977:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "9977:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9947:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9947:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9955:18:18",
																		"nodeType": "YulLiteral",
																		"src": "9955:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9944:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "9944:2:18"
																},
																"nativeSrc": "9944:30:18",
																"nodeType": "YulFunctionCall",
																"src": "9944:30:18"
															},
															"nativeSrc": "9941:56:18",
															"nodeType": "YulIf",
															"src": "9941:56:18"
														},
														{
															"nativeSrc": "10007:37:18",
															"nodeType": "YulAssignment",
															"src": "10007:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10037:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "10037:6:18"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "10015:21:18",
																	"nodeType": "YulIdentifier",
																	"src": "10015:21:18"
																},
																"nativeSrc": "10015:29:18",
																"nodeType": "YulFunctionCall",
																"src": "10015:29:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10007:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "10007:4:18"
																}
															]
														},
														{
															"nativeSrc": "10081:23:18",
															"nodeType": "YulAssignment",
															"src": "10081:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "10093:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "10093:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10099:4:18",
																		"nodeType": "YulLiteral",
																		"src": "10099:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10089:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10089:3:18"
																},
																"nativeSrc": "10089:15:18",
																"nodeType": "YulFunctionCall",
																"src": "10089:15:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10081:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "10081:4:18"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "9804:307:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "9854:6:18",
														"nodeType": "YulTypedName",
														"src": "9854:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "9865:4:18",
														"nodeType": "YulTypedName",
														"src": "9865:4:18",
														"type": ""
													}
												],
												"src": "9804:307:18"
											},
											{
												"body": {
													"nativeSrc": "10181:82:18",
													"nodeType": "YulBlock",
													"src": "10181:82:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "10204:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "10204:3:18"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "10209:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "10209:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10214:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "10214:6:18"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "10191:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "10191:12:18"
																},
																"nativeSrc": "10191:30:18",
																"nodeType": "YulFunctionCall",
																"src": "10191:30:18"
															},
															"nativeSrc": "10191:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "10191:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "10241:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "10241:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10246:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "10246:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10237:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10237:3:18"
																		},
																		"nativeSrc": "10237:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10237:16:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10255:1:18",
																		"nodeType": "YulLiteral",
																		"src": "10255:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10230:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10230:6:18"
																},
																"nativeSrc": "10230:27:18",
																"nodeType": "YulFunctionCall",
																"src": "10230:27:18"
															},
															"nativeSrc": "10230:27:18",
															"nodeType": "YulExpressionStatement",
															"src": "10230:27:18"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "10117:146:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10163:3:18",
														"nodeType": "YulTypedName",
														"src": "10163:3:18",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "10168:3:18",
														"nodeType": "YulTypedName",
														"src": "10168:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10173:6:18",
														"nodeType": "YulTypedName",
														"src": "10173:6:18",
														"type": ""
													}
												],
												"src": "10117:146:18"
											},
											{
												"body": {
													"nativeSrc": "10352:340:18",
													"nodeType": "YulBlock",
													"src": "10352:340:18",
													"statements": [
														{
															"nativeSrc": "10362:74:18",
															"nodeType": "YulAssignment",
															"src": "10362:74:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10428:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "10428:6:18"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "10387:40:18",
																			"nodeType": "YulIdentifier",
																			"src": "10387:40:18"
																		},
																		"nativeSrc": "10387:48:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10387:48:18"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "10371:15:18",
																	"nodeType": "YulIdentifier",
																	"src": "10371:15:18"
																},
																"nativeSrc": "10371:65:18",
																"nodeType": "YulFunctionCall",
																"src": "10371:65:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10362:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "10362:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10452:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "10452:5:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10459:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "10459:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10445:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10445:6:18"
																},
																"nativeSrc": "10445:21:18",
																"nodeType": "YulFunctionCall",
																"src": "10445:21:18"
															},
															"nativeSrc": "10445:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "10445:21:18"
														},
														{
															"nativeSrc": "10475:27:18",
															"nodeType": "YulVariableDeclaration",
															"src": "10475:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10490:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "10490:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10497:4:18",
																		"nodeType": "YulLiteral",
																		"src": "10497:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10486:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10486:3:18"
																},
																"nativeSrc": "10486:16:18",
																"nodeType": "YulFunctionCall",
																"src": "10486:16:18"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "10479:3:18",
																	"nodeType": "YulTypedName",
																	"src": "10479:3:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10540:83:18",
																"nodeType": "YulBlock",
																"src": "10540:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "10542:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "10542:77:18"
																			},
																			"nativeSrc": "10542:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10542:79:18"
																		},
																		"nativeSrc": "10542:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10542:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "10521:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "10521:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10526:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "10526:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10517:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10517:3:18"
																		},
																		"nativeSrc": "10517:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10517:16:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10535:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "10535:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10514:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "10514:2:18"
																},
																"nativeSrc": "10514:25:18",
																"nodeType": "YulFunctionCall",
																"src": "10514:25:18"
															},
															"nativeSrc": "10511:112:18",
															"nodeType": "YulIf",
															"src": "10511:112:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "10669:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "10669:3:18"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "10674:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "10674:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10679:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "10679:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "10632:36:18",
																	"nodeType": "YulIdentifier",
																	"src": "10632:36:18"
																},
																"nativeSrc": "10632:54:18",
																"nodeType": "YulFunctionCall",
																"src": "10632:54:18"
															},
															"nativeSrc": "10632:54:18",
															"nodeType": "YulExpressionStatement",
															"src": "10632:54:18"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "10269:423:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10325:3:18",
														"nodeType": "YulTypedName",
														"src": "10325:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10330:6:18",
														"nodeType": "YulTypedName",
														"src": "10330:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10338:3:18",
														"nodeType": "YulTypedName",
														"src": "10338:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10346:5:18",
														"nodeType": "YulTypedName",
														"src": "10346:5:18",
														"type": ""
													}
												],
												"src": "10269:423:18"
											},
											{
												"body": {
													"nativeSrc": "10772:277:18",
													"nodeType": "YulBlock",
													"src": "10772:277:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "10821:83:18",
																"nodeType": "YulBlock",
																"src": "10821:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "10823:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "10823:77:18"
																			},
																			"nativeSrc": "10823:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10823:79:18"
																		},
																		"nativeSrc": "10823:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10823:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "10800:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "10800:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10808:4:18",
																						"nodeType": "YulLiteral",
																						"src": "10808:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10796:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "10796:3:18"
																				},
																				"nativeSrc": "10796:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "10796:17:18"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "10815:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "10815:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "10792:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10792:3:18"
																		},
																		"nativeSrc": "10792:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10792:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10785:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10785:6:18"
																},
																"nativeSrc": "10785:35:18",
																"nodeType": "YulFunctionCall",
																"src": "10785:35:18"
															},
															"nativeSrc": "10782:122:18",
															"nodeType": "YulIf",
															"src": "10782:122:18"
														},
														{
															"nativeSrc": "10913:34:18",
															"nodeType": "YulVariableDeclaration",
															"src": "10913:34:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10940:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "10940:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10927:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "10927:12:18"
																},
																"nativeSrc": "10927:20:18",
																"nodeType": "YulFunctionCall",
																"src": "10927:20:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10917:6:18",
																	"nodeType": "YulTypedName",
																	"src": "10917:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10956:87:18",
															"nodeType": "YulAssignment",
															"src": "10956:87:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11016:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "11016:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11024:4:18",
																				"nodeType": "YulLiteral",
																				"src": "11024:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11012:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11012:3:18"
																		},
																		"nativeSrc": "11012:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11012:17:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11031:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "11031:6:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11039:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "11039:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "10965:46:18",
																	"nodeType": "YulIdentifier",
																	"src": "10965:46:18"
																},
																"nativeSrc": "10965:78:18",
																"nodeType": "YulFunctionCall",
																"src": "10965:78:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10956:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "10956:5:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "10711:338:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10750:6:18",
														"nodeType": "YulTypedName",
														"src": "10750:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10758:3:18",
														"nodeType": "YulTypedName",
														"src": "10758:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10766:5:18",
														"nodeType": "YulTypedName",
														"src": "10766:5:18",
														"type": ""
													}
												],
												"src": "10711:338:18"
											},
											{
												"body": {
													"nativeSrc": "11181:817:18",
													"nodeType": "YulBlock",
													"src": "11181:817:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "11228:83:18",
																"nodeType": "YulBlock",
																"src": "11228:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11230:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "11230:77:18"
																			},
																			"nativeSrc": "11230:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "11230:79:18"
																		},
																		"nativeSrc": "11230:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "11230:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11202:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "11202:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11211:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "11211:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11198:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11198:3:18"
																		},
																		"nativeSrc": "11198:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11198:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11223:3:18",
																		"nodeType": "YulLiteral",
																		"src": "11223:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11194:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11194:3:18"
																},
																"nativeSrc": "11194:33:18",
																"nodeType": "YulFunctionCall",
																"src": "11194:33:18"
															},
															"nativeSrc": "11191:120:18",
															"nodeType": "YulIf",
															"src": "11191:120:18"
														},
														{
															"nativeSrc": "11321:117:18",
															"nodeType": "YulBlock",
															"src": "11321:117:18",
															"statements": [
																{
																	"nativeSrc": "11336:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11336:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11350:1:18",
																		"nodeType": "YulLiteral",
																		"src": "11350:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11340:6:18",
																			"nodeType": "YulTypedName",
																			"src": "11340:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11365:63:18",
																	"nodeType": "YulAssignment",
																	"src": "11365:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11400:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "11400:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11411:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "11411:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11396:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "11396:3:18"
																				},
																				"nativeSrc": "11396:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "11396:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11420:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "11420:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11375:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "11375:20:18"
																		},
																		"nativeSrc": "11375:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11375:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11365:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "11365:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11448:118:18",
															"nodeType": "YulBlock",
															"src": "11448:118:18",
															"statements": [
																{
																	"nativeSrc": "11463:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11463:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11477:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11477:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11467:6:18",
																			"nodeType": "YulTypedName",
																			"src": "11467:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11493:63:18",
																	"nodeType": "YulAssignment",
																	"src": "11493:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11528:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "11528:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11539:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "11539:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11524:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "11524:3:18"
																				},
																				"nativeSrc": "11524:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "11524:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11548:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "11548:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11503:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "11503:20:18"
																		},
																		"nativeSrc": "11503:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11503:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11493:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "11493:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11576:118:18",
															"nodeType": "YulBlock",
															"src": "11576:118:18",
															"statements": [
																{
																	"nativeSrc": "11591:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11591:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11605:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11605:2:18",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11595:6:18",
																			"nodeType": "YulTypedName",
																			"src": "11595:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11621:63:18",
																	"nodeType": "YulAssignment",
																	"src": "11621:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11656:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "11656:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11667:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "11667:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11652:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "11652:3:18"
																				},
																				"nativeSrc": "11652:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "11652:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11676:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "11676:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "11631:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "11631:20:18"
																		},
																		"nativeSrc": "11631:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11631:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "11621:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "11621:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11704:287:18",
															"nodeType": "YulBlock",
															"src": "11704:287:18",
															"statements": [
																{
																	"nativeSrc": "11719:46:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11719:46:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11750:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "11750:9:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11761:2:18",
																						"nodeType": "YulLiteral",
																						"src": "11761:2:18",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11746:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "11746:3:18"
																				},
																				"nativeSrc": "11746:18:18",
																				"nodeType": "YulFunctionCall",
																				"src": "11746:18:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11733:12:18",
																			"nodeType": "YulIdentifier",
																			"src": "11733:12:18"
																		},
																		"nativeSrc": "11733:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11733:32:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11723:6:18",
																			"nodeType": "YulTypedName",
																			"src": "11723:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11812:83:18",
																		"nodeType": "YulBlock",
																		"src": "11812:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11814:77:18",
																						"nodeType": "YulIdentifier",
																						"src": "11814:77:18"
																					},
																					"nativeSrc": "11814:79:18",
																					"nodeType": "YulFunctionCall",
																					"src": "11814:79:18"
																				},
																				"nativeSrc": "11814:79:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "11814:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11784:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "11784:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11792:18:18",
																				"nodeType": "YulLiteral",
																				"src": "11792:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11781:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "11781:2:18"
																		},
																		"nativeSrc": "11781:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11781:30:18"
																	},
																	"nativeSrc": "11778:117:18",
																	"nodeType": "YulIf",
																	"src": "11778:117:18"
																},
																{
																	"nativeSrc": "11909:72:18",
																	"nodeType": "YulAssignment",
																	"src": "11909:72:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11953:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "11953:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11964:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "11964:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11949:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "11949:3:18"
																				},
																				"nativeSrc": "11949:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "11949:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11973:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "11973:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "11919:29:18",
																			"nodeType": "YulIdentifier",
																			"src": "11919:29:18"
																		},
																		"nativeSrc": "11919:62:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11919:62:18"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "11909:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "11909:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "11055:943:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11127:9:18",
														"nodeType": "YulTypedName",
														"src": "11127:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11138:7:18",
														"nodeType": "YulTypedName",
														"src": "11138:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11150:6:18",
														"nodeType": "YulTypedName",
														"src": "11150:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11158:6:18",
														"nodeType": "YulTypedName",
														"src": "11158:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11166:6:18",
														"nodeType": "YulTypedName",
														"src": "11166:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11174:6:18",
														"nodeType": "YulTypedName",
														"src": "11174:6:18",
														"type": ""
													}
												],
												"src": "11055:943:18"
											},
											{
												"body": {
													"nativeSrc": "12071:241:18",
													"nodeType": "YulBlock",
													"src": "12071:241:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "12176:22:18",
																"nodeType": "YulBlock",
																"src": "12176:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "12178:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "12178:16:18"
																			},
																			"nativeSrc": "12178:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "12178:18:18"
																		},
																		"nativeSrc": "12178:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "12178:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "12148:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12148:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12156:18:18",
																		"nodeType": "YulLiteral",
																		"src": "12156:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12145:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "12145:2:18"
																},
																"nativeSrc": "12145:30:18",
																"nodeType": "YulFunctionCall",
																"src": "12145:30:18"
															},
															"nativeSrc": "12142:56:18",
															"nodeType": "YulIf",
															"src": "12142:56:18"
														},
														{
															"nativeSrc": "12208:37:18",
															"nodeType": "YulAssignment",
															"src": "12208:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "12238:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12238:6:18"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "12216:21:18",
																	"nodeType": "YulIdentifier",
																	"src": "12216:21:18"
																},
																"nativeSrc": "12216:29:18",
																"nodeType": "YulFunctionCall",
																"src": "12216:29:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "12208:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "12208:4:18"
																}
															]
														},
														{
															"nativeSrc": "12282:23:18",
															"nodeType": "YulAssignment",
															"src": "12282:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "12294:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "12294:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12300:4:18",
																		"nodeType": "YulLiteral",
																		"src": "12300:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12290:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12290:3:18"
																},
																"nativeSrc": "12290:15:18",
																"nodeType": "YulFunctionCall",
																"src": "12290:15:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "12282:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "12282:4:18"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "12004:308:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "12055:6:18",
														"nodeType": "YulTypedName",
														"src": "12055:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "12066:4:18",
														"nodeType": "YulTypedName",
														"src": "12066:4:18",
														"type": ""
													}
												],
												"src": "12004:308:18"
											},
											{
												"body": {
													"nativeSrc": "12402:341:18",
													"nodeType": "YulBlock",
													"src": "12402:341:18",
													"statements": [
														{
															"nativeSrc": "12412:75:18",
															"nodeType": "YulAssignment",
															"src": "12412:75:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12479:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "12479:6:18"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "12437:41:18",
																			"nodeType": "YulIdentifier",
																			"src": "12437:41:18"
																		},
																		"nativeSrc": "12437:49:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12437:49:18"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "12421:15:18",
																	"nodeType": "YulIdentifier",
																	"src": "12421:15:18"
																},
																"nativeSrc": "12421:66:18",
																"nodeType": "YulFunctionCall",
																"src": "12421:66:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "12412:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "12412:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "12503:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "12503:5:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12510:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12510:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12496:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12496:6:18"
																},
																"nativeSrc": "12496:21:18",
																"nodeType": "YulFunctionCall",
																"src": "12496:21:18"
															},
															"nativeSrc": "12496:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "12496:21:18"
														},
														{
															"nativeSrc": "12526:27:18",
															"nodeType": "YulVariableDeclaration",
															"src": "12526:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "12541:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "12541:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12548:4:18",
																		"nodeType": "YulLiteral",
																		"src": "12548:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12537:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12537:3:18"
																},
																"nativeSrc": "12537:16:18",
																"nodeType": "YulFunctionCall",
																"src": "12537:16:18"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "12530:3:18",
																	"nodeType": "YulTypedName",
																	"src": "12530:3:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12591:83:18",
																"nodeType": "YulBlock",
																"src": "12591:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "12593:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "12593:77:18"
																			},
																			"nativeSrc": "12593:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "12593:79:18"
																		},
																		"nativeSrc": "12593:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "12593:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "12572:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "12572:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "12577:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "12577:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12568:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12568:3:18"
																		},
																		"nativeSrc": "12568:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12568:16:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "12586:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "12586:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12565:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "12565:2:18"
																},
																"nativeSrc": "12565:25:18",
																"nodeType": "YulFunctionCall",
																"src": "12565:25:18"
															},
															"nativeSrc": "12562:112:18",
															"nodeType": "YulIf",
															"src": "12562:112:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "12720:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "12720:3:18"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "12725:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "12725:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12730:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12730:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "12683:36:18",
																	"nodeType": "YulIdentifier",
																	"src": "12683:36:18"
																},
																"nativeSrc": "12683:54:18",
																"nodeType": "YulFunctionCall",
																"src": "12683:54:18"
															},
															"nativeSrc": "12683:54:18",
															"nodeType": "YulExpressionStatement",
															"src": "12683:54:18"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "12318:425:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "12375:3:18",
														"nodeType": "YulTypedName",
														"src": "12375:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12380:6:18",
														"nodeType": "YulTypedName",
														"src": "12380:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12388:3:18",
														"nodeType": "YulTypedName",
														"src": "12388:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "12396:5:18",
														"nodeType": "YulTypedName",
														"src": "12396:5:18",
														"type": ""
													}
												],
												"src": "12318:425:18"
											},
											{
												"body": {
													"nativeSrc": "12825:278:18",
													"nodeType": "YulBlock",
													"src": "12825:278:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "12874:83:18",
																"nodeType": "YulBlock",
																"src": "12874:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "12876:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "12876:77:18"
																			},
																			"nativeSrc": "12876:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "12876:79:18"
																		},
																		"nativeSrc": "12876:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "12876:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "12853:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "12853:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12861:4:18",
																						"nodeType": "YulLiteral",
																						"src": "12861:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12849:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "12849:3:18"
																				},
																				"nativeSrc": "12849:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "12849:17:18"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "12868:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "12868:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "12845:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12845:3:18"
																		},
																		"nativeSrc": "12845:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12845:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12838:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12838:6:18"
																},
																"nativeSrc": "12838:35:18",
																"nodeType": "YulFunctionCall",
																"src": "12838:35:18"
															},
															"nativeSrc": "12835:122:18",
															"nodeType": "YulIf",
															"src": "12835:122:18"
														},
														{
															"nativeSrc": "12966:34:18",
															"nodeType": "YulVariableDeclaration",
															"src": "12966:34:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12993:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12993:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "12980:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "12980:12:18"
																},
																"nativeSrc": "12980:20:18",
																"nodeType": "YulFunctionCall",
																"src": "12980:20:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12970:6:18",
																	"nodeType": "YulTypedName",
																	"src": "12970:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13009:88:18",
															"nodeType": "YulAssignment",
															"src": "13009:88:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13070:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "13070:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13078:4:18",
																				"nodeType": "YulLiteral",
																				"src": "13078:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13066:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13066:3:18"
																		},
																		"nativeSrc": "13066:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13066:17:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13085:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "13085:6:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "13093:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "13093:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "13018:47:18",
																	"nodeType": "YulIdentifier",
																	"src": "13018:47:18"
																},
																"nativeSrc": "13018:79:18",
																"nodeType": "YulFunctionCall",
																"src": "13018:79:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "13009:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "13009:5:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "12763:340:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12803:6:18",
														"nodeType": "YulTypedName",
														"src": "12803:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12811:3:18",
														"nodeType": "YulTypedName",
														"src": "12811:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "12819:5:18",
														"nodeType": "YulTypedName",
														"src": "12819:5:18",
														"type": ""
													}
												],
												"src": "12763:340:18"
											},
											{
												"body": {
													"nativeSrc": "13236:818:18",
													"nodeType": "YulBlock",
													"src": "13236:818:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "13283:83:18",
																"nodeType": "YulBlock",
																"src": "13283:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13285:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "13285:77:18"
																			},
																			"nativeSrc": "13285:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "13285:79:18"
																		},
																		"nativeSrc": "13285:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "13285:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13257:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "13257:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13266:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "13266:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13253:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13253:3:18"
																		},
																		"nativeSrc": "13253:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13253:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13278:3:18",
																		"nodeType": "YulLiteral",
																		"src": "13278:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13249:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13249:3:18"
																},
																"nativeSrc": "13249:33:18",
																"nodeType": "YulFunctionCall",
																"src": "13249:33:18"
															},
															"nativeSrc": "13246:120:18",
															"nodeType": "YulIf",
															"src": "13246:120:18"
														},
														{
															"nativeSrc": "13376:117:18",
															"nodeType": "YulBlock",
															"src": "13376:117:18",
															"statements": [
																{
																	"nativeSrc": "13391:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13391:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13405:1:18",
																		"nodeType": "YulLiteral",
																		"src": "13405:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13395:6:18",
																			"nodeType": "YulTypedName",
																			"src": "13395:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13420:63:18",
																	"nodeType": "YulAssignment",
																	"src": "13420:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13455:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "13455:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13466:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "13466:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13451:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "13451:3:18"
																				},
																				"nativeSrc": "13451:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "13451:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13475:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "13475:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "13430:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "13430:20:18"
																		},
																		"nativeSrc": "13430:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13430:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13420:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "13420:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13503:288:18",
															"nodeType": "YulBlock",
															"src": "13503:288:18",
															"statements": [
																{
																	"nativeSrc": "13518:46:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13518:46:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13549:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "13549:9:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13560:2:18",
																						"nodeType": "YulLiteral",
																						"src": "13560:2:18",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13545:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "13545:3:18"
																				},
																				"nativeSrc": "13545:18:18",
																				"nodeType": "YulFunctionCall",
																				"src": "13545:18:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "13532:12:18",
																			"nodeType": "YulIdentifier",
																			"src": "13532:12:18"
																		},
																		"nativeSrc": "13532:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13532:32:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13522:6:18",
																			"nodeType": "YulTypedName",
																			"src": "13522:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "13611:83:18",
																		"nodeType": "YulBlock",
																		"src": "13611:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "13613:77:18",
																						"nodeType": "YulIdentifier",
																						"src": "13613:77:18"
																					},
																					"nativeSrc": "13613:79:18",
																					"nodeType": "YulFunctionCall",
																					"src": "13613:79:18"
																				},
																				"nativeSrc": "13613:79:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "13613:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13583:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "13583:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13591:18:18",
																				"nodeType": "YulLiteral",
																				"src": "13591:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "13580:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "13580:2:18"
																		},
																		"nativeSrc": "13580:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13580:30:18"
																	},
																	"nativeSrc": "13577:117:18",
																	"nodeType": "YulIf",
																	"src": "13577:117:18"
																},
																{
																	"nativeSrc": "13708:73:18",
																	"nodeType": "YulAssignment",
																	"src": "13708:73:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13753:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "13753:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13764:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "13764:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13749:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "13749:3:18"
																				},
																				"nativeSrc": "13749:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "13749:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13773:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "13773:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "13718:30:18",
																			"nodeType": "YulIdentifier",
																			"src": "13718:30:18"
																		},
																		"nativeSrc": "13718:63:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13718:63:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "13708:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "13708:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13801:118:18",
															"nodeType": "YulBlock",
															"src": "13801:118:18",
															"statements": [
																{
																	"nativeSrc": "13816:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13816:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13830:2:18",
																		"nodeType": "YulLiteral",
																		"src": "13830:2:18",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13820:6:18",
																			"nodeType": "YulTypedName",
																			"src": "13820:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13846:63:18",
																	"nodeType": "YulAssignment",
																	"src": "13846:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13881:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "13881:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13892:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "13892:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13877:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "13877:3:18"
																				},
																				"nativeSrc": "13877:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "13877:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13901:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "13901:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "13856:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "13856:20:18"
																		},
																		"nativeSrc": "13856:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13856:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "13846:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "13846:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13929:118:18",
															"nodeType": "YulBlock",
															"src": "13929:118:18",
															"statements": [
																{
																	"nativeSrc": "13944:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13944:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13958:2:18",
																		"nodeType": "YulLiteral",
																		"src": "13958:2:18",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13948:6:18",
																			"nodeType": "YulTypedName",
																			"src": "13948:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13974:63:18",
																	"nodeType": "YulAssignment",
																	"src": "13974:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14009:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "14009:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14020:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "14020:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14005:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "14005:3:18"
																				},
																				"nativeSrc": "14005:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "14005:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14029:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "14029:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "13984:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "13984:20:18"
																		},
																		"nativeSrc": "13984:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13984:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "13974:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "13974:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptrt_uint256t_uint256",
												"nativeSrc": "13109:945:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13182:9:18",
														"nodeType": "YulTypedName",
														"src": "13182:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13193:7:18",
														"nodeType": "YulTypedName",
														"src": "13193:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13205:6:18",
														"nodeType": "YulTypedName",
														"src": "13205:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13213:6:18",
														"nodeType": "YulTypedName",
														"src": "13213:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13221:6:18",
														"nodeType": "YulTypedName",
														"src": "13221:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "13229:6:18",
														"nodeType": "YulTypedName",
														"src": "13229:6:18",
														"type": ""
													}
												],
												"src": "13109:945:18"
											},
											{
												"body": {
													"nativeSrc": "14143:391:18",
													"nodeType": "YulBlock",
													"src": "14143:391:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "14189:83:18",
																"nodeType": "YulBlock",
																"src": "14189:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14191:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "14191:77:18"
																			},
																			"nativeSrc": "14191:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "14191:79:18"
																		},
																		"nativeSrc": "14191:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "14191:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14164:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "14164:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14173:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "14173:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14160:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14160:3:18"
																		},
																		"nativeSrc": "14160:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14160:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14185:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14185:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14156:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14156:3:18"
																},
																"nativeSrc": "14156:32:18",
																"nodeType": "YulFunctionCall",
																"src": "14156:32:18"
															},
															"nativeSrc": "14153:119:18",
															"nodeType": "YulIf",
															"src": "14153:119:18"
														},
														{
															"nativeSrc": "14282:117:18",
															"nodeType": "YulBlock",
															"src": "14282:117:18",
															"statements": [
																{
																	"nativeSrc": "14297:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14297:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14311:1:18",
																		"nodeType": "YulLiteral",
																		"src": "14311:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14301:6:18",
																			"nodeType": "YulTypedName",
																			"src": "14301:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14326:63:18",
																	"nodeType": "YulAssignment",
																	"src": "14326:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14361:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "14361:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14372:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "14372:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14357:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "14357:3:18"
																				},
																				"nativeSrc": "14357:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "14357:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14381:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "14381:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "14336:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "14336:20:18"
																		},
																		"nativeSrc": "14336:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14336:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14326:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "14326:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14409:118:18",
															"nodeType": "YulBlock",
															"src": "14409:118:18",
															"statements": [
																{
																	"nativeSrc": "14424:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14424:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14438:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14438:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14428:6:18",
																			"nodeType": "YulTypedName",
																			"src": "14428:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14454:63:18",
																	"nodeType": "YulAssignment",
																	"src": "14454:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14489:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "14489:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14500:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "14500:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14485:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "14485:3:18"
																				},
																				"nativeSrc": "14485:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "14485:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14509:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "14509:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "14464:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "14464:20:18"
																		},
																		"nativeSrc": "14464:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14464:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "14454:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "14454:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "14060:474:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14105:9:18",
														"nodeType": "YulTypedName",
														"src": "14105:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14116:7:18",
														"nodeType": "YulTypedName",
														"src": "14116:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14128:6:18",
														"nodeType": "YulTypedName",
														"src": "14128:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14136:6:18",
														"nodeType": "YulTypedName",
														"src": "14136:6:18",
														"type": ""
													}
												],
												"src": "14060:474:18"
											},
											{
												"body": {
													"nativeSrc": "14568:152:18",
													"nodeType": "YulBlock",
													"src": "14568:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14585:1:18",
																		"nodeType": "YulLiteral",
																		"src": "14585:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14588:77:18",
																		"nodeType": "YulLiteral",
																		"src": "14588:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14578:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14578:6:18"
																},
																"nativeSrc": "14578:88:18",
																"nodeType": "YulFunctionCall",
																"src": "14578:88:18"
															},
															"nativeSrc": "14578:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "14578:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14682:1:18",
																		"nodeType": "YulLiteral",
																		"src": "14682:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14685:4:18",
																		"nodeType": "YulLiteral",
																		"src": "14685:4:18",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14675:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14675:6:18"
																},
																"nativeSrc": "14675:15:18",
																"nodeType": "YulFunctionCall",
																"src": "14675:15:18"
															},
															"nativeSrc": "14675:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "14675:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14706:1:18",
																		"nodeType": "YulLiteral",
																		"src": "14706:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14709:4:18",
																		"nodeType": "YulLiteral",
																		"src": "14709:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14699:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14699:6:18"
																},
																"nativeSrc": "14699:15:18",
																"nodeType": "YulFunctionCall",
																"src": "14699:15:18"
															},
															"nativeSrc": "14699:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "14699:15:18"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "14540:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "14540:180:18"
											},
											{
												"body": {
													"nativeSrc": "14777:269:18",
													"nodeType": "YulBlock",
													"src": "14777:269:18",
													"statements": [
														{
															"nativeSrc": "14787:22:18",
															"nodeType": "YulAssignment",
															"src": "14787:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "14801:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "14801:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14807:1:18",
																		"nodeType": "YulLiteral",
																		"src": "14807:1:18",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14797:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14797:3:18"
																},
																"nativeSrc": "14797:12:18",
																"nodeType": "YulFunctionCall",
																"src": "14797:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "14787:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14787:6:18"
																}
															]
														},
														{
															"nativeSrc": "14818:38:18",
															"nodeType": "YulVariableDeclaration",
															"src": "14818:38:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "14848:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "14848:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14854:1:18",
																		"nodeType": "YulLiteral",
																		"src": "14854:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14844:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14844:3:18"
																},
																"nativeSrc": "14844:12:18",
																"nodeType": "YulFunctionCall",
																"src": "14844:12:18"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "14822:18:18",
																	"nodeType": "YulTypedName",
																	"src": "14822:18:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14895:51:18",
																"nodeType": "YulBlock",
																"src": "14895:51:18",
																"statements": [
																	{
																		"nativeSrc": "14909:27:18",
																		"nodeType": "YulAssignment",
																		"src": "14909:27:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "14923:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "14923:6:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14931:4:18",
																					"nodeType": "YulLiteral",
																					"src": "14931:4:18",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "14919:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "14919:3:18"
																			},
																			"nativeSrc": "14919:17:18",
																			"nodeType": "YulFunctionCall",
																			"src": "14919:17:18"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "14909:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "14909:6:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "14875:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "14875:18:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14868:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14868:6:18"
																},
																"nativeSrc": "14868:26:18",
																"nodeType": "YulFunctionCall",
																"src": "14868:26:18"
															},
															"nativeSrc": "14865:81:18",
															"nodeType": "YulIf",
															"src": "14865:81:18"
														},
														{
															"body": {
																"nativeSrc": "14998:42:18",
																"nodeType": "YulBlock",
																"src": "14998:42:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "15012:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "15012:16:18"
																			},
																			"nativeSrc": "15012:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "15012:18:18"
																		},
																		"nativeSrc": "15012:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "15012:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "14962:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "14962:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "14985:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "14985:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14993:2:18",
																				"nodeType": "YulLiteral",
																				"src": "14993:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "14982:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "14982:2:18"
																		},
																		"nativeSrc": "14982:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14982:14:18"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "14959:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "14959:2:18"
																},
																"nativeSrc": "14959:38:18",
																"nodeType": "YulFunctionCall",
																"src": "14959:38:18"
															},
															"nativeSrc": "14956:84:18",
															"nodeType": "YulIf",
															"src": "14956:84:18"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "14726:320:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "14761:4:18",
														"nodeType": "YulTypedName",
														"src": "14761:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "14770:6:18",
														"nodeType": "YulTypedName",
														"src": "14770:6:18",
														"type": ""
													}
												],
												"src": "14726:320:18"
											},
											{
												"body": {
													"nativeSrc": "15206:288:18",
													"nodeType": "YulBlock",
													"src": "15206:288:18",
													"statements": [
														{
															"nativeSrc": "15216:26:18",
															"nodeType": "YulAssignment",
															"src": "15216:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15228:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "15228:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15239:2:18",
																		"nodeType": "YulLiteral",
																		"src": "15239:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15224:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15224:3:18"
																},
																"nativeSrc": "15224:18:18",
																"nodeType": "YulFunctionCall",
																"src": "15224:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15216:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "15216:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15296:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "15296:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15309:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "15309:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15320:1:18",
																				"nodeType": "YulLiteral",
																				"src": "15320:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15305:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15305:3:18"
																		},
																		"nativeSrc": "15305:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15305:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15252:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "15252:43:18"
																},
																"nativeSrc": "15252:71:18",
																"nodeType": "YulFunctionCall",
																"src": "15252:71:18"
															},
															"nativeSrc": "15252:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "15252:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15377:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "15377:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15390:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "15390:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15401:2:18",
																				"nodeType": "YulLiteral",
																				"src": "15401:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15386:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15386:3:18"
																		},
																		"nativeSrc": "15386:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15386:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15333:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "15333:43:18"
																},
																"nativeSrc": "15333:72:18",
																"nodeType": "YulFunctionCall",
																"src": "15333:72:18"
															},
															"nativeSrc": "15333:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "15333:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15459:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "15459:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15472:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "15472:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15483:2:18",
																				"nodeType": "YulLiteral",
																				"src": "15483:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15468:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15468:3:18"
																		},
																		"nativeSrc": "15468:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15468:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15415:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "15415:43:18"
																},
																"nativeSrc": "15415:72:18",
																"nodeType": "YulFunctionCall",
																"src": "15415:72:18"
															},
															"nativeSrc": "15415:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "15415:72:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "15052:442:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15162:9:18",
														"nodeType": "YulTypedName",
														"src": "15162:9:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15174:6:18",
														"nodeType": "YulTypedName",
														"src": "15174:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15182:6:18",
														"nodeType": "YulTypedName",
														"src": "15182:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15190:6:18",
														"nodeType": "YulTypedName",
														"src": "15190:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15201:4:18",
														"nodeType": "YulTypedName",
														"src": "15201:4:18",
														"type": ""
													}
												],
												"src": "15052:442:18"
											},
											{
												"body": {
													"nativeSrc": "15606:63:18",
													"nodeType": "YulBlock",
													"src": "15606:63:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15628:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "15628:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15636:1:18",
																				"nodeType": "YulLiteral",
																				"src": "15636:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15624:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15624:3:18"
																		},
																		"nativeSrc": "15624:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15624:14:18"
																	},
																	{
																		"hexValue": "4e6f204e465420666f72207468697320627573",
																		"kind": "string",
																		"nativeSrc": "15640:21:18",
																		"nodeType": "YulLiteral",
																		"src": "15640:21:18",
																		"type": "",
																		"value": "No NFT for this bus"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15617:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15617:6:18"
																},
																"nativeSrc": "15617:45:18",
																"nodeType": "YulFunctionCall",
																"src": "15617:45:18"
															},
															"nativeSrc": "15617:45:18",
															"nodeType": "YulExpressionStatement",
															"src": "15617:45:18"
														}
													]
												},
												"name": "store_literal_in_memory_7029c135594e6d4877bed3e9ac9287ea76f6c7066dd4013bb12b949a5a7828c1",
												"nativeSrc": "15500:169:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15598:6:18",
														"nodeType": "YulTypedName",
														"src": "15598:6:18",
														"type": ""
													}
												],
												"src": "15500:169:18"
											},
											{
												"body": {
													"nativeSrc": "15821:220:18",
													"nodeType": "YulBlock",
													"src": "15821:220:18",
													"statements": [
														{
															"nativeSrc": "15831:74:18",
															"nodeType": "YulAssignment",
															"src": "15831:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15897:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "15897:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15902:2:18",
																		"nodeType": "YulLiteral",
																		"src": "15902:2:18",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15838:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "15838:58:18"
																},
																"nativeSrc": "15838:67:18",
																"nodeType": "YulFunctionCall",
																"src": "15838:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15831:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15831:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16003:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "16003:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7029c135594e6d4877bed3e9ac9287ea76f6c7066dd4013bb12b949a5a7828c1",
																	"nativeSrc": "15914:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "15914:88:18"
																},
																"nativeSrc": "15914:93:18",
																"nodeType": "YulFunctionCall",
																"src": "15914:93:18"
															},
															"nativeSrc": "15914:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "15914:93:18"
														},
														{
															"nativeSrc": "16016:19:18",
															"nodeType": "YulAssignment",
															"src": "16016:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16027:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "16027:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16032:2:18",
																		"nodeType": "YulLiteral",
																		"src": "16032:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16023:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "16023:3:18"
																},
																"nativeSrc": "16023:12:18",
																"nodeType": "YulFunctionCall",
																"src": "16023:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16016:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "16016:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7029c135594e6d4877bed3e9ac9287ea76f6c7066dd4013bb12b949a5a7828c1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15675:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15809:3:18",
														"nodeType": "YulTypedName",
														"src": "15809:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15817:3:18",
														"nodeType": "YulTypedName",
														"src": "15817:3:18",
														"type": ""
													}
												],
												"src": "15675:366:18"
											},
											{
												"body": {
													"nativeSrc": "16218:248:18",
													"nodeType": "YulBlock",
													"src": "16218:248:18",
													"statements": [
														{
															"nativeSrc": "16228:26:18",
															"nodeType": "YulAssignment",
															"src": "16228:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16240:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "16240:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16251:2:18",
																		"nodeType": "YulLiteral",
																		"src": "16251:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16236:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "16236:3:18"
																},
																"nativeSrc": "16236:18:18",
																"nodeType": "YulFunctionCall",
																"src": "16236:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16228:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "16228:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16275:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "16275:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16286:1:18",
																				"nodeType": "YulLiteral",
																				"src": "16286:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16271:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "16271:3:18"
																		},
																		"nativeSrc": "16271:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16271:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16294:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "16294:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16300:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "16300:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16290:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "16290:3:18"
																		},
																		"nativeSrc": "16290:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16290:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16264:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "16264:6:18"
																},
																"nativeSrc": "16264:47:18",
																"nodeType": "YulFunctionCall",
																"src": "16264:47:18"
															},
															"nativeSrc": "16264:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "16264:47:18"
														},
														{
															"nativeSrc": "16320:139:18",
															"nodeType": "YulAssignment",
															"src": "16320:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16454:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "16454:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7029c135594e6d4877bed3e9ac9287ea76f6c7066dd4013bb12b949a5a7828c1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16328:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "16328:124:18"
																},
																"nativeSrc": "16328:131:18",
																"nodeType": "YulFunctionCall",
																"src": "16328:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16320:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "16320:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7029c135594e6d4877bed3e9ac9287ea76f6c7066dd4013bb12b949a5a7828c1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16047:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16198:9:18",
														"nodeType": "YulTypedName",
														"src": "16198:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16213:4:18",
														"nodeType": "YulTypedName",
														"src": "16213:4:18",
														"type": ""
													}
												],
												"src": "16047:419:18"
											},
											{
												"body": {
													"nativeSrc": "16586:34:18",
													"nodeType": "YulBlock",
													"src": "16586:34:18",
													"statements": [
														{
															"nativeSrc": "16596:18:18",
															"nodeType": "YulAssignment",
															"src": "16596:18:18",
															"value": {
																"name": "pos",
																"nativeSrc": "16611:3:18",
																"nodeType": "YulIdentifier",
																"src": "16611:3:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "16596:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "16596:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "16472:148:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16558:3:18",
														"nodeType": "YulTypedName",
														"src": "16558:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "16563:6:18",
														"nodeType": "YulTypedName",
														"src": "16563:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "16574:11:18",
														"nodeType": "YulTypedName",
														"src": "16574:11:18",
														"type": ""
													}
												],
												"src": "16472:148:18"
											},
											{
												"body": {
													"nativeSrc": "16736:280:18",
													"nodeType": "YulBlock",
													"src": "16736:280:18",
													"statements": [
														{
															"nativeSrc": "16746:53:18",
															"nodeType": "YulVariableDeclaration",
															"src": "16746:53:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16793:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "16793:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "16760:32:18",
																	"nodeType": "YulIdentifier",
																	"src": "16760:32:18"
																},
																"nativeSrc": "16760:39:18",
																"nodeType": "YulFunctionCall",
																"src": "16760:39:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "16750:6:18",
																	"nodeType": "YulTypedName",
																	"src": "16750:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16808:96:18",
															"nodeType": "YulAssignment",
															"src": "16808:96:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16892:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "16892:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16897:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "16897:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16815:76:18",
																	"nodeType": "YulIdentifier",
																	"src": "16815:76:18"
																},
																"nativeSrc": "16815:89:18",
																"nodeType": "YulFunctionCall",
																"src": "16815:89:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16808:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "16808:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16952:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "16952:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16959:4:18",
																				"nodeType": "YulLiteral",
																				"src": "16959:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16948:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "16948:3:18"
																		},
																		"nativeSrc": "16948:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16948:16:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16966:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "16966:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16971:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "16971:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "16913:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "16913:34:18"
																},
																"nativeSrc": "16913:65:18",
																"nodeType": "YulFunctionCall",
																"src": "16913:65:18"
															},
															"nativeSrc": "16913:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "16913:65:18"
														},
														{
															"nativeSrc": "16987:23:18",
															"nodeType": "YulAssignment",
															"src": "16987:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16998:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "16998:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "17003:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "17003:6:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16994:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "16994:3:18"
																},
																"nativeSrc": "16994:16:18",
																"nodeType": "YulFunctionCall",
																"src": "16994:16:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16987:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "16987:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "16626:390:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16717:5:18",
														"nodeType": "YulTypedName",
														"src": "16717:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16724:3:18",
														"nodeType": "YulTypedName",
														"src": "16724:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16732:3:18",
														"nodeType": "YulTypedName",
														"src": "16732:3:18",
														"type": ""
													}
												],
												"src": "16626:390:18"
											},
											{
												"body": {
													"nativeSrc": "17206:251:18",
													"nodeType": "YulBlock",
													"src": "17206:251:18",
													"statements": [
														{
															"nativeSrc": "17217:102:18",
															"nodeType": "YulAssignment",
															"src": "17217:102:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17306:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "17306:6:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "17315:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "17315:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "17224:81:18",
																	"nodeType": "YulIdentifier",
																	"src": "17224:81:18"
																},
																"nativeSrc": "17224:95:18",
																"nodeType": "YulFunctionCall",
																"src": "17224:95:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17217:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "17217:3:18"
																}
															]
														},
														{
															"nativeSrc": "17329:102:18",
															"nodeType": "YulAssignment",
															"src": "17329:102:18",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17418:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "17418:6:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "17427:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "17427:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "17336:81:18",
																	"nodeType": "YulIdentifier",
																	"src": "17336:81:18"
																},
																"nativeSrc": "17336:95:18",
																"nodeType": "YulFunctionCall",
																"src": "17336:95:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17329:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "17329:3:18"
																}
															]
														},
														{
															"nativeSrc": "17441:10:18",
															"nodeType": "YulAssignment",
															"src": "17441:10:18",
															"value": {
																"name": "pos",
																"nativeSrc": "17448:3:18",
																"nodeType": "YulIdentifier",
																"src": "17448:3:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17441:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "17441:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "17022:435:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17177:3:18",
														"nodeType": "YulTypedName",
														"src": "17177:3:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17183:6:18",
														"nodeType": "YulTypedName",
														"src": "17183:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17191:6:18",
														"nodeType": "YulTypedName",
														"src": "17191:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17202:3:18",
														"nodeType": "YulTypedName",
														"src": "17202:3:18",
														"type": ""
													}
												],
												"src": "17022:435:18"
											},
											{
												"body": {
													"nativeSrc": "17523:77:18",
													"nodeType": "YulBlock",
													"src": "17523:77:18",
													"statements": [
														{
															"nativeSrc": "17533:22:18",
															"nodeType": "YulAssignment",
															"src": "17533:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "17548:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "17548:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17542:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "17542:5:18"
																},
																"nativeSrc": "17542:13:18",
																"nodeType": "YulFunctionCall",
																"src": "17542:13:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17533:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "17533:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17588:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "17588:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "17564:23:18",
																	"nodeType": "YulIdentifier",
																	"src": "17564:23:18"
																},
																"nativeSrc": "17564:30:18",
																"nodeType": "YulFunctionCall",
																"src": "17564:30:18"
															},
															"nativeSrc": "17564:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "17564:30:18"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "17463:137:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "17501:6:18",
														"nodeType": "YulTypedName",
														"src": "17501:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "17509:3:18",
														"nodeType": "YulTypedName",
														"src": "17509:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "17517:5:18",
														"nodeType": "YulTypedName",
														"src": "17517:5:18",
														"type": ""
													}
												],
												"src": "17463:137:18"
											},
											{
												"body": {
													"nativeSrc": "17680:271:18",
													"nodeType": "YulBlock",
													"src": "17680:271:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "17726:83:18",
																"nodeType": "YulBlock",
																"src": "17726:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17728:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "17728:77:18"
																			},
																			"nativeSrc": "17728:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "17728:79:18"
																		},
																		"nativeSrc": "17728:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "17728:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17701:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "17701:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17710:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "17710:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17697:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "17697:3:18"
																		},
																		"nativeSrc": "17697:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "17697:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17722:2:18",
																		"nodeType": "YulLiteral",
																		"src": "17722:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17693:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "17693:3:18"
																},
																"nativeSrc": "17693:32:18",
																"nodeType": "YulFunctionCall",
																"src": "17693:32:18"
															},
															"nativeSrc": "17690:119:18",
															"nodeType": "YulIf",
															"src": "17690:119:18"
														},
														{
															"nativeSrc": "17819:125:18",
															"nodeType": "YulBlock",
															"src": "17819:125:18",
															"statements": [
																{
																	"nativeSrc": "17834:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17834:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17848:1:18",
																		"nodeType": "YulLiteral",
																		"src": "17848:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17838:6:18",
																			"nodeType": "YulTypedName",
																			"src": "17838:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17863:71:18",
																	"nodeType": "YulAssignment",
																	"src": "17863:71:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17906:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "17906:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17917:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "17917:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17902:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "17902:3:18"
																				},
																				"nativeSrc": "17902:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "17902:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17926:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "17926:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "17873:28:18",
																			"nodeType": "YulIdentifier",
																			"src": "17873:28:18"
																		},
																		"nativeSrc": "17873:61:18",
																		"nodeType": "YulFunctionCall",
																		"src": "17873:61:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17863:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "17863:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "17606:345:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17650:9:18",
														"nodeType": "YulTypedName",
														"src": "17650:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17661:7:18",
														"nodeType": "YulTypedName",
														"src": "17661:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17673:6:18",
														"nodeType": "YulTypedName",
														"src": "17673:6:18",
														"type": ""
													}
												],
												"src": "17606:345:18"
											},
											{
												"body": {
													"nativeSrc": "18063:120:18",
													"nodeType": "YulBlock",
													"src": "18063:120:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18085:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "18085:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18093:1:18",
																				"nodeType": "YulLiteral",
																				"src": "18093:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18081:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "18081:3:18"
																		},
																		"nativeSrc": "18081:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "18081:14:18"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f7420616e20617574686f72697a656420676f7665",
																		"kind": "string",
																		"nativeSrc": "18097:34:18",
																		"nodeType": "YulLiteral",
																		"src": "18097:34:18",
																		"type": "",
																		"value": "Caller is not an authorized gove"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18074:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "18074:6:18"
																},
																"nativeSrc": "18074:58:18",
																"nodeType": "YulFunctionCall",
																"src": "18074:58:18"
															},
															"nativeSrc": "18074:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "18074:58:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18153:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "18153:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18161:2:18",
																				"nodeType": "YulLiteral",
																				"src": "18161:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18149:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "18149:3:18"
																		},
																		"nativeSrc": "18149:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "18149:15:18"
																	},
																	{
																		"hexValue": "726e6d656e742e",
																		"kind": "string",
																		"nativeSrc": "18166:9:18",
																		"nodeType": "YulLiteral",
																		"src": "18166:9:18",
																		"type": "",
																		"value": "rnment."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18142:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "18142:6:18"
																},
																"nativeSrc": "18142:34:18",
																"nodeType": "YulFunctionCall",
																"src": "18142:34:18"
															},
															"nativeSrc": "18142:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "18142:34:18"
														}
													]
												},
												"name": "store_literal_in_memory_16fc7e8bb1c4f22d3779cd41535c2f1b4f2be4694fd48d7116d0ac20c4362548",
												"nativeSrc": "17957:226:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18055:6:18",
														"nodeType": "YulTypedName",
														"src": "18055:6:18",
														"type": ""
													}
												],
												"src": "17957:226:18"
											},
											{
												"body": {
													"nativeSrc": "18335:220:18",
													"nodeType": "YulBlock",
													"src": "18335:220:18",
													"statements": [
														{
															"nativeSrc": "18345:74:18",
															"nodeType": "YulAssignment",
															"src": "18345:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18411:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "18411:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18416:2:18",
																		"nodeType": "YulLiteral",
																		"src": "18416:2:18",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18352:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "18352:58:18"
																},
																"nativeSrc": "18352:67:18",
																"nodeType": "YulFunctionCall",
																"src": "18352:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18345:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "18345:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18517:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "18517:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_16fc7e8bb1c4f22d3779cd41535c2f1b4f2be4694fd48d7116d0ac20c4362548",
																	"nativeSrc": "18428:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "18428:88:18"
																},
																"nativeSrc": "18428:93:18",
																"nodeType": "YulFunctionCall",
																"src": "18428:93:18"
															},
															"nativeSrc": "18428:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "18428:93:18"
														},
														{
															"nativeSrc": "18530:19:18",
															"nodeType": "YulAssignment",
															"src": "18530:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18541:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "18541:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18546:2:18",
																		"nodeType": "YulLiteral",
																		"src": "18546:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18537:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "18537:3:18"
																},
																"nativeSrc": "18537:12:18",
																"nodeType": "YulFunctionCall",
																"src": "18537:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18530:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "18530:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_16fc7e8bb1c4f22d3779cd41535c2f1b4f2be4694fd48d7116d0ac20c4362548_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18189:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18323:3:18",
														"nodeType": "YulTypedName",
														"src": "18323:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18331:3:18",
														"nodeType": "YulTypedName",
														"src": "18331:3:18",
														"type": ""
													}
												],
												"src": "18189:366:18"
											},
											{
												"body": {
													"nativeSrc": "18732:248:18",
													"nodeType": "YulBlock",
													"src": "18732:248:18",
													"statements": [
														{
															"nativeSrc": "18742:26:18",
															"nodeType": "YulAssignment",
															"src": "18742:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18754:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "18754:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18765:2:18",
																		"nodeType": "YulLiteral",
																		"src": "18765:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18750:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "18750:3:18"
																},
																"nativeSrc": "18750:18:18",
																"nodeType": "YulFunctionCall",
																"src": "18750:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18742:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "18742:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18789:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "18789:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18800:1:18",
																				"nodeType": "YulLiteral",
																				"src": "18800:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18785:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "18785:3:18"
																		},
																		"nativeSrc": "18785:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "18785:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18808:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "18808:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18814:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "18814:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18804:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "18804:3:18"
																		},
																		"nativeSrc": "18804:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "18804:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18778:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "18778:6:18"
																},
																"nativeSrc": "18778:47:18",
																"nodeType": "YulFunctionCall",
																"src": "18778:47:18"
															},
															"nativeSrc": "18778:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "18778:47:18"
														},
														{
															"nativeSrc": "18834:139:18",
															"nodeType": "YulAssignment",
															"src": "18834:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18968:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "18968:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_16fc7e8bb1c4f22d3779cd41535c2f1b4f2be4694fd48d7116d0ac20c4362548_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18842:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "18842:124:18"
																},
																"nativeSrc": "18842:131:18",
																"nodeType": "YulFunctionCall",
																"src": "18842:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18834:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "18834:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_16fc7e8bb1c4f22d3779cd41535c2f1b4f2be4694fd48d7116d0ac20c4362548__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18561:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18712:9:18",
														"nodeType": "YulTypedName",
														"src": "18712:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18727:4:18",
														"nodeType": "YulTypedName",
														"src": "18727:4:18",
														"type": ""
													}
												],
												"src": "18561:419:18"
											},
											{
												"body": {
													"nativeSrc": "19044:40:18",
													"nodeType": "YulBlock",
													"src": "19044:40:18",
													"statements": [
														{
															"nativeSrc": "19055:22:18",
															"nodeType": "YulAssignment",
															"src": "19055:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19071:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "19071:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "19065:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "19065:5:18"
																},
																"nativeSrc": "19065:12:18",
																"nodeType": "YulFunctionCall",
																"src": "19065:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "19055:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "19055:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "18986:98:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19027:5:18",
														"nodeType": "YulTypedName",
														"src": "19027:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "19037:6:18",
														"nodeType": "YulTypedName",
														"src": "19037:6:18",
														"type": ""
													}
												],
												"src": "18986:98:18"
											},
											{
												"body": {
													"nativeSrc": "19185:73:18",
													"nodeType": "YulBlock",
													"src": "19185:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19202:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "19202:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19207:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "19207:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19195:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "19195:6:18"
																},
																"nativeSrc": "19195:19:18",
																"nodeType": "YulFunctionCall",
																"src": "19195:19:18"
															},
															"nativeSrc": "19195:19:18",
															"nodeType": "YulExpressionStatement",
															"src": "19195:19:18"
														},
														{
															"nativeSrc": "19223:29:18",
															"nodeType": "YulAssignment",
															"src": "19223:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19242:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "19242:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19247:4:18",
																		"nodeType": "YulLiteral",
																		"src": "19247:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19238:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "19238:3:18"
																},
																"nativeSrc": "19238:14:18",
																"nodeType": "YulFunctionCall",
																"src": "19238:14:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "19223:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "19223:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "19090:168:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19157:3:18",
														"nodeType": "YulTypedName",
														"src": "19157:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "19162:6:18",
														"nodeType": "YulTypedName",
														"src": "19162:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "19173:11:18",
														"nodeType": "YulTypedName",
														"src": "19173:11:18",
														"type": ""
													}
												],
												"src": "19090:168:18"
											},
											{
												"body": {
													"nativeSrc": "19354:283:18",
													"nodeType": "YulBlock",
													"src": "19354:283:18",
													"statements": [
														{
															"nativeSrc": "19364:52:18",
															"nodeType": "YulVariableDeclaration",
															"src": "19364:52:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19410:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "19410:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "19378:31:18",
																	"nodeType": "YulIdentifier",
																	"src": "19378:31:18"
																},
																"nativeSrc": "19378:38:18",
																"nodeType": "YulFunctionCall",
																"src": "19378:38:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "19368:6:18",
																	"nodeType": "YulTypedName",
																	"src": "19368:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19425:77:18",
															"nodeType": "YulAssignment",
															"src": "19425:77:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19490:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "19490:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19495:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "19495:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "19432:57:18",
																	"nodeType": "YulIdentifier",
																	"src": "19432:57:18"
																},
																"nativeSrc": "19432:70:18",
																"nodeType": "YulFunctionCall",
																"src": "19432:70:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19425:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "19425:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19550:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "19550:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19557:4:18",
																				"nodeType": "YulLiteral",
																				"src": "19557:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19546:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "19546:3:18"
																		},
																		"nativeSrc": "19546:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "19546:16:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19564:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "19564:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19569:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "19569:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "19511:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "19511:34:18"
																},
																"nativeSrc": "19511:65:18",
																"nodeType": "YulFunctionCall",
																"src": "19511:65:18"
															},
															"nativeSrc": "19511:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "19511:65:18"
														},
														{
															"nativeSrc": "19585:46:18",
															"nodeType": "YulAssignment",
															"src": "19585:46:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19596:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "19596:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "19623:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "19623:6:18"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "19601:21:18",
																			"nodeType": "YulIdentifier",
																			"src": "19601:21:18"
																		},
																		"nativeSrc": "19601:29:18",
																		"nodeType": "YulFunctionCall",
																		"src": "19601:29:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19592:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "19592:3:18"
																},
																"nativeSrc": "19592:39:18",
																"nodeType": "YulFunctionCall",
																"src": "19592:39:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19585:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "19585:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "19264:373:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19335:5:18",
														"nodeType": "YulTypedName",
														"src": "19335:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "19342:3:18",
														"nodeType": "YulTypedName",
														"src": "19342:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19350:3:18",
														"nodeType": "YulTypedName",
														"src": "19350:3:18",
														"type": ""
													}
												],
												"src": "19264:373:18"
											},
											{
												"body": {
													"nativeSrc": "19843:440:18",
													"nodeType": "YulBlock",
													"src": "19843:440:18",
													"statements": [
														{
															"nativeSrc": "19853:27:18",
															"nodeType": "YulAssignment",
															"src": "19853:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19865:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "19865:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19876:3:18",
																		"nodeType": "YulLiteral",
																		"src": "19876:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19861:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "19861:3:18"
																},
																"nativeSrc": "19861:19:18",
																"nodeType": "YulFunctionCall",
																"src": "19861:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19853:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "19853:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19934:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "19934:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19947:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "19947:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19958:1:18",
																				"nodeType": "YulLiteral",
																				"src": "19958:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19943:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "19943:3:18"
																		},
																		"nativeSrc": "19943:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "19943:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19890:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "19890:43:18"
																},
																"nativeSrc": "19890:71:18",
																"nodeType": "YulFunctionCall",
																"src": "19890:71:18"
															},
															"nativeSrc": "19890:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "19890:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20015:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "20015:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20028:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "20028:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20039:2:18",
																				"nodeType": "YulLiteral",
																				"src": "20039:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20024:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "20024:3:18"
																		},
																		"nativeSrc": "20024:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "20024:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19971:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "19971:43:18"
																},
																"nativeSrc": "19971:72:18",
																"nodeType": "YulFunctionCall",
																"src": "19971:72:18"
															},
															"nativeSrc": "19971:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "19971:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20097:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "20097:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20110:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "20110:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20121:2:18",
																				"nodeType": "YulLiteral",
																				"src": "20121:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20106:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "20106:3:18"
																		},
																		"nativeSrc": "20106:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "20106:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20053:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "20053:43:18"
																},
																"nativeSrc": "20053:72:18",
																"nodeType": "YulFunctionCall",
																"src": "20053:72:18"
															},
															"nativeSrc": "20053:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "20053:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20146:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "20146:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20157:2:18",
																				"nodeType": "YulLiteral",
																				"src": "20157:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20142:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "20142:3:18"
																		},
																		"nativeSrc": "20142:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "20142:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20166:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "20166:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20172:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "20172:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20162:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "20162:3:18"
																		},
																		"nativeSrc": "20162:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "20162:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20135:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "20135:6:18"
																},
																"nativeSrc": "20135:48:18",
																"nodeType": "YulFunctionCall",
																"src": "20135:48:18"
															},
															"nativeSrc": "20135:48:18",
															"nodeType": "YulExpressionStatement",
															"src": "20135:48:18"
														},
														{
															"nativeSrc": "20192:84:18",
															"nodeType": "YulAssignment",
															"src": "20192:84:18",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "20262:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "20262:6:18"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "20271:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "20271:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "20200:61:18",
																	"nodeType": "YulIdentifier",
																	"src": "20200:61:18"
																},
																"nativeSrc": "20200:76:18",
																"nodeType": "YulFunctionCall",
																"src": "20200:76:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20192:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "20192:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "19643:640:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19791:9:18",
														"nodeType": "YulTypedName",
														"src": "19791:9:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "19803:6:18",
														"nodeType": "YulTypedName",
														"src": "19803:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19811:6:18",
														"nodeType": "YulTypedName",
														"src": "19811:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19819:6:18",
														"nodeType": "YulTypedName",
														"src": "19819:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19827:6:18",
														"nodeType": "YulTypedName",
														"src": "19827:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19838:4:18",
														"nodeType": "YulTypedName",
														"src": "19838:4:18",
														"type": ""
													}
												],
												"src": "19643:640:18"
											},
											{
												"body": {
													"nativeSrc": "20351:79:18",
													"nodeType": "YulBlock",
													"src": "20351:79:18",
													"statements": [
														{
															"nativeSrc": "20361:22:18",
															"nodeType": "YulAssignment",
															"src": "20361:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "20376:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "20376:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "20370:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "20370:5:18"
																},
																"nativeSrc": "20370:13:18",
																"nodeType": "YulFunctionCall",
																"src": "20370:13:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "20361:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "20361:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20418:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "20418:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "20392:25:18",
																	"nodeType": "YulIdentifier",
																	"src": "20392:25:18"
																},
																"nativeSrc": "20392:32:18",
																"nodeType": "YulFunctionCall",
																"src": "20392:32:18"
															},
															"nativeSrc": "20392:32:18",
															"nodeType": "YulExpressionStatement",
															"src": "20392:32:18"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "20289:141:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "20329:6:18",
														"nodeType": "YulTypedName",
														"src": "20329:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "20337:3:18",
														"nodeType": "YulTypedName",
														"src": "20337:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "20345:5:18",
														"nodeType": "YulTypedName",
														"src": "20345:5:18",
														"type": ""
													}
												],
												"src": "20289:141:18"
											},
											{
												"body": {
													"nativeSrc": "20512:273:18",
													"nodeType": "YulBlock",
													"src": "20512:273:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "20558:83:18",
																"nodeType": "YulBlock",
																"src": "20558:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "20560:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "20560:77:18"
																			},
																			"nativeSrc": "20560:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "20560:79:18"
																		},
																		"nativeSrc": "20560:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "20560:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20533:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "20533:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20542:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "20542:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20529:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "20529:3:18"
																		},
																		"nativeSrc": "20529:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "20529:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20554:2:18",
																		"nodeType": "YulLiteral",
																		"src": "20554:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "20525:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20525:3:18"
																},
																"nativeSrc": "20525:32:18",
																"nodeType": "YulFunctionCall",
																"src": "20525:32:18"
															},
															"nativeSrc": "20522:119:18",
															"nodeType": "YulIf",
															"src": "20522:119:18"
														},
														{
															"nativeSrc": "20651:127:18",
															"nodeType": "YulBlock",
															"src": "20651:127:18",
															"statements": [
																{
																	"nativeSrc": "20666:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20666:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20680:1:18",
																		"nodeType": "YulLiteral",
																		"src": "20680:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20670:6:18",
																			"nodeType": "YulTypedName",
																			"src": "20670:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "20695:73:18",
																	"nodeType": "YulAssignment",
																	"src": "20695:73:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20740:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "20740:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20751:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "20751:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20736:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "20736:3:18"
																				},
																				"nativeSrc": "20736:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "20736:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20760:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "20760:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "20705:30:18",
																			"nodeType": "YulIdentifier",
																			"src": "20705:30:18"
																		},
																		"nativeSrc": "20705:63:18",
																		"nodeType": "YulFunctionCall",
																		"src": "20705:63:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "20695:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "20695:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "20436:349:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20482:9:18",
														"nodeType": "YulTypedName",
														"src": "20482:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "20493:7:18",
														"nodeType": "YulTypedName",
														"src": "20493:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "20505:6:18",
														"nodeType": "YulTypedName",
														"src": "20505:6:18",
														"type": ""
													}
												],
												"src": "20436:349:18"
											},
											{
												"body": {
													"nativeSrc": "20845:87:18",
													"nodeType": "YulBlock",
													"src": "20845:87:18",
													"statements": [
														{
															"nativeSrc": "20855:11:18",
															"nodeType": "YulAssignment",
															"src": "20855:11:18",
															"value": {
																"name": "ptr",
																"nativeSrc": "20863:3:18",
																"nodeType": "YulIdentifier",
																"src": "20863:3:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "20855:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "20855:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20883:1:18",
																		"nodeType": "YulLiteral",
																		"src": "20883:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "20886:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "20886:3:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20876:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "20876:6:18"
																},
																"nativeSrc": "20876:14:18",
																"nodeType": "YulFunctionCall",
																"src": "20876:14:18"
															},
															"nativeSrc": "20876:14:18",
															"nodeType": "YulExpressionStatement",
															"src": "20876:14:18"
														},
														{
															"nativeSrc": "20899:26:18",
															"nodeType": "YulAssignment",
															"src": "20899:26:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20917:1:18",
																		"nodeType": "YulLiteral",
																		"src": "20917:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20920:4:18",
																		"nodeType": "YulLiteral",
																		"src": "20920:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "20907:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "20907:9:18"
																},
																"nativeSrc": "20907:18:18",
																"nodeType": "YulFunctionCall",
																"src": "20907:18:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "20899:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "20899:4:18"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "20791:141:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "20832:3:18",
														"nodeType": "YulTypedName",
														"src": "20832:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "20840:4:18",
														"nodeType": "YulTypedName",
														"src": "20840:4:18",
														"type": ""
													}
												],
												"src": "20791:141:18"
											},
											{
												"body": {
													"nativeSrc": "20982:49:18",
													"nodeType": "YulBlock",
													"src": "20982:49:18",
													"statements": [
														{
															"nativeSrc": "20992:33:18",
															"nodeType": "YulAssignment",
															"src": "20992:33:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21010:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "21010:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21017:2:18",
																				"nodeType": "YulLiteral",
																				"src": "21017:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21006:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "21006:3:18"
																		},
																		"nativeSrc": "21006:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "21006:14:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21022:2:18",
																		"nodeType": "YulLiteral",
																		"src": "21022:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "21002:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "21002:3:18"
																},
																"nativeSrc": "21002:23:18",
																"nodeType": "YulFunctionCall",
																"src": "21002:23:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "20992:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "20992:6:18"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "20938:93:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20965:5:18",
														"nodeType": "YulTypedName",
														"src": "20965:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "20975:6:18",
														"nodeType": "YulTypedName",
														"src": "20975:6:18",
														"type": ""
													}
												],
												"src": "20938:93:18"
											},
											{
												"body": {
													"nativeSrc": "21090:54:18",
													"nodeType": "YulBlock",
													"src": "21090:54:18",
													"statements": [
														{
															"nativeSrc": "21100:37:18",
															"nodeType": "YulAssignment",
															"src": "21100:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "21125:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "21125:4:18"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "21131:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "21131:5:18"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "21121:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "21121:3:18"
																},
																"nativeSrc": "21121:16:18",
																"nodeType": "YulFunctionCall",
																"src": "21121:16:18"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "21100:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "21100:8:18"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "21037:107:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "21065:4:18",
														"nodeType": "YulTypedName",
														"src": "21065:4:18",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "21071:5:18",
														"nodeType": "YulTypedName",
														"src": "21071:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "21081:8:18",
														"nodeType": "YulTypedName",
														"src": "21081:8:18",
														"type": ""
													}
												],
												"src": "21037:107:18"
											},
											{
												"body": {
													"nativeSrc": "21226:317:18",
													"nodeType": "YulBlock",
													"src": "21226:317:18",
													"statements": [
														{
															"nativeSrc": "21236:35:18",
															"nodeType": "YulVariableDeclaration",
															"src": "21236:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "21257:10:18",
																		"nodeType": "YulIdentifier",
																		"src": "21257:10:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21269:1:18",
																		"nodeType": "YulLiteral",
																		"src": "21269:1:18",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "21253:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "21253:3:18"
																},
																"nativeSrc": "21253:18:18",
																"nodeType": "YulFunctionCall",
																"src": "21253:18:18"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "21240:9:18",
																	"nodeType": "YulTypedName",
																	"src": "21240:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21280:109:18",
															"nodeType": "YulVariableDeclaration",
															"src": "21280:109:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "21311:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "21311:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21322:66:18",
																		"nodeType": "YulLiteral",
																		"src": "21322:66:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "21292:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "21292:18:18"
																},
																"nativeSrc": "21292:97:18",
																"nodeType": "YulFunctionCall",
																"src": "21292:97:18"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "21284:4:18",
																	"nodeType": "YulTypedName",
																	"src": "21284:4:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21398:51:18",
															"nodeType": "YulAssignment",
															"src": "21398:51:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "21429:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "21429:9:18"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "21440:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "21440:8:18"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "21410:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "21410:18:18"
																},
																"nativeSrc": "21410:39:18",
																"nodeType": "YulFunctionCall",
																"src": "21410:39:18"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "21398:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "21398:8:18"
																}
															]
														},
														{
															"nativeSrc": "21458:30:18",
															"nodeType": "YulAssignment",
															"src": "21458:30:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21471:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "21471:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "21482:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "21482:4:18"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "21478:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "21478:3:18"
																		},
																		"nativeSrc": "21478:9:18",
																		"nodeType": "YulFunctionCall",
																		"src": "21478:9:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "21467:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "21467:3:18"
																},
																"nativeSrc": "21467:21:18",
																"nodeType": "YulFunctionCall",
																"src": "21467:21:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "21458:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "21458:5:18"
																}
															]
														},
														{
															"nativeSrc": "21497:40:18",
															"nodeType": "YulAssignment",
															"src": "21497:40:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21510:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "21510:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "21521:8:18",
																				"nodeType": "YulIdentifier",
																				"src": "21521:8:18"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "21531:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "21531:4:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "21517:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "21517:3:18"
																		},
																		"nativeSrc": "21517:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "21517:19:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "21507:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "21507:2:18"
																},
																"nativeSrc": "21507:30:18",
																"nodeType": "YulFunctionCall",
																"src": "21507:30:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "21497:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "21497:6:18"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "21150:393:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21187:5:18",
														"nodeType": "YulTypedName",
														"src": "21187:5:18",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "21194:10:18",
														"nodeType": "YulTypedName",
														"src": "21194:10:18",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "21206:8:18",
														"nodeType": "YulTypedName",
														"src": "21206:8:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "21219:6:18",
														"nodeType": "YulTypedName",
														"src": "21219:6:18",
														"type": ""
													}
												],
												"src": "21150:393:18"
											},
											{
												"body": {
													"nativeSrc": "21581:28:18",
													"nodeType": "YulBlock",
													"src": "21581:28:18",
													"statements": [
														{
															"nativeSrc": "21591:12:18",
															"nodeType": "YulAssignment",
															"src": "21591:12:18",
															"value": {
																"name": "value",
																"nativeSrc": "21598:5:18",
																"nodeType": "YulIdentifier",
																"src": "21598:5:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "21591:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "21591:3:18"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "21549:60:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21567:5:18",
														"nodeType": "YulTypedName",
														"src": "21567:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "21577:3:18",
														"nodeType": "YulTypedName",
														"src": "21577:3:18",
														"type": ""
													}
												],
												"src": "21549:60:18"
											},
											{
												"body": {
													"nativeSrc": "21675:82:18",
													"nodeType": "YulBlock",
													"src": "21675:82:18",
													"statements": [
														{
															"nativeSrc": "21685:66:18",
															"nodeType": "YulAssignment",
															"src": "21685:66:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "21743:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "21743:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "21725:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "21725:17:18"
																				},
																				"nativeSrc": "21725:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "21725:24:18"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "21716:8:18",
																			"nodeType": "YulIdentifier",
																			"src": "21716:8:18"
																		},
																		"nativeSrc": "21716:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "21716:34:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21698:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "21698:17:18"
																},
																"nativeSrc": "21698:53:18",
																"nodeType": "YulFunctionCall",
																"src": "21698:53:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "21685:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "21685:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "21615:142:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21655:5:18",
														"nodeType": "YulTypedName",
														"src": "21655:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "21665:9:18",
														"nodeType": "YulTypedName",
														"src": "21665:9:18",
														"type": ""
													}
												],
												"src": "21615:142:18"
											},
											{
												"body": {
													"nativeSrc": "21810:28:18",
													"nodeType": "YulBlock",
													"src": "21810:28:18",
													"statements": [
														{
															"nativeSrc": "21820:12:18",
															"nodeType": "YulAssignment",
															"src": "21820:12:18",
															"value": {
																"name": "value",
																"nativeSrc": "21827:5:18",
																"nodeType": "YulIdentifier",
																"src": "21827:5:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "21820:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "21820:3:18"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "21763:75:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21796:5:18",
														"nodeType": "YulTypedName",
														"src": "21796:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "21806:3:18",
														"nodeType": "YulTypedName",
														"src": "21806:3:18",
														"type": ""
													}
												],
												"src": "21763:75:18"
											},
											{
												"body": {
													"nativeSrc": "21920:193:18",
													"nodeType": "YulBlock",
													"src": "21920:193:18",
													"statements": [
														{
															"nativeSrc": "21930:63:18",
															"nodeType": "YulVariableDeclaration",
															"src": "21930:63:18",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "21985:7:18",
																		"nodeType": "YulIdentifier",
																		"src": "21985:7:18"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "21954:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "21954:30:18"
																},
																"nativeSrc": "21954:39:18",
																"nodeType": "YulFunctionCall",
																"src": "21954:39:18"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "21934:16:18",
																	"nodeType": "YulTypedName",
																	"src": "21934:16:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "22009:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "22009:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "22049:4:18",
																						"nodeType": "YulIdentifier",
																						"src": "22049:4:18"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "22043:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "22043:5:18"
																				},
																				"nativeSrc": "22043:11:18",
																				"nodeType": "YulFunctionCall",
																				"src": "22043:11:18"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "22056:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "22056:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "22088:16:18",
																						"nodeType": "YulIdentifier",
																						"src": "22088:16:18"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "22064:23:18",
																					"nodeType": "YulIdentifier",
																					"src": "22064:23:18"
																				},
																				"nativeSrc": "22064:41:18",
																				"nodeType": "YulFunctionCall",
																				"src": "22064:41:18"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "22015:27:18",
																			"nodeType": "YulIdentifier",
																			"src": "22015:27:18"
																		},
																		"nativeSrc": "22015:91:18",
																		"nodeType": "YulFunctionCall",
																		"src": "22015:91:18"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "22002:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "22002:6:18"
																},
																"nativeSrc": "22002:105:18",
																"nodeType": "YulFunctionCall",
																"src": "22002:105:18"
															},
															"nativeSrc": "22002:105:18",
															"nodeType": "YulExpressionStatement",
															"src": "22002:105:18"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "21844:269:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "21897:4:18",
														"nodeType": "YulTypedName",
														"src": "21897:4:18",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "21903:6:18",
														"nodeType": "YulTypedName",
														"src": "21903:6:18",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "21911:7:18",
														"nodeType": "YulTypedName",
														"src": "21911:7:18",
														"type": ""
													}
												],
												"src": "21844:269:18"
											},
											{
												"body": {
													"nativeSrc": "22168:24:18",
													"nodeType": "YulBlock",
													"src": "22168:24:18",
													"statements": [
														{
															"nativeSrc": "22178:8:18",
															"nodeType": "YulAssignment",
															"src": "22178:8:18",
															"value": {
																"kind": "number",
																"nativeSrc": "22185:1:18",
																"nodeType": "YulLiteral",
																"src": "22185:1:18",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "22178:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "22178:3:18"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "22119:73:18",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "22164:3:18",
														"nodeType": "YulTypedName",
														"src": "22164:3:18",
														"type": ""
													}
												],
												"src": "22119:73:18"
											},
											{
												"body": {
													"nativeSrc": "22251:136:18",
													"nodeType": "YulBlock",
													"src": "22251:136:18",
													"statements": [
														{
															"nativeSrc": "22261:46:18",
															"nodeType": "YulVariableDeclaration",
															"src": "22261:46:18",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "22275:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "22275:30:18"
																},
																"nativeSrc": "22275:32:18",
																"nodeType": "YulFunctionCall",
																"src": "22275:32:18"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "22265:6:18",
																	"nodeType": "YulTypedName",
																	"src": "22265:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "22360:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "22360:4:18"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "22366:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "22366:6:18"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "22374:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "22374:6:18"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "22316:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "22316:43:18"
																},
																"nativeSrc": "22316:65:18",
																"nodeType": "YulFunctionCall",
																"src": "22316:65:18"
															},
															"nativeSrc": "22316:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "22316:65:18"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "22198:189:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "22237:4:18",
														"nodeType": "YulTypedName",
														"src": "22237:4:18",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "22243:6:18",
														"nodeType": "YulTypedName",
														"src": "22243:6:18",
														"type": ""
													}
												],
												"src": "22198:189:18"
											},
											{
												"body": {
													"nativeSrc": "22443:136:18",
													"nodeType": "YulBlock",
													"src": "22443:136:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "22510:63:18",
																"nodeType": "YulBlock",
																"src": "22510:63:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "22554:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "22554:5:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "22561:1:18",
																					"nodeType": "YulLiteral",
																					"src": "22561:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "22524:29:18",
																				"nodeType": "YulIdentifier",
																				"src": "22524:29:18"
																			},
																			"nativeSrc": "22524:39:18",
																			"nodeType": "YulFunctionCall",
																			"src": "22524:39:18"
																		},
																		"nativeSrc": "22524:39:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "22524:39:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "22463:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "22463:5:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "22470:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "22470:3:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "22460:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "22460:2:18"
																},
																"nativeSrc": "22460:14:18",
																"nodeType": "YulFunctionCall",
																"src": "22460:14:18"
															},
															"nativeSrc": "22453:120:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "22475:26:18",
																"nodeType": "YulBlock",
																"src": "22475:26:18",
																"statements": [
																	{
																		"nativeSrc": "22477:22:18",
																		"nodeType": "YulAssignment",
																		"src": "22477:22:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "22490:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "22490:5:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "22497:1:18",
																					"nodeType": "YulLiteral",
																					"src": "22497:1:18",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "22486:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "22486:3:18"
																			},
																			"nativeSrc": "22486:13:18",
																			"nodeType": "YulFunctionCall",
																			"src": "22486:13:18"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "22477:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "22477:5:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "22457:2:18",
																"nodeType": "YulBlock",
																"src": "22457:2:18",
																"statements": []
															},
															"src": "22453:120:18"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "22393:186:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "22431:5:18",
														"nodeType": "YulTypedName",
														"src": "22431:5:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "22438:3:18",
														"nodeType": "YulTypedName",
														"src": "22438:3:18",
														"type": ""
													}
												],
												"src": "22393:186:18"
											},
											{
												"body": {
													"nativeSrc": "22664:464:18",
													"nodeType": "YulBlock",
													"src": "22664:464:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "22690:431:18",
																"nodeType": "YulBlock",
																"src": "22690:431:18",
																"statements": [
																	{
																		"nativeSrc": "22704:54:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "22704:54:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "22752:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "22752:5:18"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "22720:31:18",
																				"nodeType": "YulIdentifier",
																				"src": "22720:31:18"
																			},
																			"nativeSrc": "22720:38:18",
																			"nodeType": "YulFunctionCall",
																			"src": "22720:38:18"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "22708:8:18",
																				"nodeType": "YulTypedName",
																				"src": "22708:8:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "22771:63:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "22771:63:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "22794:8:18",
																					"nodeType": "YulIdentifier",
																					"src": "22794:8:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "22822:10:18",
																							"nodeType": "YulIdentifier",
																							"src": "22822:10:18"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "22804:17:18",
																						"nodeType": "YulIdentifier",
																						"src": "22804:17:18"
																					},
																					"nativeSrc": "22804:29:18",
																					"nodeType": "YulFunctionCall",
																					"src": "22804:29:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "22790:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "22790:3:18"
																			},
																			"nativeSrc": "22790:44:18",
																			"nodeType": "YulFunctionCall",
																			"src": "22790:44:18"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "22775:11:18",
																				"nodeType": "YulTypedName",
																				"src": "22775:11:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "22991:27:18",
																			"nodeType": "YulBlock",
																			"src": "22991:27:18",
																			"statements": [
																				{
																					"nativeSrc": "22993:23:18",
																					"nodeType": "YulAssignment",
																					"src": "22993:23:18",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "23008:8:18",
																						"nodeType": "YulIdentifier",
																						"src": "23008:8:18"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "22993:11:18",
																							"nodeType": "YulIdentifier",
																							"src": "22993:11:18"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "22975:10:18",
																					"nodeType": "YulIdentifier",
																					"src": "22975:10:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "22987:2:18",
																					"nodeType": "YulLiteral",
																					"src": "22987:2:18",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "22972:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "22972:2:18"
																			},
																			"nativeSrc": "22972:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "22972:18:18"
																		},
																		"nativeSrc": "22969:49:18",
																		"nodeType": "YulIf",
																		"src": "22969:49:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "23060:11:18",
																					"nodeType": "YulIdentifier",
																					"src": "23060:11:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "23077:8:18",
																							"nodeType": "YulIdentifier",
																							"src": "23077:8:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "23105:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "23105:3:18"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "23087:17:18",
																								"nodeType": "YulIdentifier",
																								"src": "23087:17:18"
																							},
																							"nativeSrc": "23087:22:18",
																							"nodeType": "YulFunctionCall",
																							"src": "23087:22:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "23073:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "23073:3:18"
																					},
																					"nativeSrc": "23073:37:18",
																					"nodeType": "YulFunctionCall",
																					"src": "23073:37:18"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "23031:28:18",
																				"nodeType": "YulIdentifier",
																				"src": "23031:28:18"
																			},
																			"nativeSrc": "23031:80:18",
																			"nodeType": "YulFunctionCall",
																			"src": "23031:80:18"
																		},
																		"nativeSrc": "23031:80:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "23031:80:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "22681:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "22681:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22686:2:18",
																		"nodeType": "YulLiteral",
																		"src": "22686:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "22678:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "22678:2:18"
																},
																"nativeSrc": "22678:11:18",
																"nodeType": "YulFunctionCall",
																"src": "22678:11:18"
															},
															"nativeSrc": "22675:446:18",
															"nodeType": "YulIf",
															"src": "22675:446:18"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "22585:543:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "22640:5:18",
														"nodeType": "YulTypedName",
														"src": "22640:5:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "22647:3:18",
														"nodeType": "YulTypedName",
														"src": "22647:3:18",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "22652:10:18",
														"nodeType": "YulTypedName",
														"src": "22652:10:18",
														"type": ""
													}
												],
												"src": "22585:543:18"
											},
											{
												"body": {
													"nativeSrc": "23197:54:18",
													"nodeType": "YulBlock",
													"src": "23197:54:18",
													"statements": [
														{
															"nativeSrc": "23207:37:18",
															"nodeType": "YulAssignment",
															"src": "23207:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "23232:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "23232:4:18"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "23238:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "23238:5:18"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "23228:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "23228:3:18"
																},
																"nativeSrc": "23228:16:18",
																"nodeType": "YulFunctionCall",
																"src": "23228:16:18"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "23207:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "23207:8:18"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "23134:117:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "23172:4:18",
														"nodeType": "YulTypedName",
														"src": "23172:4:18",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "23178:5:18",
														"nodeType": "YulTypedName",
														"src": "23178:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "23188:8:18",
														"nodeType": "YulTypedName",
														"src": "23188:8:18",
														"type": ""
													}
												],
												"src": "23134:117:18"
											},
											{
												"body": {
													"nativeSrc": "23308:118:18",
													"nodeType": "YulBlock",
													"src": "23308:118:18",
													"statements": [
														{
															"nativeSrc": "23318:68:18",
															"nodeType": "YulVariableDeclaration",
															"src": "23318:68:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "23367:1:18",
																						"nodeType": "YulLiteral",
																						"src": "23367:1:18",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "23370:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "23370:5:18"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "23363:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "23363:3:18"
																				},
																				"nativeSrc": "23363:13:18",
																				"nodeType": "YulFunctionCall",
																				"src": "23363:13:18"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "23382:1:18",
																						"nodeType": "YulLiteral",
																						"src": "23382:1:18",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "23378:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "23378:3:18"
																				},
																				"nativeSrc": "23378:6:18",
																				"nodeType": "YulFunctionCall",
																				"src": "23378:6:18"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "23334:28:18",
																			"nodeType": "YulIdentifier",
																			"src": "23334:28:18"
																		},
																		"nativeSrc": "23334:51:18",
																		"nodeType": "YulFunctionCall",
																		"src": "23334:51:18"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "23330:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "23330:3:18"
																},
																"nativeSrc": "23330:56:18",
																"nodeType": "YulFunctionCall",
																"src": "23330:56:18"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "23322:4:18",
																	"nodeType": "YulTypedName",
																	"src": "23322:4:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "23395:25:18",
															"nodeType": "YulAssignment",
															"src": "23395:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "23409:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "23409:4:18"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "23415:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "23415:4:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "23405:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "23405:3:18"
																},
																"nativeSrc": "23405:15:18",
																"nodeType": "YulFunctionCall",
																"src": "23405:15:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "23395:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "23395:6:18"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "23257:169:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "23285:4:18",
														"nodeType": "YulTypedName",
														"src": "23285:4:18",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "23291:5:18",
														"nodeType": "YulTypedName",
														"src": "23291:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "23301:6:18",
														"nodeType": "YulTypedName",
														"src": "23301:6:18",
														"type": ""
													}
												],
												"src": "23257:169:18"
											},
											{
												"body": {
													"nativeSrc": "23512:214:18",
													"nodeType": "YulBlock",
													"src": "23512:214:18",
													"statements": [
														{
															"nativeSrc": "23645:37:18",
															"nodeType": "YulAssignment",
															"src": "23645:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "23672:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "23672:4:18"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "23678:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "23678:3:18"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "23653:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "23653:18:18"
																},
																"nativeSrc": "23653:29:18",
																"nodeType": "YulFunctionCall",
																"src": "23653:29:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "23645:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "23645:4:18"
																}
															]
														},
														{
															"nativeSrc": "23691:29:18",
															"nodeType": "YulAssignment",
															"src": "23691:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "23702:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "23702:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "23712:1:18",
																				"nodeType": "YulLiteral",
																				"src": "23712:1:18",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "23715:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "23715:3:18"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "23708:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "23708:3:18"
																		},
																		"nativeSrc": "23708:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "23708:11:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "23699:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "23699:2:18"
																},
																"nativeSrc": "23699:21:18",
																"nodeType": "YulFunctionCall",
																"src": "23699:21:18"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "23691:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "23691:4:18"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "23431:295:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "23493:4:18",
														"nodeType": "YulTypedName",
														"src": "23493:4:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "23499:3:18",
														"nodeType": "YulTypedName",
														"src": "23499:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "23507:4:18",
														"nodeType": "YulTypedName",
														"src": "23507:4:18",
														"type": ""
													}
												],
												"src": "23431:295:18"
											},
											{
												"body": {
													"nativeSrc": "23823:1303:18",
													"nodeType": "YulBlock",
													"src": "23823:1303:18",
													"statements": [
														{
															"nativeSrc": "23834:51:18",
															"nodeType": "YulVariableDeclaration",
															"src": "23834:51:18",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "23881:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "23881:3:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "23848:32:18",
																	"nodeType": "YulIdentifier",
																	"src": "23848:32:18"
																},
																"nativeSrc": "23848:37:18",
																"nodeType": "YulFunctionCall",
																"src": "23848:37:18"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "23838:6:18",
																	"nodeType": "YulTypedName",
																	"src": "23838:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "23970:22:18",
																"nodeType": "YulBlock",
																"src": "23970:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "23972:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "23972:16:18"
																			},
																			"nativeSrc": "23972:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "23972:18:18"
																		},
																		"nativeSrc": "23972:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "23972:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "23942:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "23942:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23950:18:18",
																		"nodeType": "YulLiteral",
																		"src": "23950:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "23939:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "23939:2:18"
																},
																"nativeSrc": "23939:30:18",
																"nodeType": "YulFunctionCall",
																"src": "23939:30:18"
															},
															"nativeSrc": "23936:56:18",
															"nodeType": "YulIf",
															"src": "23936:56:18"
														},
														{
															"nativeSrc": "24002:52:18",
															"nodeType": "YulVariableDeclaration",
															"src": "24002:52:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "24048:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "24048:4:18"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "24042:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "24042:5:18"
																		},
																		"nativeSrc": "24042:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "24042:11:18"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "24016:25:18",
																	"nodeType": "YulIdentifier",
																	"src": "24016:25:18"
																},
																"nativeSrc": "24016:38:18",
																"nodeType": "YulFunctionCall",
																"src": "24016:38:18"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "24006:6:18",
																	"nodeType": "YulTypedName",
																	"src": "24006:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "24147:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "24147:4:18"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "24153:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "24153:6:18"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "24161:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "24161:6:18"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "24101:45:18",
																	"nodeType": "YulIdentifier",
																	"src": "24101:45:18"
																},
																"nativeSrc": "24101:67:18",
																"nodeType": "YulFunctionCall",
																"src": "24101:67:18"
															},
															"nativeSrc": "24101:67:18",
															"nodeType": "YulExpressionStatement",
															"src": "24101:67:18"
														},
														{
															"nativeSrc": "24178:18:18",
															"nodeType": "YulVariableDeclaration",
															"src": "24178:18:18",
															"value": {
																"kind": "number",
																"nativeSrc": "24195:1:18",
																"nodeType": "YulLiteral",
																"src": "24195:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "24182:9:18",
																	"nodeType": "YulTypedName",
																	"src": "24182:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24206:17:18",
															"nodeType": "YulAssignment",
															"src": "24206:17:18",
															"value": {
																"kind": "number",
																"nativeSrc": "24219:4:18",
																"nodeType": "YulLiteral",
																"src": "24219:4:18",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "24206:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "24206:9:18"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "24270:611:18",
																		"nodeType": "YulBlock",
																		"src": "24270:611:18",
																		"statements": [
																			{
																				"nativeSrc": "24284:37:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "24284:37:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "24303:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "24303:6:18"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "24315:4:18",
																									"nodeType": "YulLiteral",
																									"src": "24315:4:18",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "24311:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "24311:3:18"
																							},
																							"nativeSrc": "24311:9:18",
																							"nodeType": "YulFunctionCall",
																							"src": "24311:9:18"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "24299:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "24299:3:18"
																					},
																					"nativeSrc": "24299:22:18",
																					"nodeType": "YulFunctionCall",
																					"src": "24299:22:18"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "24288:7:18",
																						"nodeType": "YulTypedName",
																						"src": "24288:7:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "24335:51:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "24335:51:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "24381:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "24381:4:18"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "24349:31:18",
																						"nodeType": "YulIdentifier",
																						"src": "24349:31:18"
																					},
																					"nativeSrc": "24349:37:18",
																					"nodeType": "YulFunctionCall",
																					"src": "24349:37:18"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "24339:6:18",
																						"nodeType": "YulTypedName",
																						"src": "24339:6:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "24399:10:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "24399:10:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "24408:1:18",
																					"nodeType": "YulLiteral",
																					"src": "24408:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "24403:1:18",
																						"nodeType": "YulTypedName",
																						"src": "24403:1:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "24467:163:18",
																					"nodeType": "YulBlock",
																					"src": "24467:163:18",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "24492:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "24492:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "24510:3:18",
																														"nodeType": "YulIdentifier",
																														"src": "24510:3:18"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "24515:9:18",
																														"nodeType": "YulIdentifier",
																														"src": "24515:9:18"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "24506:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "24506:3:18"
																												},
																												"nativeSrc": "24506:19:18",
																												"nodeType": "YulFunctionCall",
																												"src": "24506:19:18"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "24500:5:18",
																											"nodeType": "YulIdentifier",
																											"src": "24500:5:18"
																										},
																										"nativeSrc": "24500:26:18",
																										"nodeType": "YulFunctionCall",
																										"src": "24500:26:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "24485:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "24485:6:18"
																								},
																								"nativeSrc": "24485:42:18",
																								"nodeType": "YulFunctionCall",
																								"src": "24485:42:18"
																							},
																							"nativeSrc": "24485:42:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "24485:42:18"
																						},
																						{
																							"nativeSrc": "24544:24:18",
																							"nodeType": "YulAssignment",
																							"src": "24544:24:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "24558:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "24558:6:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "24566:1:18",
																										"nodeType": "YulLiteral",
																										"src": "24566:1:18",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "24554:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "24554:3:18"
																								},
																								"nativeSrc": "24554:14:18",
																								"nodeType": "YulFunctionCall",
																								"src": "24554:14:18"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "24544:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "24544:6:18"
																								}
																							]
																						},
																						{
																							"nativeSrc": "24585:31:18",
																							"nodeType": "YulAssignment",
																							"src": "24585:31:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "24602:9:18",
																										"nodeType": "YulIdentifier",
																										"src": "24602:9:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "24613:2:18",
																										"nodeType": "YulLiteral",
																										"src": "24613:2:18",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "24598:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "24598:3:18"
																								},
																								"nativeSrc": "24598:18:18",
																								"nodeType": "YulFunctionCall",
																								"src": "24598:18:18"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "24585:9:18",
																									"nodeType": "YulIdentifier",
																									"src": "24585:9:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "24433:1:18",
																							"nodeType": "YulIdentifier",
																							"src": "24433:1:18"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "24436:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "24436:7:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "24430:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "24430:2:18"
																					},
																					"nativeSrc": "24430:14:18",
																					"nodeType": "YulFunctionCall",
																					"src": "24430:14:18"
																				},
																				"nativeSrc": "24422:208:18",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "24445:21:18",
																					"nodeType": "YulBlock",
																					"src": "24445:21:18",
																					"statements": [
																						{
																							"nativeSrc": "24447:17:18",
																							"nodeType": "YulAssignment",
																							"src": "24447:17:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "24456:1:18",
																										"nodeType": "YulIdentifier",
																										"src": "24456:1:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "24459:4:18",
																										"nodeType": "YulLiteral",
																										"src": "24459:4:18",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "24452:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "24452:3:18"
																								},
																								"nativeSrc": "24452:12:18",
																								"nodeType": "YulFunctionCall",
																								"src": "24452:12:18"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "24447:1:18",
																									"nodeType": "YulIdentifier",
																									"src": "24447:1:18"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "24426:3:18",
																					"nodeType": "YulBlock",
																					"src": "24426:3:18",
																					"statements": []
																				},
																				"src": "24422:208:18"
																			},
																			{
																				"body": {
																					"nativeSrc": "24666:156:18",
																					"nodeType": "YulBlock",
																					"src": "24666:156:18",
																					"statements": [
																						{
																							"nativeSrc": "24684:43:18",
																							"nodeType": "YulVariableDeclaration",
																							"src": "24684:43:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "24711:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "24711:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "24716:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "24716:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "24707:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "24707:3:18"
																										},
																										"nativeSrc": "24707:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "24707:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "24701:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "24701:5:18"
																								},
																								"nativeSrc": "24701:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "24701:26:18"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "24688:9:18",
																									"nodeType": "YulTypedName",
																									"src": "24688:9:18",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "24751:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "24751:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "24778:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "24778:9:18"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "24793:6:18",
																														"nodeType": "YulIdentifier",
																														"src": "24793:6:18"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "24801:4:18",
																														"nodeType": "YulLiteral",
																														"src": "24801:4:18",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "24789:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "24789:3:18"
																												},
																												"nativeSrc": "24789:17:18",
																												"nodeType": "YulFunctionCall",
																												"src": "24789:17:18"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "24759:18:18",
																											"nodeType": "YulIdentifier",
																											"src": "24759:18:18"
																										},
																										"nativeSrc": "24759:48:18",
																										"nodeType": "YulFunctionCall",
																										"src": "24759:48:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "24744:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "24744:6:18"
																								},
																								"nativeSrc": "24744:64:18",
																								"nodeType": "YulFunctionCall",
																								"src": "24744:64:18"
																							},
																							"nativeSrc": "24744:64:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "24744:64:18"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "24649:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "24649:7:18"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "24658:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "24658:6:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "24646:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "24646:2:18"
																					},
																					"nativeSrc": "24646:19:18",
																					"nodeType": "YulFunctionCall",
																					"src": "24646:19:18"
																				},
																				"nativeSrc": "24643:179:18",
																				"nodeType": "YulIf",
																				"src": "24643:179:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "24842:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "24842:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "24856:6:18",
																											"nodeType": "YulIdentifier",
																											"src": "24856:6:18"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "24864:1:18",
																											"nodeType": "YulLiteral",
																											"src": "24864:1:18",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "24852:3:18",
																										"nodeType": "YulIdentifier",
																										"src": "24852:3:18"
																									},
																									"nativeSrc": "24852:14:18",
																									"nodeType": "YulFunctionCall",
																									"src": "24852:14:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "24868:1:18",
																									"nodeType": "YulLiteral",
																									"src": "24868:1:18",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "24848:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "24848:3:18"
																							},
																							"nativeSrc": "24848:22:18",
																							"nodeType": "YulFunctionCall",
																							"src": "24848:22:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "24835:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "24835:6:18"
																					},
																					"nativeSrc": "24835:36:18",
																					"nodeType": "YulFunctionCall",
																					"src": "24835:36:18"
																				},
																				"nativeSrc": "24835:36:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "24835:36:18"
																			}
																		]
																	},
																	"nativeSrc": "24263:618:18",
																	"nodeType": "YulCase",
																	"src": "24263:618:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "24268:1:18",
																		"nodeType": "YulLiteral",
																		"src": "24268:1:18",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "24898:222:18",
																		"nodeType": "YulBlock",
																		"src": "24898:222:18",
																		"statements": [
																			{
																				"nativeSrc": "24912:14:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "24912:14:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "24925:1:18",
																					"nodeType": "YulLiteral",
																					"src": "24925:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "24916:5:18",
																						"nodeType": "YulTypedName",
																						"src": "24916:5:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "24949:67:18",
																					"nodeType": "YulBlock",
																					"src": "24949:67:18",
																					"statements": [
																						{
																							"nativeSrc": "24967:35:18",
																							"nodeType": "YulAssignment",
																							"src": "24967:35:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "24986:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "24986:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "24991:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "24991:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "24982:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "24982:3:18"
																										},
																										"nativeSrc": "24982:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "24982:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "24976:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "24976:5:18"
																								},
																								"nativeSrc": "24976:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "24976:26:18"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "24967:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "24967:5:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "24942:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "24942:6:18"
																				},
																				"nativeSrc": "24939:77:18",
																				"nodeType": "YulIf",
																				"src": "24939:77:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "25036:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "25036:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "25095:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "25095:5:18"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "25102:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "25102:6:18"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "25042:52:18",
																								"nodeType": "YulIdentifier",
																								"src": "25042:52:18"
																							},
																							"nativeSrc": "25042:67:18",
																							"nodeType": "YulFunctionCall",
																							"src": "25042:67:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "25029:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "25029:6:18"
																					},
																					"nativeSrc": "25029:81:18",
																					"nodeType": "YulFunctionCall",
																					"src": "25029:81:18"
																				},
																				"nativeSrc": "25029:81:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "25029:81:18"
																			}
																		]
																	},
																	"nativeSrc": "24890:230:18",
																	"nodeType": "YulCase",
																	"src": "24890:230:18",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "24243:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "24243:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24251:2:18",
																		"nodeType": "YulLiteral",
																		"src": "24251:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "24240:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "24240:2:18"
																},
																"nativeSrc": "24240:14:18",
																"nodeType": "YulFunctionCall",
																"src": "24240:14:18"
															},
															"nativeSrc": "24233:887:18",
															"nodeType": "YulSwitch",
															"src": "24233:887:18"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "23731:1395:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "23812:4:18",
														"nodeType": "YulTypedName",
														"src": "23812:4:18",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "23818:3:18",
														"nodeType": "YulTypedName",
														"src": "23818:3:18",
														"type": ""
													}
												],
												"src": "23731:1395:18"
											},
											{
												"body": {
													"nativeSrc": "25258:206:18",
													"nodeType": "YulBlock",
													"src": "25258:206:18",
													"statements": [
														{
															"nativeSrc": "25268:26:18",
															"nodeType": "YulAssignment",
															"src": "25268:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25280:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "25280:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25291:2:18",
																		"nodeType": "YulLiteral",
																		"src": "25291:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25276:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "25276:3:18"
																},
																"nativeSrc": "25276:18:18",
																"nodeType": "YulFunctionCall",
																"src": "25276:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25268:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "25268:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "25348:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "25348:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25361:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "25361:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25372:1:18",
																				"nodeType": "YulLiteral",
																				"src": "25372:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25357:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "25357:3:18"
																		},
																		"nativeSrc": "25357:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "25357:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "25304:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "25304:43:18"
																},
																"nativeSrc": "25304:71:18",
																"nodeType": "YulFunctionCall",
																"src": "25304:71:18"
															},
															"nativeSrc": "25304:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "25304:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "25429:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "25429:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25442:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "25442:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25453:2:18",
																				"nodeType": "YulLiteral",
																				"src": "25453:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25438:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "25438:3:18"
																		},
																		"nativeSrc": "25438:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "25438:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "25385:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "25385:43:18"
																},
																"nativeSrc": "25385:72:18",
																"nodeType": "YulFunctionCall",
																"src": "25385:72:18"
															},
															"nativeSrc": "25385:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "25385:72:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "25132:332:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25222:9:18",
														"nodeType": "YulTypedName",
														"src": "25222:9:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "25234:6:18",
														"nodeType": "YulTypedName",
														"src": "25234:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "25242:6:18",
														"nodeType": "YulTypedName",
														"src": "25242:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25253:4:18",
														"nodeType": "YulTypedName",
														"src": "25253:4:18",
														"type": ""
													}
												],
												"src": "25132:332:18"
											},
											{
												"body": {
													"nativeSrc": "25498:152:18",
													"nodeType": "YulBlock",
													"src": "25498:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "25515:1:18",
																		"nodeType": "YulLiteral",
																		"src": "25515:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25518:77:18",
																		"nodeType": "YulLiteral",
																		"src": "25518:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25508:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "25508:6:18"
																},
																"nativeSrc": "25508:88:18",
																"nodeType": "YulFunctionCall",
																"src": "25508:88:18"
															},
															"nativeSrc": "25508:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "25508:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "25612:1:18",
																		"nodeType": "YulLiteral",
																		"src": "25612:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25615:4:18",
																		"nodeType": "YulLiteral",
																		"src": "25615:4:18",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25605:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "25605:6:18"
																},
																"nativeSrc": "25605:15:18",
																"nodeType": "YulFunctionCall",
																"src": "25605:15:18"
															},
															"nativeSrc": "25605:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "25605:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "25636:1:18",
																		"nodeType": "YulLiteral",
																		"src": "25636:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25639:4:18",
																		"nodeType": "YulLiteral",
																		"src": "25639:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "25629:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "25629:6:18"
																},
																"nativeSrc": "25629:15:18",
																"nodeType": "YulFunctionCall",
																"src": "25629:15:18"
															},
															"nativeSrc": "25629:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "25629:15:18"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "25470:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "25470:180:18"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_7029c135594e6d4877bed3e9ac9287ea76f6c7066dd4013bb12b949a5a7828c1(memPtr) {\n\n        mstore(add(memPtr, 0), \"No NFT for this bus\")\n\n    }\n\n    function abi_encode_t_stringliteral_7029c135594e6d4877bed3e9ac9287ea76f6c7066dd4013bb12b949a5a7828c1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_7029c135594e6d4877bed3e9ac9287ea76f6c7066dd4013bb12b949a5a7828c1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7029c135594e6d4877bed3e9ac9287ea76f6c7066dd4013bb12b949a5a7828c1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7029c135594e6d4877bed3e9ac9287ea76f6c7066dd4013bb12b949a5a7828c1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_16fc7e8bb1c4f22d3779cd41535c2f1b4f2be4694fd48d7116d0ac20c4362548(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not an authorized gove\")\n\n        mstore(add(memPtr, 32), \"rnment.\")\n\n    }\n\n    function abi_encode_t_stringliteral_16fc7e8bb1c4f22d3779cd41535c2f1b4f2be4694fd48d7116d0ac20c4362548_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_16fc7e8bb1c4f22d3779cd41535c2f1b4f2be4694fd48d7116d0ac20c4362548(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_16fc7e8bb1c4f22d3779cd41535c2f1b4f2be4694fd48d7116d0ac20c4362548__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_16fc7e8bb1c4f22d3779cd41535c2f1b4f2be4694fd48d7116d0ac20c4362548_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610109575f3560e01c806370a08231116100a0578063a22cb4651161006f578063a22cb465146102db578063b88d4fde146102f7578063c87b56dd14610313578063e524f2d514610343578063e985e9c51461037357610109565b806370a082311461022d5780638c8c30891461025d57806395d89b411461028d5780639bc60154146102ab57610109565b806323b872dd116100dc57806323b872dd146101a75780632ae9915b146101c357806342842e0e146101e15780636352211e146101fd57610109565b806301ffc9a71461010d57806306fdde031461013d578063081812fc1461015b578063095ea7b31461018b575b5f80fd5b61012760048036038101906101229190611a85565b6103a3565b6040516101349190611aca565b60405180910390f35b610145610403565b6040516101529190611b6d565b60405180910390f35b61017560048036038101906101709190611bc0565b610492565b6040516101829190611c2a565b60405180910390f35b6101a560048036038101906101a09190611c6d565b6104ad565b005b6101c160048036038101906101bc9190611cab565b6104c3565b005b6101cb6105c2565b6040516101d89190611c2a565b60405180910390f35b6101fb60048036038101906101f69190611cab565b6105e7565b005b61021760048036038101906102129190611bc0565b610606565b6040516102249190611c2a565b60405180910390f35b61024760048036038101906102429190611cfb565b610617565b6040516102549190611d35565b60405180910390f35b61027760048036038101906102729190611bc0565b6106cd565b6040516102849190611d35565b60405180910390f35b61029561073a565b6040516102a29190611b6d565b60405180910390f35b6102c560048036038101906102c09190611bc0565b6107ca565b6040516102d29190611e05565b60405180910390f35b6102f560048036038101906102f09190611e4f565b610831565b005b610311600480360381019061030c9190611fb9565b610847565b005b61032d60048036038101906103289190611bc0565b610864565b60405161033a9190611b6d565b60405180910390f35b61035d600480360381019061035891906120d7565b61096f565b60405161036a9190611d35565b60405180910390f35b61038d60048036038101906103889190612157565b610aca565b60405161039a9190611aca565b60405180910390f35b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103fc57506103fb82610b58565b5b9050919050565b60605f8054610411906121c2565b80601f016020809104026020016040519081016040528092919081815260200182805461043d906121c2565b80156104885780601f1061045f57610100808354040283529160200191610488565b820191905f5260205f20905b81548152906001019060200180831161046b57829003601f168201915b5050505050905090565b5f61049c82610c39565b506104a682610cbf565b9050919050565b6104bf82826104ba610cf8565b610cff565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610533575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161052a9190611c2a565b60405180910390fd5b5f6105468383610541610cf8565b610d11565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105bc578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016105b3939291906121f2565b60405180910390fd5b50505050565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61060183838360405180602001604052805f815250610847565b505050565b5f61061082610c39565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610688575f6040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161067f9190611c2a565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f8060095f8481526020019081526020015f205403610721576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071890612271565b60405180910390fd5b60095f8381526020019081526020015f20549050919050565b606060018054610749906121c2565b80601f0160208091040260200160405190810160405280929190818152602001828054610775906121c2565b80156107c05780601f10610797576101008083540402835291602001916107c0565b820191905f5260205f20905b8154815290600101906020018083116107a357829003601f168201915b5050505050905090565b6060600a5f8381526020019081526020015f2080548060200260200160405190810160405280929190818152602001828054801561082557602002820191905f5260205f20905b815481526020019060010190808311610811575b50505050509050919050565b61084361083c610cf8565b8383610f1c565b5050565b6108528484846104c3565b61085e84848484611085565b50505050565b606061086f82610c39565b505f60065f8481526020019081526020015f20805461088d906121c2565b80601f01602080910402602001604051908101604052809291908181526020018280546108b9906121c2565b80156109045780601f106108db57610100808354040283529160200191610904565b820191905f5260205f20905b8154815290600101906020018083116108e757829003601f168201915b505050505090505f610914611237565b90505f81510361092857819250505061096a565b5f8251111561095c5780826040516020016109449291906122c9565b6040516020818303038152906040529250505061096a565b6109658461124d565b925050505b919050565b5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fd8cdd32336040518263ffffffff1660e01b81526004016109ca9190611c2a565b602060405180830381865afa1580156109e5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a099190612300565b610a48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3f9061239b565b60405180910390fd5b610a5260076112b3565b5f610a5d60076112c7565b9050610a6986826112d3565b610a7381866113c6565b8060095f8681526020019081526020015f2081905550600a5f8481526020019081526020015f2081908060018154018082558091505060019003905f5260205f20015f909190919091505580915050949350505050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610c2257507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610c325750610c3182611420565b5b9050919050565b5f80610c4483611489565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cb657826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610cad9190611d35565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610d0c83838360016114c2565b505050565b5f80610d1c84611489565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610d5d57610d5c818486611681565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610de857610d9c5f855f806114c2565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610e6757600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f8c57816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610f839190611c2a565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110789190611aca565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611231578273ffffffffffffffffffffffffffffffffffffffff1663150b7a026110c8610cf8565b8685856040518563ffffffff1660e01b81526004016110ea949392919061240b565b6020604051808303815f875af192505050801561112557506040513d601f19601f820116820180604052508101906111229190612469565b60015b6111a6573d805f8114611153576040519150601f19603f3d011682016040523d82523d5f602084013e611158565b606091505b505f81510361119e57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111959190611c2a565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461122f57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112269190611c2a565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b606061125882610c39565b505f611262611237565b90505f8151116112805760405180602001604052805f8152506112ab565b8061128a84611744565b60405160200161129b9291906122c9565b6040516020818303038152906040525b915050919050565b6001815f015f828254019250508190555050565b5f815f01549050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611343575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161133a9190611c2a565b60405180910390fd5b5f61134f83835f610d11565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146113c1575f6040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016113b89190611c2a565b60405180910390fd5b505050565b8060065f8481526020019081526020015f2090816113e49190612631565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516114149190611d35565b60405180910390a15050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806114fa57505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561162c575f61150984610c39565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561157357508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561158657506115848184610aca565b155b156115c857826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016115bf9190611c2a565b60405180910390fd5b811561162a57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b61168c83838361180e565b61173f575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361170057806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016116f79190611d35565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611736929190612700565b60405180910390fd5b505050565b60605f6001611752846118ce565b0190505f8167ffffffffffffffff8111156117705761176f611e95565b5b6040519080825280601f01601f1916602001820160405280156117a25781602001600182028036833780820191505090505b5090505f82602001820190505b600115611803578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816117f8576117f7612727565b5b0494505f85036117af575b819350505050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156118c557508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061188657506118858484610aca565b5b806118c457508273ffffffffffffffffffffffffffffffffffffffff166118ac83610cbf565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061192a577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816119205761191f612727565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611967576d04ee2d6d415b85acef8100000000838161195d5761195c612727565b5b0492506020810190505b662386f26fc10000831061199657662386f26fc10000838161198c5761198b612727565b5b0492506010810190505b6305f5e10083106119bf576305f5e10083816119b5576119b4612727565b5b0492506008810190505b61271083106119e45761271083816119da576119d9612727565b5b0492506004810190505b60648310611a0757606483816119fd576119fc612727565b5b0492506002810190505b600a8310611a16576001810190505b80915050919050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611a6481611a30565b8114611a6e575f80fd5b50565b5f81359050611a7f81611a5b565b92915050565b5f60208284031215611a9a57611a99611a28565b5b5f611aa784828501611a71565b91505092915050565b5f8115159050919050565b611ac481611ab0565b82525050565b5f602082019050611add5f830184611abb565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611b1a578082015181840152602081019050611aff565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611b3f82611ae3565b611b498185611aed565b9350611b59818560208601611afd565b611b6281611b25565b840191505092915050565b5f6020820190508181035f830152611b858184611b35565b905092915050565b5f819050919050565b611b9f81611b8d565b8114611ba9575f80fd5b50565b5f81359050611bba81611b96565b92915050565b5f60208284031215611bd557611bd4611a28565b5b5f611be284828501611bac565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611c1482611beb565b9050919050565b611c2481611c0a565b82525050565b5f602082019050611c3d5f830184611c1b565b92915050565b611c4c81611c0a565b8114611c56575f80fd5b50565b5f81359050611c6781611c43565b92915050565b5f8060408385031215611c8357611c82611a28565b5b5f611c9085828601611c59565b9250506020611ca185828601611bac565b9150509250929050565b5f805f60608486031215611cc257611cc1611a28565b5b5f611ccf86828701611c59565b9350506020611ce086828701611c59565b9250506040611cf186828701611bac565b9150509250925092565b5f60208284031215611d1057611d0f611a28565b5b5f611d1d84828501611c59565b91505092915050565b611d2f81611b8d565b82525050565b5f602082019050611d485f830184611d26565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611d8081611b8d565b82525050565b5f611d918383611d77565b60208301905092915050565b5f602082019050919050565b5f611db382611d4e565b611dbd8185611d58565b9350611dc883611d68565b805f5b83811015611df8578151611ddf8882611d86565b9750611dea83611d9d565b925050600181019050611dcb565b5085935050505092915050565b5f6020820190508181035f830152611e1d8184611da9565b905092915050565b611e2e81611ab0565b8114611e38575f80fd5b50565b5f81359050611e4981611e25565b92915050565b5f8060408385031215611e6557611e64611a28565b5b5f611e7285828601611c59565b9250506020611e8385828601611e3b565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611ecb82611b25565b810181811067ffffffffffffffff82111715611eea57611ee9611e95565b5b80604052505050565b5f611efc611a1f565b9050611f088282611ec2565b919050565b5f67ffffffffffffffff821115611f2757611f26611e95565b5b611f3082611b25565b9050602081019050919050565b828183375f83830152505050565b5f611f5d611f5884611f0d565b611ef3565b905082815260208101848484011115611f7957611f78611e91565b5b611f84848285611f3d565b509392505050565b5f82601f830112611fa057611f9f611e8d565b5b8135611fb0848260208601611f4b565b91505092915050565b5f805f8060808587031215611fd157611fd0611a28565b5b5f611fde87828801611c59565b9450506020611fef87828801611c59565b935050604061200087828801611bac565b925050606085013567ffffffffffffffff81111561202157612020611a2c565b5b61202d87828801611f8c565b91505092959194509250565b5f67ffffffffffffffff82111561205357612052611e95565b5b61205c82611b25565b9050602081019050919050565b5f61207b61207684612039565b611ef3565b90508281526020810184848401111561209757612096611e91565b5b6120a2848285611f3d565b509392505050565b5f82601f8301126120be576120bd611e8d565b5b81356120ce848260208601612069565b91505092915050565b5f805f80608085870312156120ef576120ee611a28565b5b5f6120fc87828801611c59565b945050602085013567ffffffffffffffff81111561211d5761211c611a2c565b5b612129878288016120aa565b935050604061213a87828801611bac565b925050606061214b87828801611bac565b91505092959194509250565b5f806040838503121561216d5761216c611a28565b5b5f61217a85828601611c59565b925050602061218b85828601611c59565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806121d957607f821691505b6020821081036121ec576121eb612195565b5b50919050565b5f6060820190506122055f830186611c1b565b6122126020830185611d26565b61221f6040830184611c1b565b949350505050565b7f4e6f204e465420666f72207468697320627573000000000000000000000000005f82015250565b5f61225b601383611aed565b915061226682612227565b602082019050919050565b5f6020820190508181035f8301526122888161224f565b9050919050565b5f81905092915050565b5f6122a382611ae3565b6122ad818561228f565b93506122bd818560208601611afd565b80840191505092915050565b5f6122d48285612299565b91506122e08284612299565b91508190509392505050565b5f815190506122fa81611e25565b92915050565b5f6020828403121561231557612314611a28565b5b5f612322848285016122ec565b91505092915050565b7f43616c6c6572206973206e6f7420616e20617574686f72697a656420676f76655f8201527f726e6d656e742e00000000000000000000000000000000000000000000000000602082015250565b5f612385602783611aed565b91506123908261232b565b604082019050919050565b5f6020820190508181035f8301526123b281612379565b9050919050565b5f81519050919050565b5f82825260208201905092915050565b5f6123dd826123b9565b6123e781856123c3565b93506123f7818560208601611afd565b61240081611b25565b840191505092915050565b5f60808201905061241e5f830187611c1b565b61242b6020830186611c1b565b6124386040830185611d26565b818103606083015261244a81846123d3565b905095945050505050565b5f8151905061246381611a5b565b92915050565b5f6020828403121561247e5761247d611a28565b5b5f61248b84828501612455565b91505092915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026124f07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826124b5565b6124fa86836124b5565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61253561253061252b84611b8d565b612512565b611b8d565b9050919050565b5f819050919050565b61254e8361251b565b61256261255a8261253c565b8484546124c1565b825550505050565b5f90565b61257661256a565b612581818484612545565b505050565b5b818110156125a4576125995f8261256e565b600181019050612587565b5050565b601f8211156125e9576125ba81612494565b6125c3846124a6565b810160208510156125d2578190505b6125e66125de856124a6565b830182612586565b50505b505050565b5f82821c905092915050565b5f6126095f19846008026125ee565b1980831691505092915050565b5f61262183836125fa565b9150826002028217905092915050565b61263a82611ae3565b67ffffffffffffffff81111561265357612652611e95565b5b61265d82546121c2565b6126688282856125a8565b5f60209050601f831160018114612699575f8415612687578287015190505b6126918582612616565b8655506126f8565b601f1984166126a786612494565b5f5b828110156126ce578489015182556001820191506020850194506020810190506126a9565b868310156126eb57848901516126e7601f8916826125fa565b8355505b6001600288020188555050505b505050505050565b5f6040820190506127135f830185611c1b565b6127206020830184611d26565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea2646970667358221220bc97173b0893b00f0ce97f17580875dd2e7be7ea26b04b8e855581aff062655064736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xE524F2D5 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x373 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x8C8C3089 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x9BC60154 EQ PUSH2 0x2AB JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x2AE9915B EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1FD JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1A85 JUMP JUMPDEST PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH2 0x403 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1B6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1BC0 JUMP JUMPDEST PUSH2 0x492 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1C6D JUMP JUMPDEST PUSH2 0x4AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x1CAB JUMP JUMPDEST PUSH2 0x4C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CB PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x1CAB JUMP JUMPDEST PUSH2 0x5E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x217 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x1BC0 JUMP JUMPDEST PUSH2 0x606 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0x617 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x1D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x1BC0 JUMP JUMPDEST PUSH2 0x6CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x1D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x295 PUSH2 0x73A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x1B6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x1BC0 JUMP JUMPDEST PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x1E05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x1E4F JUMP JUMPDEST PUSH2 0x831 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x1FB9 JUMP JUMPDEST PUSH2 0x847 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x1BC0 JUMP JUMPDEST PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x1B6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x20D7 JUMP JUMPDEST PUSH2 0x96F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x1D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x388 SWAP2 SWAP1 PUSH2 0x2157 JUMP JUMPDEST PUSH2 0xACA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39A SWAP2 SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3FC JUMPI POP PUSH2 0x3FB DUP3 PUSH2 0xB58 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x411 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x43D SWAP1 PUSH2 0x21C2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x488 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x45F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x488 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x46B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x49C DUP3 PUSH2 0xC39 JUMP JUMPDEST POP PUSH2 0x4A6 DUP3 PUSH2 0xCBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4BF DUP3 DUP3 PUSH2 0x4BA PUSH2 0xCF8 JUMP JUMPDEST PUSH2 0xCFF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x533 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52A SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x546 DUP4 DUP4 PUSH2 0x541 PUSH2 0xCF8 JUMP JUMPDEST PUSH2 0xD11 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5BC JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x601 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x847 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x610 DUP3 PUSH2 0xC39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x688 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67F SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x718 SWAP1 PUSH2 0x2271 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x749 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x775 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7C0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x797 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7C0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7A3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x825 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x811 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x843 PUSH2 0x83C PUSH2 0xCF8 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xF1C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x852 DUP5 DUP5 DUP5 PUSH2 0x4C3 JUMP JUMPDEST PUSH2 0x85E DUP5 DUP5 DUP5 DUP5 PUSH2 0x1085 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x86F DUP3 PUSH2 0xC39 JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x88D SWAP1 PUSH2 0x21C2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8B9 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x904 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8DB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x904 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8E7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x914 PUSH2 0x1237 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0x928 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x96A JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x95C JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x944 SWAP3 SWAP2 SWAP1 PUSH2 0x22C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x96A JUMP JUMPDEST PUSH2 0x965 DUP5 PUSH2 0x124D JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFD8CDD32 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CA SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9E5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA09 SWAP2 SWAP1 PUSH2 0x2300 JUMP JUMPDEST PUSH2 0xA48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3F SWAP1 PUSH2 0x239B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA52 PUSH1 0x7 PUSH2 0x12B3 JUMP JUMPDEST PUSH0 PUSH2 0xA5D PUSH1 0x7 PUSH2 0x12C7 JUMP JUMPDEST SWAP1 POP PUSH2 0xA69 DUP7 DUP3 PUSH2 0x12D3 JUMP JUMPDEST PUSH2 0xA73 DUP2 DUP7 PUSH2 0x13C6 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xC22 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xC32 JUMPI POP PUSH2 0xC31 DUP3 PUSH2 0x1420 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xC44 DUP4 PUSH2 0x1489 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCB6 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAD SWAP2 SWAP1 PUSH2 0x1D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD0C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x14C2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xD1C DUP5 PUSH2 0x1489 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD5D JUMPI PUSH2 0xD5C DUP2 DUP5 DUP7 PUSH2 0x1681 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDE8 JUMPI PUSH2 0xD9C PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE67 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF8C JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF83 SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1078 SWAP2 SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1231 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x10C8 PUSH2 0xCF8 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10EA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x240B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1125 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1122 SWAP2 SWAP1 PUSH2 0x2469 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x11A6 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1153 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1158 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x119E JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1195 SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x122F JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1226 SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1258 DUP3 PUSH2 0xC39 JUMP JUMPDEST POP PUSH0 PUSH2 0x1262 PUSH2 0x1237 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x1280 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x12AB JUMP JUMPDEST DUP1 PUSH2 0x128A DUP5 PUSH2 0x1744 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x129B SWAP3 SWAP2 SWAP1 PUSH2 0x22C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1343 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x133A SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x134F DUP4 DUP4 PUSH0 PUSH2 0xD11 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13C1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B8 SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x13E4 SWAP2 SWAP1 PUSH2 0x2631 JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1414 SWAP2 SWAP1 PUSH2 0x1D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x14FA JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x162C JUMPI PUSH0 PUSH2 0x1509 DUP5 PUSH2 0xC39 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1573 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1586 JUMPI POP PUSH2 0x1584 DUP2 DUP5 PUSH2 0xACA JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x15C8 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15BF SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x162A JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x168C DUP4 DUP4 DUP4 PUSH2 0x180E JUMP JUMPDEST PUSH2 0x173F JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1700 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16F7 SWAP2 SWAP1 PUSH2 0x1D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1736 SWAP3 SWAP2 SWAP1 PUSH2 0x2700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1752 DUP5 PUSH2 0x18CE JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1770 JUMPI PUSH2 0x176F PUSH2 0x1E95 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17A2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1803 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x17F8 JUMPI PUSH2 0x17F7 PUSH2 0x2727 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x17AF JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x18C5 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1886 JUMPI POP PUSH2 0x1885 DUP5 DUP5 PUSH2 0xACA JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x18C4 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18AC DUP4 PUSH2 0xCBF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x192A JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1920 JUMPI PUSH2 0x191F PUSH2 0x2727 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1967 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x195D JUMPI PUSH2 0x195C PUSH2 0x2727 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1996 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x198C JUMPI PUSH2 0x198B PUSH2 0x2727 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x19BF JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x19B5 JUMPI PUSH2 0x19B4 PUSH2 0x2727 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x19E4 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x19DA JUMPI PUSH2 0x19D9 PUSH2 0x2727 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1A07 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x19FD JUMPI PUSH2 0x19FC PUSH2 0x2727 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1A16 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A64 DUP2 PUSH2 0x1A30 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A6E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A7F DUP2 PUSH2 0x1A5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A9A JUMPI PUSH2 0x1A99 PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AA7 DUP5 DUP3 DUP6 ADD PUSH2 0x1A71 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AC4 DUP2 PUSH2 0x1AB0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ADD PUSH0 DUP4 ADD DUP5 PUSH2 0x1ABB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B1A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1AFF JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B3F DUP3 PUSH2 0x1AE3 JUMP JUMPDEST PUSH2 0x1B49 DUP2 DUP6 PUSH2 0x1AED JUMP JUMPDEST SWAP4 POP PUSH2 0x1B59 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0x1B62 DUP2 PUSH2 0x1B25 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B85 DUP2 DUP5 PUSH2 0x1B35 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B9F DUP2 PUSH2 0x1B8D JUMP JUMPDEST DUP2 EQ PUSH2 0x1BA9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BBA DUP2 PUSH2 0x1B96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BD5 JUMPI PUSH2 0x1BD4 PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BE2 DUP5 DUP3 DUP6 ADD PUSH2 0x1BAC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C14 DUP3 PUSH2 0x1BEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C24 DUP2 PUSH2 0x1C0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C3D PUSH0 DUP4 ADD DUP5 PUSH2 0x1C1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C4C DUP2 PUSH2 0x1C0A JUMP JUMPDEST DUP2 EQ PUSH2 0x1C56 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C67 DUP2 PUSH2 0x1C43 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C83 JUMPI PUSH2 0x1C82 PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C90 DUP6 DUP3 DUP7 ADD PUSH2 0x1C59 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CA1 DUP6 DUP3 DUP7 ADD PUSH2 0x1BAC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1CC2 JUMPI PUSH2 0x1CC1 PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CCF DUP7 DUP3 DUP8 ADD PUSH2 0x1C59 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1CE0 DUP7 DUP3 DUP8 ADD PUSH2 0x1C59 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1CF1 DUP7 DUP3 DUP8 ADD PUSH2 0x1BAC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D10 JUMPI PUSH2 0x1D0F PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D1D DUP5 DUP3 DUP6 ADD PUSH2 0x1C59 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D2F DUP2 PUSH2 0x1B8D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D48 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D80 DUP2 PUSH2 0x1B8D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D91 DUP4 DUP4 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DB3 DUP3 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x1DBD DUP2 DUP6 PUSH2 0x1D58 JUMP JUMPDEST SWAP4 POP PUSH2 0x1DC8 DUP4 PUSH2 0x1D68 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DF8 JUMPI DUP2 MLOAD PUSH2 0x1DDF DUP9 DUP3 PUSH2 0x1D86 JUMP JUMPDEST SWAP8 POP PUSH2 0x1DEA DUP4 PUSH2 0x1D9D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1DCB JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E1D DUP2 DUP5 PUSH2 0x1DA9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E2E DUP2 PUSH2 0x1AB0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E38 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E49 DUP2 PUSH2 0x1E25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E65 JUMPI PUSH2 0x1E64 PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E72 DUP6 DUP3 DUP7 ADD PUSH2 0x1C59 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E83 DUP6 DUP3 DUP7 ADD PUSH2 0x1E3B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1ECB DUP3 PUSH2 0x1B25 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1EEA JUMPI PUSH2 0x1EE9 PUSH2 0x1E95 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EFC PUSH2 0x1A1F JUMP JUMPDEST SWAP1 POP PUSH2 0x1F08 DUP3 DUP3 PUSH2 0x1EC2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F27 JUMPI PUSH2 0x1F26 PUSH2 0x1E95 JUMP JUMPDEST JUMPDEST PUSH2 0x1F30 DUP3 PUSH2 0x1B25 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F5D PUSH2 0x1F58 DUP5 PUSH2 0x1F0D JUMP JUMPDEST PUSH2 0x1EF3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1F79 JUMPI PUSH2 0x1F78 PUSH2 0x1E91 JUMP JUMPDEST JUMPDEST PUSH2 0x1F84 DUP5 DUP3 DUP6 PUSH2 0x1F3D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FA0 JUMPI PUSH2 0x1F9F PUSH2 0x1E8D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1FB0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1F4B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1FD1 JUMPI PUSH2 0x1FD0 PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FDE DUP8 DUP3 DUP9 ADD PUSH2 0x1C59 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1FEF DUP8 DUP3 DUP9 ADD PUSH2 0x1C59 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2000 DUP8 DUP3 DUP9 ADD PUSH2 0x1BAC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2021 JUMPI PUSH2 0x2020 PUSH2 0x1A2C JUMP JUMPDEST JUMPDEST PUSH2 0x202D DUP8 DUP3 DUP9 ADD PUSH2 0x1F8C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2053 JUMPI PUSH2 0x2052 PUSH2 0x1E95 JUMP JUMPDEST JUMPDEST PUSH2 0x205C DUP3 PUSH2 0x1B25 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x207B PUSH2 0x2076 DUP5 PUSH2 0x2039 JUMP JUMPDEST PUSH2 0x1EF3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2097 JUMPI PUSH2 0x2096 PUSH2 0x1E91 JUMP JUMPDEST JUMPDEST PUSH2 0x20A2 DUP5 DUP3 DUP6 PUSH2 0x1F3D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x20BE JUMPI PUSH2 0x20BD PUSH2 0x1E8D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x20CE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2069 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x20EF JUMPI PUSH2 0x20EE PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20FC DUP8 DUP3 DUP9 ADD PUSH2 0x1C59 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x211D JUMPI PUSH2 0x211C PUSH2 0x1A2C JUMP JUMPDEST JUMPDEST PUSH2 0x2129 DUP8 DUP3 DUP9 ADD PUSH2 0x20AA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x213A DUP8 DUP3 DUP9 ADD PUSH2 0x1BAC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x214B DUP8 DUP3 DUP9 ADD PUSH2 0x1BAC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x216D JUMPI PUSH2 0x216C PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x217A DUP6 DUP3 DUP7 ADD PUSH2 0x1C59 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x218B DUP6 DUP3 DUP7 ADD PUSH2 0x1C59 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x21D9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x21EC JUMPI PUSH2 0x21EB PUSH2 0x2195 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2205 PUSH0 DUP4 ADD DUP7 PUSH2 0x1C1B JUMP JUMPDEST PUSH2 0x2212 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D26 JUMP JUMPDEST PUSH2 0x221F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C1B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F204E465420666F7220746869732062757300000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x225B PUSH1 0x13 DUP4 PUSH2 0x1AED JUMP JUMPDEST SWAP2 POP PUSH2 0x2266 DUP3 PUSH2 0x2227 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2288 DUP2 PUSH2 0x224F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22A3 DUP3 PUSH2 0x1AE3 JUMP JUMPDEST PUSH2 0x22AD DUP2 DUP6 PUSH2 0x228F JUMP JUMPDEST SWAP4 POP PUSH2 0x22BD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1AFD JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22D4 DUP3 DUP6 PUSH2 0x2299 JUMP JUMPDEST SWAP2 POP PUSH2 0x22E0 DUP3 DUP5 PUSH2 0x2299 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x22FA DUP2 PUSH2 0x1E25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2315 JUMPI PUSH2 0x2314 PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2322 DUP5 DUP3 DUP6 ADD PUSH2 0x22EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420616E20617574686F72697A656420676F7665 PUSH0 DUP3 ADD MSTORE PUSH32 0x726E6D656E742E00000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2385 PUSH1 0x27 DUP4 PUSH2 0x1AED JUMP JUMPDEST SWAP2 POP PUSH2 0x2390 DUP3 PUSH2 0x232B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23B2 DUP2 PUSH2 0x2379 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23DD DUP3 PUSH2 0x23B9 JUMP JUMPDEST PUSH2 0x23E7 DUP2 DUP6 PUSH2 0x23C3 JUMP JUMPDEST SWAP4 POP PUSH2 0x23F7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0x2400 DUP2 PUSH2 0x1B25 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x241E PUSH0 DUP4 ADD DUP8 PUSH2 0x1C1B JUMP JUMPDEST PUSH2 0x242B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1C1B JUMP JUMPDEST PUSH2 0x2438 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D26 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x244A DUP2 DUP5 PUSH2 0x23D3 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2463 DUP2 PUSH2 0x1A5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x247E JUMPI PUSH2 0x247D PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x248B DUP5 DUP3 DUP6 ADD PUSH2 0x2455 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x24F0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x24B5 JUMP JUMPDEST PUSH2 0x24FA DUP7 DUP4 PUSH2 0x24B5 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2535 PUSH2 0x2530 PUSH2 0x252B DUP5 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x2512 JUMP JUMPDEST PUSH2 0x1B8D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x254E DUP4 PUSH2 0x251B JUMP JUMPDEST PUSH2 0x2562 PUSH2 0x255A DUP3 PUSH2 0x253C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x24C1 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2576 PUSH2 0x256A JUMP JUMPDEST PUSH2 0x2581 DUP2 DUP5 DUP5 PUSH2 0x2545 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x25A4 JUMPI PUSH2 0x2599 PUSH0 DUP3 PUSH2 0x256E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2587 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x25E9 JUMPI PUSH2 0x25BA DUP2 PUSH2 0x2494 JUMP JUMPDEST PUSH2 0x25C3 DUP5 PUSH2 0x24A6 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x25D2 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x25E6 PUSH2 0x25DE DUP6 PUSH2 0x24A6 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2586 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2609 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x25EE JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2621 DUP4 DUP4 PUSH2 0x25FA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x263A DUP3 PUSH2 0x1AE3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2653 JUMPI PUSH2 0x2652 PUSH2 0x1E95 JUMP JUMPDEST JUMPDEST PUSH2 0x265D DUP3 SLOAD PUSH2 0x21C2 JUMP JUMPDEST PUSH2 0x2668 DUP3 DUP3 DUP6 PUSH2 0x25A8 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2699 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2687 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2691 DUP6 DUP3 PUSH2 0x2616 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x26F8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x26A7 DUP7 PUSH2 0x2494 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x26CE JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x26A9 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x26EB JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x26E7 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x25FA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2713 PUSH0 DUP4 ADD DUP6 PUSH2 0x1C1B JUMP JUMPDEST PUSH2 0x2720 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D26 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC SWAP8 OR EXTCODESIZE ADDMOD SWAP4 0xB0 0xF 0xC 0xE9 PUSH32 0x17580875DD2E7BE7EA26B04B8E855581AFF062655064736F6C63430008160033 ",
							"sourceMap": "276:1824:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;937:207:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4143:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;406:36:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4787:132:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2185:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1920:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1701:191:17;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2518:93:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1955:138:17;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3718:144:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4985:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1210:593:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1069:563:17;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3928:153:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;937:207:7;1039:4;760:10;753:18;;1062:35;;;:11;:35;;;;:75;;;;1101:36;1125:11;1101:23;:36::i;:::-;1062:75;1055:82;;937:207;;;:::o;2365:89:4:-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;4143:578::-;4251:1;4237:16;;:2;:16;;;4233:87;;4306:1;4276:33;;;;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;4583:12;:10;:12::i;:::-;4562:7;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4675:4;4681:7;4690:13;4654:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4606:109;4223:498;4143:578;;;:::o;406:36:17:-;;;;;;;;;;;;;:::o;4787:132:4:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;2185:118::-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;1920:208::-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;1701:191:17:-;1767:7;1820:1;1795:14;:21;1810:5;1795:21;;;;;;;;;;;;:26;1787:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;1863:14;:21;1878:5;1863:21;;;;;;;;;;;;1856:28;;1701:191;;;:::o;2518:93:4:-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;1955:138:17:-;2021:16;2057:17;:28;2075:9;2057:28;;;;;;;;;;;2050:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1955:138;;;:::o;3718:144:4:-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;1210:593:7:-;1283:13;1308:22;1322:7;1308:13;:22::i;:::-;;1341:23;1367:10;:19;1378:7;1367:19;;;;;;;;;;;1341:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:18;1417:10;:8;:10::i;:::-;1396:31;;1522:1;1506:4;1500:18;:23;1496:70;;1546:9;1539:16;;;;;;1496:70;1691:1;1671:9;1665:23;:27;1661:95;;;1729:4;1735:9;1715:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1708:37;;;;;;1661:95;1773:23;1788:7;1773:14;:23::i;:::-;1766:30;;;;1210:593;;;;:::o;1069:563:17:-;1201:7;855:21;;;;;;;;;;;840:64;;;905:10;840:76;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;832:128;;;;;;;;;;;;:::i;:::-;;;;;;;;;1221:23:::1;:11;:21;:23::i;:::-;1255:17;1275:21;:11;:19;:21::i;:::-;1255:41;;1309:20;1315:2;1319:9;1309:5;:20::i;:::-;1340:33;1353:9;1364:8;1340:12;:33::i;:::-;1471:9;1447:14;:21;1462:5;1447:21;;;;;;;;;;;:33;;;;1551:17;:28;1569:9;1551:28;;;;;;;;;;;1585:9;1551:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1615:9;1608:16;;;1069:563:::0;;;;;;:::o;3928:153:4:-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;1561:300::-;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;16138:241::-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;656:96:9:-;709:7;735:10;728:17;;656:96;:::o;14418:120:4:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;8838:795::-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;15591:312::-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;3174:92::-;3225:13;3250:9;;;;;;;;;;;;;;3174:92;:::o;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;;;2677:255;;;:::o;945:123:10:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;827:112::-;892:7;918;:14;;;911:21;;827:112;;;:::o;9955:327:4:-;10036:1;10022:16;;:2;:16;;;10018:87;;10091:1;10061:33;;;;;;;;;;;:::i;:::-;;;;;;;;10018:87;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;;10209:1;10184:27;;:13;:27;;;10180:96;;10262:1;10234:31;;;;;;;;;;;:::i;:::-;;;;;;;;10180:96;10008:274;9955:327;;:::o;1922:167:7:-;2035:9;2013:10;:19;2024:7;2013:19;;;;;;;;;;;:31;;;;;;:::i;:::-;;2059:23;2074:7;2059:23;;;;;;:::i;:::-;;;;;;;;1922:167;;:::o;762:146:12:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;5707:115:4:-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;637:698:11:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;6376:272:4:-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;12214:916:14:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;7:75:18:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:329::-;5574:6;5623:2;5611:9;5602:7;5598:23;5594:32;5591:119;;;5629:79;;:::i;:::-;5591:119;5749:1;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5720:117;5515:329;;;;:::o;5850:118::-;5937:24;5955:5;5937:24;:::i;:::-;5932:3;5925:37;5850:118;;:::o;5974:222::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;5974:222;;;;:::o;6202:114::-;6269:6;6303:5;6297:12;6287:22;;6202:114;;;:::o;6322:184::-;6421:11;6455:6;6450:3;6443:19;6495:4;6490:3;6486:14;6471:29;;6322:184;;;;:::o;6512:132::-;6579:4;6602:3;6594:11;;6632:4;6627:3;6623:14;6615:22;;6512:132;;;:::o;6650:108::-;6727:24;6745:5;6727:24;:::i;:::-;6722:3;6715:37;6650:108;;:::o;6764:179::-;6833:10;6854:46;6896:3;6888:6;6854:46;:::i;:::-;6932:4;6927:3;6923:14;6909:28;;6764:179;;;;:::o;6949:113::-;7019:4;7051;7046:3;7042:14;7034:22;;6949:113;;;:::o;7098:732::-;7217:3;7246:54;7294:5;7246:54;:::i;:::-;7316:86;7395:6;7390:3;7316:86;:::i;:::-;7309:93;;7426:56;7476:5;7426:56;:::i;:::-;7505:7;7536:1;7521:284;7546:6;7543:1;7540:13;7521:284;;;7622:6;7616:13;7649:63;7708:3;7693:13;7649:63;:::i;:::-;7642:70;;7735:60;7788:6;7735:60;:::i;:::-;7725:70;;7581:224;7568:1;7565;7561:9;7556:14;;7521:284;;;7525:14;7821:3;7814:10;;7222:608;;;7098:732;;;;:::o;7836:373::-;7979:4;8017:2;8006:9;8002:18;7994:26;;8066:9;8060:4;8056:20;8052:1;8041:9;8037:17;8030:47;8094:108;8197:4;8188:6;8094:108;:::i;:::-;8086:116;;7836:373;;;;:::o;8215:116::-;8285:21;8300:5;8285:21;:::i;:::-;8278:5;8275:32;8265:60;;8321:1;8318;8311:12;8265:60;8215:116;:::o;8337:133::-;8380:5;8418:6;8405:20;8396:29;;8434:30;8458:5;8434:30;:::i;:::-;8337:133;;;;:::o;8476:468::-;8541:6;8549;8598:2;8586:9;8577:7;8573:23;8569:32;8566:119;;;8604:79;;:::i;:::-;8566:119;8724:1;8749:53;8794:7;8785:6;8774:9;8770:22;8749:53;:::i;:::-;8739:63;;8695:117;8851:2;8877:50;8919:7;8910:6;8899:9;8895:22;8877:50;:::i;:::-;8867:60;;8822:115;8476:468;;;;;:::o;8950:117::-;9059:1;9056;9049:12;9073:117;9182:1;9179;9172:12;9196:180;9244:77;9241:1;9234:88;9341:4;9338:1;9331:15;9365:4;9362:1;9355:15;9382:281;9465:27;9487:4;9465:27;:::i;:::-;9457:6;9453:40;9595:6;9583:10;9580:22;9559:18;9547:10;9544:34;9541:62;9538:88;;;9606:18;;:::i;:::-;9538:88;9646:10;9642:2;9635:22;9425:238;9382:281;;:::o;9669:129::-;9703:6;9730:20;;:::i;:::-;9720:30;;9759:33;9787:4;9779:6;9759:33;:::i;:::-;9669:129;;;:::o;9804:307::-;9865:4;9955:18;9947:6;9944:30;9941:56;;;9977:18;;:::i;:::-;9941:56;10015:29;10037:6;10015:29;:::i;:::-;10007:37;;10099:4;10093;10089:15;10081:23;;9804:307;;;:::o;10117:146::-;10214:6;10209:3;10204;10191:30;10255:1;10246:6;10241:3;10237:16;10230:27;10117:146;;;:::o;10269:423::-;10346:5;10371:65;10387:48;10428:6;10387:48;:::i;:::-;10371:65;:::i;:::-;10362:74;;10459:6;10452:5;10445:21;10497:4;10490:5;10486:16;10535:3;10526:6;10521:3;10517:16;10514:25;10511:112;;;10542:79;;:::i;:::-;10511:112;10632:54;10679:6;10674:3;10669;10632:54;:::i;:::-;10352:340;10269:423;;;;;:::o;10711:338::-;10766:5;10815:3;10808:4;10800:6;10796:17;10792:27;10782:122;;10823:79;;:::i;:::-;10782:122;10940:6;10927:20;10965:78;11039:3;11031:6;11024:4;11016:6;11012:17;10965:78;:::i;:::-;10956:87;;10772:277;10711:338;;;;:::o;11055:943::-;11150:6;11158;11166;11174;11223:3;11211:9;11202:7;11198:23;11194:33;11191:120;;;11230:79;;:::i;:::-;11191:120;11350:1;11375:53;11420:7;11411:6;11400:9;11396:22;11375:53;:::i;:::-;11365:63;;11321:117;11477:2;11503:53;11548:7;11539:6;11528:9;11524:22;11503:53;:::i;:::-;11493:63;;11448:118;11605:2;11631:53;11676:7;11667:6;11656:9;11652:22;11631:53;:::i;:::-;11621:63;;11576:118;11761:2;11750:9;11746:18;11733:32;11792:18;11784:6;11781:30;11778:117;;;11814:79;;:::i;:::-;11778:117;11919:62;11973:7;11964:6;11953:9;11949:22;11919:62;:::i;:::-;11909:72;;11704:287;11055:943;;;;;;;:::o;12004:308::-;12066:4;12156:18;12148:6;12145:30;12142:56;;;12178:18;;:::i;:::-;12142:56;12216:29;12238:6;12216:29;:::i;:::-;12208:37;;12300:4;12294;12290:15;12282:23;;12004:308;;;:::o;12318:425::-;12396:5;12421:66;12437:49;12479:6;12437:49;:::i;:::-;12421:66;:::i;:::-;12412:75;;12510:6;12503:5;12496:21;12548:4;12541:5;12537:16;12586:3;12577:6;12572:3;12568:16;12565:25;12562:112;;;12593:79;;:::i;:::-;12562:112;12683:54;12730:6;12725:3;12720;12683:54;:::i;:::-;12402:341;12318:425;;;;;:::o;12763:340::-;12819:5;12868:3;12861:4;12853:6;12849:17;12845:27;12835:122;;12876:79;;:::i;:::-;12835:122;12993:6;12980:20;13018:79;13093:3;13085:6;13078:4;13070:6;13066:17;13018:79;:::i;:::-;13009:88;;12825:278;12763:340;;;;:::o;13109:945::-;13205:6;13213;13221;13229;13278:3;13266:9;13257:7;13253:23;13249:33;13246:120;;;13285:79;;:::i;:::-;13246:120;13405:1;13430:53;13475:7;13466:6;13455:9;13451:22;13430:53;:::i;:::-;13420:63;;13376:117;13560:2;13549:9;13545:18;13532:32;13591:18;13583:6;13580:30;13577:117;;;13613:79;;:::i;:::-;13577:117;13718:63;13773:7;13764:6;13753:9;13749:22;13718:63;:::i;:::-;13708:73;;13503:288;13830:2;13856:53;13901:7;13892:6;13881:9;13877:22;13856:53;:::i;:::-;13846:63;;13801:118;13958:2;13984:53;14029:7;14020:6;14009:9;14005:22;13984:53;:::i;:::-;13974:63;;13929:118;13109:945;;;;;;;:::o;14060:474::-;14128:6;14136;14185:2;14173:9;14164:7;14160:23;14156:32;14153:119;;;14191:79;;:::i;:::-;14153:119;14311:1;14336:53;14381:7;14372:6;14361:9;14357:22;14336:53;:::i;:::-;14326:63;;14282:117;14438:2;14464:53;14509:7;14500:6;14489:9;14485:22;14464:53;:::i;:::-;14454:63;;14409:118;14060:474;;;;;:::o;14540:180::-;14588:77;14585:1;14578:88;14685:4;14682:1;14675:15;14709:4;14706:1;14699:15;14726:320;14770:6;14807:1;14801:4;14797:12;14787:22;;14854:1;14848:4;14844:12;14875:18;14865:81;;14931:4;14923:6;14919:17;14909:27;;14865:81;14993:2;14985:6;14982:14;14962:18;14959:38;14956:84;;15012:18;;:::i;:::-;14956:84;14777:269;14726:320;;;:::o;15052:442::-;15201:4;15239:2;15228:9;15224:18;15216:26;;15252:71;15320:1;15309:9;15305:17;15296:6;15252:71;:::i;:::-;15333:72;15401:2;15390:9;15386:18;15377:6;15333:72;:::i;:::-;15415;15483:2;15472:9;15468:18;15459:6;15415:72;:::i;:::-;15052:442;;;;;;:::o;15500:169::-;15640:21;15636:1;15628:6;15624:14;15617:45;15500:169;:::o;15675:366::-;15817:3;15838:67;15902:2;15897:3;15838:67;:::i;:::-;15831:74;;15914:93;16003:3;15914:93;:::i;:::-;16032:2;16027:3;16023:12;16016:19;;15675:366;;;:::o;16047:419::-;16213:4;16251:2;16240:9;16236:18;16228:26;;16300:9;16294:4;16290:20;16286:1;16275:9;16271:17;16264:47;16328:131;16454:4;16328:131;:::i;:::-;16320:139;;16047:419;;;:::o;16472:148::-;16574:11;16611:3;16596:18;;16472:148;;;;:::o;16626:390::-;16732:3;16760:39;16793:5;16760:39;:::i;:::-;16815:89;16897:6;16892:3;16815:89;:::i;:::-;16808:96;;16913:65;16971:6;16966:3;16959:4;16952:5;16948:16;16913:65;:::i;:::-;17003:6;16998:3;16994:16;16987:23;;16736:280;16626:390;;;;:::o;17022:435::-;17202:3;17224:95;17315:3;17306:6;17224:95;:::i;:::-;17217:102;;17336:95;17427:3;17418:6;17336:95;:::i;:::-;17329:102;;17448:3;17441:10;;17022:435;;;;;:::o;17463:137::-;17517:5;17548:6;17542:13;17533:22;;17564:30;17588:5;17564:30;:::i;:::-;17463:137;;;;:::o;17606:345::-;17673:6;17722:2;17710:9;17701:7;17697:23;17693:32;17690:119;;;17728:79;;:::i;:::-;17690:119;17848:1;17873:61;17926:7;17917:6;17906:9;17902:22;17873:61;:::i;:::-;17863:71;;17819:125;17606:345;;;;:::o;17957:226::-;18097:34;18093:1;18085:6;18081:14;18074:58;18166:9;18161:2;18153:6;18149:15;18142:34;17957:226;:::o;18189:366::-;18331:3;18352:67;18416:2;18411:3;18352:67;:::i;:::-;18345:74;;18428:93;18517:3;18428:93;:::i;:::-;18546:2;18541:3;18537:12;18530:19;;18189:366;;;:::o;18561:419::-;18727:4;18765:2;18754:9;18750:18;18742:26;;18814:9;18808:4;18804:20;18800:1;18789:9;18785:17;18778:47;18842:131;18968:4;18842:131;:::i;:::-;18834:139;;18561:419;;;:::o;18986:98::-;19037:6;19071:5;19065:12;19055:22;;18986:98;;;:::o;19090:168::-;19173:11;19207:6;19202:3;19195:19;19247:4;19242:3;19238:14;19223:29;;19090:168;;;;:::o;19264:373::-;19350:3;19378:38;19410:5;19378:38;:::i;:::-;19432:70;19495:6;19490:3;19432:70;:::i;:::-;19425:77;;19511:65;19569:6;19564:3;19557:4;19550:5;19546:16;19511:65;:::i;:::-;19601:29;19623:6;19601:29;:::i;:::-;19596:3;19592:39;19585:46;;19354:283;19264:373;;;;:::o;19643:640::-;19838:4;19876:3;19865:9;19861:19;19853:27;;19890:71;19958:1;19947:9;19943:17;19934:6;19890:71;:::i;:::-;19971:72;20039:2;20028:9;20024:18;20015:6;19971:72;:::i;:::-;20053;20121:2;20110:9;20106:18;20097:6;20053:72;:::i;:::-;20172:9;20166:4;20162:20;20157:2;20146:9;20142:18;20135:48;20200:76;20271:4;20262:6;20200:76;:::i;:::-;20192:84;;19643:640;;;;;;;:::o;20289:141::-;20345:5;20376:6;20370:13;20361:22;;20392:32;20418:5;20392:32;:::i;:::-;20289:141;;;;:::o;20436:349::-;20505:6;20554:2;20542:9;20533:7;20529:23;20525:32;20522:119;;;20560:79;;:::i;:::-;20522:119;20680:1;20705:63;20760:7;20751:6;20740:9;20736:22;20705:63;:::i;:::-;20695:73;;20651:127;20436:349;;;;:::o;20791:141::-;20840:4;20863:3;20855:11;;20886:3;20883:1;20876:14;20920:4;20917:1;20907:18;20899:26;;20791:141;;;:::o;20938:93::-;20975:6;21022:2;21017;21010:5;21006:14;21002:23;20992:33;;20938:93;;;:::o;21037:107::-;21081:8;21131:5;21125:4;21121:16;21100:37;;21037:107;;;;:::o;21150:393::-;21219:6;21269:1;21257:10;21253:18;21292:97;21322:66;21311:9;21292:97;:::i;:::-;21410:39;21440:8;21429:9;21410:39;:::i;:::-;21398:51;;21482:4;21478:9;21471:5;21467:21;21458:30;;21531:4;21521:8;21517:19;21510:5;21507:30;21497:40;;21226:317;;21150:393;;;;;:::o;21549:60::-;21577:3;21598:5;21591:12;;21549:60;;;:::o;21615:142::-;21665:9;21698:53;21716:34;21725:24;21743:5;21725:24;:::i;:::-;21716:34;:::i;:::-;21698:53;:::i;:::-;21685:66;;21615:142;;;:::o;21763:75::-;21806:3;21827:5;21820:12;;21763:75;;;:::o;21844:269::-;21954:39;21985:7;21954:39;:::i;:::-;22015:91;22064:41;22088:16;22064:41;:::i;:::-;22056:6;22049:4;22043:11;22015:91;:::i;:::-;22009:4;22002:105;21920:193;21844:269;;;:::o;22119:73::-;22164:3;22119:73;:::o;22198:189::-;22275:32;;:::i;:::-;22316:65;22374:6;22366;22360:4;22316:65;:::i;:::-;22251:136;22198:189;;:::o;22393:186::-;22453:120;22470:3;22463:5;22460:14;22453:120;;;22524:39;22561:1;22554:5;22524:39;:::i;:::-;22497:1;22490:5;22486:13;22477:22;;22453:120;;;22393:186;;:::o;22585:543::-;22686:2;22681:3;22678:11;22675:446;;;22720:38;22752:5;22720:38;:::i;:::-;22804:29;22822:10;22804:29;:::i;:::-;22794:8;22790:44;22987:2;22975:10;22972:18;22969:49;;;23008:8;22993:23;;22969:49;23031:80;23087:22;23105:3;23087:22;:::i;:::-;23077:8;23073:37;23060:11;23031:80;:::i;:::-;22690:431;;22675:446;22585:543;;;:::o;23134:117::-;23188:8;23238:5;23232:4;23228:16;23207:37;;23134:117;;;;:::o;23257:169::-;23301:6;23334:51;23382:1;23378:6;23370:5;23367:1;23363:13;23334:51;:::i;:::-;23330:56;23415:4;23409;23405:15;23395:25;;23308:118;23257:169;;;;:::o;23431:295::-;23507:4;23653:29;23678:3;23672:4;23653:29;:::i;:::-;23645:37;;23715:3;23712:1;23708:11;23702:4;23699:21;23691:29;;23431:295;;;;:::o;23731:1395::-;23848:37;23881:3;23848:37;:::i;:::-;23950:18;23942:6;23939:30;23936:56;;;23972:18;;:::i;:::-;23936:56;24016:38;24048:4;24042:11;24016:38;:::i;:::-;24101:67;24161:6;24153;24147:4;24101:67;:::i;:::-;24195:1;24219:4;24206:17;;24251:2;24243:6;24240:14;24268:1;24263:618;;;;24925:1;24942:6;24939:77;;;24991:9;24986:3;24982:19;24976:26;24967:35;;24939:77;25042:67;25102:6;25095:5;25042:67;:::i;:::-;25036:4;25029:81;24898:222;24233:887;;24263:618;24315:4;24311:9;24303:6;24299:22;24349:37;24381:4;24349:37;:::i;:::-;24408:1;24422:208;24436:7;24433:1;24430:14;24422:208;;;24515:9;24510:3;24506:19;24500:26;24492:6;24485:42;24566:1;24558:6;24554:14;24544:24;;24613:2;24602:9;24598:18;24585:31;;24459:4;24456:1;24452:12;24447:17;;24422:208;;;24658:6;24649:7;24646:19;24643:179;;;24716:9;24711:3;24707:19;24701:26;24759:48;24801:4;24793:6;24789:17;24778:9;24759:48;:::i;:::-;24751:6;24744:64;24666:156;24643:179;24868:1;24864;24856:6;24852:14;24848:22;24842:4;24835:36;24270:611;;;24233:887;;23823:1303;;;23731:1395;;:::o;25132:332::-;25253:4;25291:2;25280:9;25276:18;25268:26;;25304:71;25372:1;25361:9;25357:17;25348:6;25304:71;:::i;:::-;25385:72;25453:2;25442:9;25438:18;25429:6;25385:72;:::i;:::-;25132:332;;;;;:::o;25470:180::-;25518:77;25515:1;25508:88;25615:4;25612:1;25605:15;25639:4;25636:1;25629:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2024400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addressManagerAddress()": "2553",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"getApproved(uint256)": "infinite",
								"getNftForApprovedBus(uint256)": "infinite",
								"getNftsByCompany(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mintNFTForApprovedBus(address,string,uint256,uint256)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "881",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 276,
									"end": 2100,
									"name": "PUSH",
									"source": 17,
									"value": "80"
								},
								{
									"begin": 276,
									"end": 2100,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 276,
									"end": 2100,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 654,
									"end": 787,
									"name": "CALLVALUE",
									"source": 17
								},
								{
									"begin": 654,
									"end": 787,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 654,
									"end": 787,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 654,
									"end": 787,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 654,
									"end": 787,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 654,
									"end": 787,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 654,
									"end": 787,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 654,
									"end": 787,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 654,
									"end": 787,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 654,
									"end": 787,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 654,
									"end": 787,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 654,
									"end": 787,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 654,
									"end": 787,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 654,
									"end": 787,
									"name": "PUSHSIZE",
									"source": 17
								},
								{
									"begin": 654,
									"end": 787,
									"name": "CODESIZE",
									"source": 17
								},
								{
									"begin": 654,
									"end": 787,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 654,
									"end": 787,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 654,
									"end": 787,
									"name": "PUSHSIZE",
									"source": 17
								},
								{
									"begin": 654,
									"end": 787,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 654,
									"end": 787,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 654,
									"end": 787,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 654,
									"end": 787,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 654,
									"end": 787,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 654,
									"end": 787,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 654,
									"end": 787,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 654,
									"end": 787,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 654,
									"end": 787,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 654,
									"end": 787,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 654,
									"end": 787,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "2"
								},
								{
									"begin": 654,
									"end": 787,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 654,
									"end": 787,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 654,
									"end": 787,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "3"
								},
								{
									"begin": 654,
									"end": 787,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 654,
									"end": 787,
									"name": "tag",
									"source": 17,
									"value": "2"
								},
								{
									"begin": 654,
									"end": 787,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "4275734E46540000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "4255530000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 757,
									"end": 779,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 733,
									"end": 754,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "8"
								},
								{
									"begin": 733,
									"end": 754,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 733,
									"end": 779,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "100"
								},
								{
									"begin": 733,
									"end": 779,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 17
								},
								{
									"begin": 733,
									"end": 779,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 733,
									"end": 779,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 17
								},
								{
									"begin": 733,
									"end": 779,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 733,
									"end": 779,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 733,
									"end": 779,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 733,
									"end": 779,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 733,
									"end": 779,
									"modifierDepth": 1,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 733,
									"end": 779,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 733,
									"end": 779,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 733,
									"end": 779,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 733,
									"end": 779,
									"modifierDepth": 1,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 733,
									"end": 779,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 733,
									"end": 779,
									"modifierDepth": 1,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 733,
									"end": 779,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 733,
									"end": 779,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 733,
									"end": 779,
									"modifierDepth": 1,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 654,
									"end": 787,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 276,
									"end": 2100,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "11"
								},
								{
									"begin": 276,
									"end": 2100,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 18,
									"value": "13"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 18,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 18,
									"value": "16"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "45"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "15"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 18,
									"value": "45"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 18,
									"value": "17"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "47"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "16"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 18,
									"value": "47"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "48"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 18,
									"value": "48"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 18,
									"value": "18"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "50"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "17"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 18,
									"value": "50"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 18,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 18
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 18
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "52"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "53"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "13"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 18,
									"value": "53"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 18,
									"value": "52"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "54"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "18"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 18,
									"value": "54"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 18,
									"value": "19"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 18,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 18,
									"value": "21"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 18
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "59"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 18,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 18,
									"value": "59"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 18
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "60"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "61"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "21"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 18,
									"value": "61"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 18,
									"value": "60"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 18,
									"value": "23"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 18
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 18
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 18,
									"value": "25"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 18
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 18,
									"value": "26"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 18,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "66"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "25"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 18,
									"value": "66"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "67"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "25"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 18,
									"value": "67"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 18
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 18
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 18
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 18
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 18,
									"value": "27"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 18,
									"value": "28"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 18,
									"value": "29"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "71"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "72"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "27"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "28"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 18,
									"value": "72"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "27"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 18,
									"value": "71"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 18,
									"value": "30"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 18,
									"value": "31"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "76"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "29"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 18,
									"value": "76"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "77"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "78"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "30"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 18,
									"value": "78"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 18
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "26"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 18,
									"value": "77"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 18,
									"value": "32"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 18,
									"value": "33"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "81"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "32"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 18,
									"value": "81"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "82"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "31"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 18,
									"value": "82"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 18,
									"value": "34"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 18,
									"value": "84"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "86"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "87"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "33"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 18,
									"value": "87"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "84"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 18,
									"value": "86"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 18,
									"value": "35"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "89"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "90"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "23"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 18,
									"value": "90"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "91"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 18,
									"value": "91"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "92"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 18,
									"value": "92"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "93"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "94"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 18,
									"value": "94"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "34"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 18,
									"value": "93"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 18,
									"value": "89"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 18,
									"value": "36"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 18
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 18,
									"value": "37"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "97"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 18,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "36"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 18,
									"value": "97"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 18,
									"value": "38"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "99"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "37"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 18,
									"value": "99"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 18
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 18,
									"value": "8"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "101"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "19"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 18,
									"value": "101"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "102"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "103"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 18,
									"value": "103"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 18,
									"value": "102"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "104"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 18
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 18,
									"value": "104"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "105"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "35"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 18,
									"value": "105"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "107"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "108"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 18
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 18,
									"value": "108"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "109"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "38"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 18,
									"value": "109"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "106"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 18,
									"value": "107"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "110"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "23"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 18,
									"value": "110"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 18,
									"value": "111"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "113"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 18
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 18
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "111"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 18,
									"value": "113"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "114"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 18
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "115"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 18
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "37"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 18,
									"value": "115"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 18,
									"value": "114"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 18
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 18
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 18,
									"value": "106"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 276,
									"end": 2100,
									"name": "tag",
									"source": 17,
									"value": "11"
								},
								{
									"begin": 276,
									"end": 2100,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 276,
									"end": 2100,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 2100,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 276,
									"end": 2100,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 2100,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 2100,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 276,
									"end": 2100,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 2100,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bc97173b0893b00f0ce97f17580875dd2e7be7ea26b04b8e855581aff062655064736f6c63430008160033",
									".code": [
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "tag",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH",
											"source": 17,
											"value": "70A08231"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH",
											"source": 17,
											"value": "A22CB465"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH",
											"source": 17,
											"value": "A22CB465"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "15"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH",
											"source": 17,
											"value": "B88D4FDE"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH",
											"source": 17,
											"value": "C87B56DD"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH",
											"source": 17,
											"value": "E524F2D5"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH",
											"source": 17,
											"value": "E985E9C5"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "tag",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH",
											"source": 17,
											"value": "70A08231"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH",
											"source": 17,
											"value": "8C8C3089"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH",
											"source": 17,
											"value": "95D89B41"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH",
											"source": 17,
											"value": "9BC60154"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "tag",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH",
											"source": 17,
											"value": "23B872DD"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH",
											"source": 17,
											"value": "23B872DD"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH",
											"source": 17,
											"value": "2AE9915B"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH",
											"source": 17,
											"value": "42842E0E"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH",
											"source": 17,
											"value": "6352211E"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "tag",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH",
											"source": 17,
											"value": "1FFC9A7"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH",
											"source": 17,
											"value": "6FDDE03"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH",
											"source": 17,
											"value": "81812FC"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH",
											"source": 17,
											"value": "95EA7B3"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "tag",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 276,
											"end": 2100,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 406,
											"end": 442,
											"name": "tag",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 406,
											"end": 442,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 406,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "47"
										},
										{
											"begin": 406,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 406,
											"end": 442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 406,
											"end": 442,
											"name": "tag",
											"source": 17,
											"value": "47"
										},
										{
											"begin": 406,
											"end": 442,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 406,
											"end": 442,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 406,
											"end": 442,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 406,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "49"
										},
										{
											"begin": 406,
											"end": 442,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 406,
											"end": 442,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 406,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "38"
										},
										{
											"begin": 406,
											"end": 442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 406,
											"end": 442,
											"name": "tag",
											"source": 17,
											"value": "49"
										},
										{
											"begin": 406,
											"end": 442,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 406,
											"end": 442,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 406,
											"end": 442,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 406,
											"end": 442,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 406,
											"end": 442,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 406,
											"end": 442,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 406,
											"end": 442,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 406,
											"end": 442,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "tag",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "63"
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 1701,
											"end": 1892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "tag",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "65"
										},
										{
											"begin": 1701,
											"end": 1892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "tag",
											"source": 17,
											"value": "63"
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "62"
										},
										{
											"begin": 1701,
											"end": 1892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "tag",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "tag",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "70"
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "71"
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 1955,
											"end": 2093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "tag",
											"source": 17,
											"value": "71"
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 1955,
											"end": 2093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "tag",
											"source": 17,
											"value": "70"
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "73"
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "74"
										},
										{
											"begin": 1955,
											"end": 2093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "tag",
											"source": 17,
											"value": "73"
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "tag",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "87"
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "88"
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "89"
										},
										{
											"begin": 1069,
											"end": 1632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "tag",
											"source": 17,
											"value": "88"
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "90"
										},
										{
											"begin": 1069,
											"end": 1632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "tag",
											"source": 17,
											"value": "87"
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "91"
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "62"
										},
										{
											"begin": 1069,
											"end": 1632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "tag",
											"source": 17,
											"value": "91"
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1039,
											"end": 1043,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 760,
											"end": 770,
											"name": "PUSH",
											"source": 7,
											"value": "49064906"
										},
										{
											"begin": 753,
											"end": 771,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 753,
											"end": 771,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1073,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1125,
											"end": 1136,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1101,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1101,
											"end": 1137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1055,
											"end": 1137,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1055,
											"end": 1137,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3623,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 4,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 4276,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 4583,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 4583,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4681,
											"end": 4688,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 4,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 4654,
											"end": 4704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 406,
											"end": 442,
											"name": "tag",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 406,
											"end": 442,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 406,
											"end": 442,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 406,
											"end": 442,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 442,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 406,
											"end": 442,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 406,
											"end": 442,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 406,
											"end": 442,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 406,
											"end": 442,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 406,
											"end": 442,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 406,
											"end": 442,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 406,
											"end": 442,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 406,
											"end": 442,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 406,
											"end": 442,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 406,
											"end": 442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 4,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2120,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "tag",
											"source": 17,
											"value": "65"
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1767,
											"end": 1774,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1820,
											"end": 1821,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "PUSH",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1795,
											"end": 1821,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "135"
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "136"
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "137"
										},
										{
											"begin": 1787,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "tag",
											"source": 17,
											"value": "136"
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "tag",
											"source": 17,
											"value": "135"
										},
										{
											"begin": 1787,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1863,
											"end": 1877,
											"name": "PUSH",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 1863,
											"end": 1884,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1878,
											"end": 1883,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1863,
											"end": 1884,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1863,
											"end": 1884,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1863,
											"end": 1884,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1863,
											"end": 1884,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1863,
											"end": 1884,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1863,
											"end": 1884,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1863,
											"end": 1884,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1863,
											"end": 1884,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1863,
											"end": 1884,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1863,
											"end": 1884,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1863,
											"end": 1884,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1863,
											"end": 1884,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1856,
											"end": 1884,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1856,
											"end": 1884,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1892,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "tag",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2021,
											"end": 2037,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 2057,
											"end": 2074,
											"name": "PUSH",
											"source": 17,
											"value": "A"
										},
										{
											"begin": 2057,
											"end": 2085,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2075,
											"end": 2084,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2057,
											"end": 2085,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2057,
											"end": 2085,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2057,
											"end": 2085,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2057,
											"end": 2085,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2057,
											"end": 2085,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2057,
											"end": 2085,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2057,
											"end": 2085,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2057,
											"end": 2085,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2057,
											"end": 2085,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2057,
											"end": 2085,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2057,
											"end": 2085,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "145"
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "tag",
											"source": 17,
											"value": "146"
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "146"
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "tag",
											"source": 17,
											"value": "145"
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2085,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1955,
											"end": 2093,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1955,
											"end": 2093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 3822,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 3822,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1283,
											"end": 1296,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1322,
											"end": 1329,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 1308,
											"end": 1330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1364,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1377,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1385,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 1341,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 1341,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1417,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 1417,
											"end": 1427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1522,
											"end": 1523,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1510,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1500,
											"end": 1523,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1555,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1691,
											"end": 1692,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1680,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1665,
											"end": 1688,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1729,
											"end": 1733,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1744,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 1715,
											"end": 1745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 1788,
											"end": 1795,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1773,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 1773,
											"end": 1796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "tag",
											"source": 17,
											"value": "90"
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1201,
											"end": 1208,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 855,
											"end": 876,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 855,
											"end": 876,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 855,
											"end": 876,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 855,
											"end": 876,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 855,
											"end": 876,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 855,
											"end": 876,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 855,
											"end": 876,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 855,
											"end": 876,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 855,
											"end": 876,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 855,
											"end": 876,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 855,
											"end": 876,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 840,
											"end": 904,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 840,
											"end": 904,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 840,
											"end": 904,
											"name": "PUSH",
											"source": 17,
											"value": "FD8CDD32"
										},
										{
											"begin": 905,
											"end": 915,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 916,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 840,
											"end": 916,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 840,
											"end": 916,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 840,
											"end": 916,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "171"
										},
										{
											"begin": 840,
											"end": 916,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "38"
										},
										{
											"begin": 840,
											"end": 916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "tag",
											"source": 17,
											"value": "171"
										},
										{
											"begin": 840,
											"end": 916,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 840,
											"end": 916,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 916,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "STATICCALL",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "173"
										},
										{
											"begin": 840,
											"end": 916,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 840,
											"end": 916,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 840,
											"end": 916,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "tag",
											"source": 17,
											"value": "173"
										},
										{
											"begin": 840,
											"end": 916,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 916,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 840,
											"end": 916,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 840,
											"end": 916,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 916,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "174"
										},
										{
											"begin": 840,
											"end": 916,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "175"
										},
										{
											"begin": 840,
											"end": 916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 840,
											"end": 916,
											"name": "tag",
											"source": 17,
											"value": "174"
										},
										{
											"begin": 840,
											"end": 916,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 832,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "176"
										},
										{
											"begin": 832,
											"end": 960,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 832,
											"end": 960,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 832,
											"end": 960,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 832,
											"end": 960,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 832,
											"end": 960,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 832,
											"end": 960,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 832,
											"end": 960,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 832,
											"end": 960,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 832,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "177"
										},
										{
											"begin": 832,
											"end": 960,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 832,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "178"
										},
										{
											"begin": 832,
											"end": 960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 832,
											"end": 960,
											"name": "tag",
											"source": 17,
											"value": "177"
										},
										{
											"begin": 832,
											"end": 960,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 832,
											"end": 960,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 832,
											"end": 960,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 832,
											"end": 960,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 832,
											"end": 960,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 832,
											"end": 960,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 832,
											"end": 960,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 832,
											"end": 960,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 832,
											"end": 960,
											"name": "tag",
											"source": 17,
											"value": "176"
										},
										{
											"begin": 832,
											"end": 960,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1221,
											"end": 1244,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "180"
										},
										{
											"begin": 1221,
											"end": 1232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 1221,
											"end": 1242,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "181"
										},
										{
											"begin": 1221,
											"end": 1244,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1221,
											"end": 1244,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "180"
										},
										{
											"begin": 1221,
											"end": 1244,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1255,
											"end": 1272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1275,
											"end": 1296,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "182"
										},
										{
											"begin": 1275,
											"end": 1286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 1275,
											"end": 1294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "183"
										},
										{
											"begin": 1275,
											"end": 1296,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1275,
											"end": 1296,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "182"
										},
										{
											"begin": 1275,
											"end": 1296,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1255,
											"end": 1296,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1255,
											"end": 1296,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1309,
											"end": 1329,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "184"
										},
										{
											"begin": 1315,
											"end": 1317,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1319,
											"end": 1328,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1309,
											"end": 1314,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "185"
										},
										{
											"begin": 1309,
											"end": 1329,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1309,
											"end": 1329,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "184"
										},
										{
											"begin": 1309,
											"end": 1329,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1340,
											"end": 1373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "186"
										},
										{
											"begin": 1353,
											"end": 1362,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1364,
											"end": 1372,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1340,
											"end": 1352,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "187"
										},
										{
											"begin": 1340,
											"end": 1373,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1340,
											"end": 1373,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "186"
										},
										{
											"begin": 1340,
											"end": 1373,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1471,
											"end": 1480,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1447,
											"end": 1461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 1447,
											"end": 1468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1462,
											"end": 1467,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1447,
											"end": 1468,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1447,
											"end": 1468,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1447,
											"end": 1468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1447,
											"end": 1468,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1447,
											"end": 1468,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1447,
											"end": 1468,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1447,
											"end": 1468,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1447,
											"end": 1468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1447,
											"end": 1468,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1447,
											"end": 1468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1447,
											"end": 1468,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1447,
											"end": 1480,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1447,
											"end": 1480,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1447,
											"end": 1480,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 1447,
											"end": 1480,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1551,
											"end": 1568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "A"
										},
										{
											"begin": 1551,
											"end": 1579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1569,
											"end": 1578,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1551,
											"end": 1579,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1551,
											"end": 1579,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1551,
											"end": 1579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1551,
											"end": 1579,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1551,
											"end": 1579,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1551,
											"end": 1579,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1551,
											"end": 1579,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1551,
											"end": 1579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1551,
											"end": 1579,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1551,
											"end": 1579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1551,
											"end": 1579,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1585,
											"end": 1594,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1551,
											"end": 1595,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1551,
											"end": 1595,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1551,
											"end": 1595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 1551,
											"end": 1595,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1551,
											"end": 1595,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1551,
											"end": 1595,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1551,
											"end": 1595,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1551,
											"end": 1595,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1551,
											"end": 1595,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 1551,
											"end": 1595,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1551,
											"end": 1595,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1551,
											"end": 1595,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1551,
											"end": 1595,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1551,
											"end": 1595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 1551,
											"end": 1595,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1551,
											"end": 1595,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1551,
											"end": 1595,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1551,
											"end": 1595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1551,
											"end": 1595,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1551,
											"end": 1595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1551,
											"end": 1595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1551,
											"end": 1595,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1551,
											"end": 1595,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1551,
											"end": 1595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1551,
											"end": 1595,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1551,
											"end": 1595,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1551,
											"end": 1595,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1551,
											"end": 1595,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1551,
											"end": 1595,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1551,
											"end": 1595,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1551,
											"end": 1595,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1551,
											"end": 1595,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 1615,
											"end": 1624,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1608,
											"end": 1624,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1608,
											"end": 1624,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1608,
											"end": 1624,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1069,
											"end": 1632,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1069,
											"end": 1632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4073,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1738,
											"name": "PUSH",
											"source": 4,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1709,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 1802,
											"name": "PUSH",
											"source": 4,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1765,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16220,
											"end": 16233,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 16245,
											"end": 16252,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 16236,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 16236,
											"end": 16253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16284,
											"end": 16285,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16267,
											"end": 16272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 16332,
											"end": 16339,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 4,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 16309,
											"end": 16340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16367,
											"end": 16372,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16138,
											"end": 16379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6057,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 6065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14418,
											"end": 14538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8955,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8958,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 8958,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9035,
											"end": 9039,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9177,
											"end": 9178,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9161,
											"end": 9165,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9382,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9441,
											"end": 9442,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9427,
											"end": 9429,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9499,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9555,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9586,
											"end": 9590,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15698,
											"end": 15706,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15765,
											"end": 15773,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 4,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 15743,
											"end": 15774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15832,
											"end": 15840,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15813,
											"end": 15818,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15820,
											"end": 15828,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15877,
											"end": 15885,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15870,
											"end": 15875,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15887,
											"end": 15895,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 15855,
											"end": 15896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17051,
											"end": 17052,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17036,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17088,
											"end": 17090,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 17109,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 17109,
											"end": 17121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17452,
											"end": 17454,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 4,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 17430,
											"end": 17455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17196,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 4,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 17272,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3238,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3174,
											"end": 3266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2754,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2766,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 2823,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2823,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2901,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 2901,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 2878,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1039,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 945,
											"end": 1068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 827,
											"end": 939,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 925,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 918,
											"end": 932,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 911,
											"end": 932,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 911,
											"end": 932,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 827,
											"end": 939,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 827,
											"end": 939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10036,
											"end": 10037,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10022,
											"end": 10024,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 4,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 10061,
											"end": 10094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10114,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 10146,
											"end": 10148,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 10138,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10184,
											"end": 10197,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 4,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 10234,
											"end": 10265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10008,
											"end": 10282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 10282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2035,
											"end": 2044,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2023,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2031,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 2013,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 7,
											"value": "F8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7"
										},
										{
											"begin": 2074,
											"end": 2081,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 2059,
											"end": 2082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1922,
											"end": 2089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5773,
											"end": 5780,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5814,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5707,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14909,
											"end": 14910,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14893,
											"end": 14897,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15109,
											"end": 15110,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15097,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 4,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 15189,
											"end": 15216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15373,
											"end": 15375,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15369,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7269,
											"end": 7270,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7252,
											"end": 7257,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7321,
											"end": 7328,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 4,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 7298,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "tag",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7402,
											"end": 7409,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 4,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 7375,
											"end": 7419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "tag",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 981,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 982,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1017,
											"end": 1021,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 11,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 11
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 11
										},
										{
											"begin": 1154,
											"end": 1157,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 11
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 1227,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1260,
											"end": 1270,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6521,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6633,
											"end": 6640,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 6621,
											"end": 6628,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 6608,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "tag",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12300,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12351,
											"end": 12359,
											"name": "PUSH",
											"source": 14,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12342,
											"end": 12347,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12388,
											"end": 12396,
											"name": "PUSH",
											"source": 14,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 12379,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 14,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 14,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 12495,
											"end": 12512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 14,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 14,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 12611,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 14,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 14,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 12726,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 14,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 14,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 12839,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 12952,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "tag",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 18,
											"value": "318"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 18,
											"value": "319"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 18,
											"value": "320"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 18,
											"value": "321"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 18,
											"value": "322"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "393"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "321"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 18,
											"value": "393"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "394"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 18,
											"value": "394"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 18,
											"value": "323"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "396"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "322"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 18,
											"value": "396"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 18,
											"value": "25"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "398"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "399"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "319"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 18,
											"value": "399"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 18,
											"value": "398"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "400"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "323"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 18,
											"value": "400"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 18,
											"value": "324"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 18,
											"value": "325"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "403"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "324"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 18,
											"value": "403"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 18,
											"value": "28"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "405"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "325"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 18,
											"value": "405"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 18,
											"value": "326"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 18,
											"value": "327"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 18,
											"value": "328"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 18,
											"value": "409"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "411"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "409"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 18,
											"value": "411"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 18,
											"value": "329"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 18,
											"value": "330"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "414"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "326"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 18,
											"value": "414"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "415"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "327"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 18,
											"value": "415"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "416"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "328"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 18,
											"value": "416"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "417"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "329"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 18,
											"value": "417"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "419"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "330"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 18,
											"value": "419"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 18,
											"value": "331"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 18,
											"value": "332"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "422"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "331"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 18,
											"value": "422"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "423"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 18,
											"value": "423"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 18,
											"value": "333"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "425"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "332"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 18,
											"value": "425"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 18,
											"value": "35"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "427"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "428"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "319"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 18,
											"value": "428"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 18,
											"value": "427"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "429"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "333"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 18,
											"value": "429"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 18,
											"value": "334"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 18,
											"value": "335"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "432"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "334"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 18,
											"value": "432"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 18,
											"value": "336"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "434"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "335"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 18,
											"value": "434"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 18,
											"value": "38"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "436"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "336"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 18,
											"value": "436"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 18,
											"value": "337"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "438"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "335"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 18,
											"value": "438"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "439"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 18,
											"value": "439"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 18,
											"value": "338"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "441"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "337"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 18,
											"value": "441"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "443"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "444"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "319"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 18,
											"value": "444"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 18,
											"value": "443"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "445"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "338"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 18,
											"value": "445"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "446"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "333"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 18,
											"value": "446"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "tag",
											"source": 18,
											"value": "45"
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4967,
											"end": 4973,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4983,
											"end": 4989,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5034,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5011,
											"end": 5018,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 5003,
											"end": 5035,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "448"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "449"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "319"
										},
										{
											"begin": 5038,
											"end": 5117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "tag",
											"source": 18,
											"value": "449"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "tag",
											"source": 18,
											"value": "448"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5158,
											"end": 5159,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "450"
										},
										{
											"begin": 5228,
											"end": 5235,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5208,
											"end": 5217,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 5204,
											"end": 5226,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "338"
										},
										{
											"begin": 5183,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "tag",
											"source": 18,
											"value": "450"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5129,
											"end": 5246,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5285,
											"end": 5287,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "451"
										},
										{
											"begin": 5356,
											"end": 5363,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5336,
											"end": 5345,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "338"
										},
										{
											"begin": 5311,
											"end": 5364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "tag",
											"source": 18,
											"value": "451"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5256,
											"end": 5374,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "452"
										},
										{
											"begin": 5484,
											"end": 5491,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5464,
											"end": 5473,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "333"
										},
										{
											"begin": 5439,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "tag",
											"source": 18,
											"value": "452"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5384,
											"end": 5502,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "tag",
											"source": 18,
											"value": "59"
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5574,
											"end": 5580,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5623,
											"end": 5625,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5611,
											"end": 5620,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5598,
											"end": 5621,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 5594,
											"end": 5626,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "454"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "455"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "319"
										},
										{
											"begin": 5629,
											"end": 5708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "tag",
											"source": 18,
											"value": "455"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "tag",
											"source": 18,
											"value": "454"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5749,
											"end": 5750,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "456"
										},
										{
											"begin": 5819,
											"end": 5826,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5810,
											"end": 5816,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5799,
											"end": 5808,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5795,
											"end": 5817,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "338"
										},
										{
											"begin": 5774,
											"end": 5827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "tag",
											"source": 18,
											"value": "456"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5720,
											"end": 5837,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5515,
											"end": 5844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "tag",
											"source": 18,
											"value": "339"
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "458"
										},
										{
											"begin": 5955,
											"end": 5960,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "331"
										},
										{
											"begin": 5937,
											"end": 5961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "tag",
											"source": 18,
											"value": "458"
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5932,
											"end": 5935,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5925,
											"end": 5962,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5850,
											"end": 5968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "tag",
											"source": 18,
											"value": "62"
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6067,
											"end": 6071,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6107,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6094,
											"end": 6103,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "460"
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6184,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6171,
											"end": 6188,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "339"
										},
										{
											"begin": 6118,
											"end": 6189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "tag",
											"source": 18,
											"value": "460"
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5974,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6202,
											"end": 6316,
											"name": "tag",
											"source": 18,
											"value": "340"
										},
										{
											"begin": 6202,
											"end": 6316,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6269,
											"end": 6275,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6303,
											"end": 6308,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6297,
											"end": 6309,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 6287,
											"end": 6309,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6287,
											"end": 6309,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6202,
											"end": 6316,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6202,
											"end": 6316,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6202,
											"end": 6316,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6202,
											"end": 6316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6322,
											"end": 6506,
											"name": "tag",
											"source": 18,
											"value": "341"
										},
										{
											"begin": 6322,
											"end": 6506,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6421,
											"end": 6432,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6455,
											"end": 6461,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6450,
											"end": 6453,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6443,
											"end": 6462,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6495,
											"end": 6499,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6490,
											"end": 6493,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6486,
											"end": 6500,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6471,
											"end": 6500,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6471,
											"end": 6500,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6322,
											"end": 6506,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6322,
											"end": 6506,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6322,
											"end": 6506,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6322,
											"end": 6506,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6322,
											"end": 6506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6512,
											"end": 6644,
											"name": "tag",
											"source": 18,
											"value": "342"
										},
										{
											"begin": 6512,
											"end": 6644,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6579,
											"end": 6583,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6602,
											"end": 6605,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6594,
											"end": 6605,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6594,
											"end": 6605,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6632,
											"end": 6636,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6630,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6623,
											"end": 6637,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6615,
											"end": 6637,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6615,
											"end": 6637,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6512,
											"end": 6644,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6512,
											"end": 6644,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6512,
											"end": 6644,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6512,
											"end": 6644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6650,
											"end": 6758,
											"name": "tag",
											"source": 18,
											"value": "343"
										},
										{
											"begin": 6650,
											"end": 6758,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6727,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "465"
										},
										{
											"begin": 6745,
											"end": 6750,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6727,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "331"
										},
										{
											"begin": 6727,
											"end": 6751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6727,
											"end": 6751,
											"name": "tag",
											"source": 18,
											"value": "465"
										},
										{
											"begin": 6727,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6722,
											"end": 6725,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6715,
											"end": 6752,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6650,
											"end": 6758,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6650,
											"end": 6758,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6650,
											"end": 6758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6764,
											"end": 6943,
											"name": "tag",
											"source": 18,
											"value": "344"
										},
										{
											"begin": 6764,
											"end": 6943,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6833,
											"end": 6843,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6854,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "467"
										},
										{
											"begin": 6896,
											"end": 6899,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6888,
											"end": 6894,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6854,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "343"
										},
										{
											"begin": 6854,
											"end": 6900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6854,
											"end": 6900,
											"name": "tag",
											"source": 18,
											"value": "467"
										},
										{
											"begin": 6854,
											"end": 6900,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6932,
											"end": 6936,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6927,
											"end": 6930,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6923,
											"end": 6937,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6909,
											"end": 6937,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6909,
											"end": 6937,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6764,
											"end": 6943,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6764,
											"end": 6943,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6764,
											"end": 6943,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6764,
											"end": 6943,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6764,
											"end": 6943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6949,
											"end": 7062,
											"name": "tag",
											"source": 18,
											"value": "345"
										},
										{
											"begin": 6949,
											"end": 7062,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7019,
											"end": 7023,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7051,
											"end": 7055,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7046,
											"end": 7049,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7042,
											"end": 7056,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7034,
											"end": 7056,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7034,
											"end": 7056,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6949,
											"end": 7062,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6949,
											"end": 7062,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6949,
											"end": 7062,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6949,
											"end": 7062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7098,
											"end": 7830,
											"name": "tag",
											"source": 18,
											"value": "346"
										},
										{
											"begin": 7098,
											"end": 7830,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7217,
											"end": 7220,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7246,
											"end": 7300,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "470"
										},
										{
											"begin": 7294,
											"end": 7299,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7246,
											"end": 7300,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "340"
										},
										{
											"begin": 7246,
											"end": 7300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7246,
											"end": 7300,
											"name": "tag",
											"source": 18,
											"value": "470"
										},
										{
											"begin": 7246,
											"end": 7300,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7316,
											"end": 7402,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "471"
										},
										{
											"begin": 7395,
											"end": 7401,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7390,
											"end": 7393,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 7316,
											"end": 7402,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "341"
										},
										{
											"begin": 7316,
											"end": 7402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7316,
											"end": 7402,
											"name": "tag",
											"source": 18,
											"value": "471"
										},
										{
											"begin": 7316,
											"end": 7402,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7309,
											"end": 7402,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 7309,
											"end": 7402,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7426,
											"end": 7482,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "472"
										},
										{
											"begin": 7476,
											"end": 7481,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7426,
											"end": 7482,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "342"
										},
										{
											"begin": 7426,
											"end": 7482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7426,
											"end": 7482,
											"name": "tag",
											"source": 18,
											"value": "472"
										},
										{
											"begin": 7426,
											"end": 7482,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7505,
											"end": 7512,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7536,
											"end": 7537,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7521,
											"end": 7805,
											"name": "tag",
											"source": 18,
											"value": "473"
										},
										{
											"begin": 7521,
											"end": 7805,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7546,
											"end": 7552,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7543,
											"end": 7544,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7540,
											"end": 7553,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 7521,
											"end": 7805,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7521,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "475"
										},
										{
											"begin": 7521,
											"end": 7805,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7622,
											"end": 7628,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7616,
											"end": 7629,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 7649,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "476"
										},
										{
											"begin": 7708,
											"end": 7711,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 7693,
											"end": 7706,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7649,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "344"
										},
										{
											"begin": 7649,
											"end": 7712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7649,
											"end": 7712,
											"name": "tag",
											"source": 18,
											"value": "476"
										},
										{
											"begin": 7649,
											"end": 7712,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7642,
											"end": 7712,
											"name": "SWAP8",
											"source": 18
										},
										{
											"begin": 7642,
											"end": 7712,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7735,
											"end": 7795,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "477"
										},
										{
											"begin": 7788,
											"end": 7794,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7735,
											"end": 7795,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "345"
										},
										{
											"begin": 7735,
											"end": 7795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7735,
											"end": 7795,
											"name": "tag",
											"source": 18,
											"value": "477"
										},
										{
											"begin": 7735,
											"end": 7795,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7725,
											"end": 7795,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 7725,
											"end": 7795,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7581,
											"end": 7805,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7568,
											"end": 7569,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 7565,
											"end": 7566,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7561,
											"end": 7570,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7556,
											"end": 7570,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7556,
											"end": 7570,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7521,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "473"
										},
										{
											"begin": 7521,
											"end": 7805,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7521,
											"end": 7805,
											"name": "tag",
											"source": 18,
											"value": "475"
										},
										{
											"begin": 7521,
											"end": 7805,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7525,
											"end": 7539,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7821,
											"end": 7824,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 7814,
											"end": 7824,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 7814,
											"end": 7824,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7222,
											"end": 7830,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7222,
											"end": 7830,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7222,
											"end": 7830,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7098,
											"end": 7830,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 7098,
											"end": 7830,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7098,
											"end": 7830,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7098,
											"end": 7830,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7098,
											"end": 7830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7836,
											"end": 8209,
											"name": "tag",
											"source": 18,
											"value": "74"
										},
										{
											"begin": 7836,
											"end": 8209,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7979,
											"end": 7983,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8017,
											"end": 8019,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8006,
											"end": 8015,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8002,
											"end": 8020,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7994,
											"end": 8020,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7994,
											"end": 8020,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8066,
											"end": 8075,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8060,
											"end": 8064,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8056,
											"end": 8076,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 8052,
											"end": 8053,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8041,
											"end": 8050,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8037,
											"end": 8054,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8030,
											"end": 8077,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8094,
											"end": 8202,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "479"
										},
										{
											"begin": 8197,
											"end": 8201,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8188,
											"end": 8194,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8094,
											"end": 8202,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "346"
										},
										{
											"begin": 8094,
											"end": 8202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8094,
											"end": 8202,
											"name": "tag",
											"source": 18,
											"value": "479"
										},
										{
											"begin": 8094,
											"end": 8202,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8086,
											"end": 8202,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8086,
											"end": 8202,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7836,
											"end": 8209,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 7836,
											"end": 8209,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7836,
											"end": 8209,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7836,
											"end": 8209,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7836,
											"end": 8209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8215,
											"end": 8331,
											"name": "tag",
											"source": 18,
											"value": "347"
										},
										{
											"begin": 8215,
											"end": 8331,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8285,
											"end": 8306,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "481"
										},
										{
											"begin": 8300,
											"end": 8305,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8285,
											"end": 8306,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "324"
										},
										{
											"begin": 8285,
											"end": 8306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8285,
											"end": 8306,
											"name": "tag",
											"source": 18,
											"value": "481"
										},
										{
											"begin": 8285,
											"end": 8306,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8278,
											"end": 8283,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8275,
											"end": 8307,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 8265,
											"end": 8325,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "482"
										},
										{
											"begin": 8265,
											"end": 8325,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8321,
											"end": 8322,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8318,
											"end": 8319,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8311,
											"end": 8323,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 8265,
											"end": 8325,
											"name": "tag",
											"source": 18,
											"value": "482"
										},
										{
											"begin": 8265,
											"end": 8325,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8215,
											"end": 8331,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8215,
											"end": 8331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8337,
											"end": 8470,
											"name": "tag",
											"source": 18,
											"value": "348"
										},
										{
											"begin": 8337,
											"end": 8470,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8380,
											"end": 8385,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8418,
											"end": 8424,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8405,
											"end": 8425,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 8396,
											"end": 8425,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8396,
											"end": 8425,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8434,
											"end": 8464,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "484"
										},
										{
											"begin": 8458,
											"end": 8463,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8434,
											"end": 8464,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "347"
										},
										{
											"begin": 8434,
											"end": 8464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8434,
											"end": 8464,
											"name": "tag",
											"source": 18,
											"value": "484"
										},
										{
											"begin": 8434,
											"end": 8464,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8337,
											"end": 8470,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8337,
											"end": 8470,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8337,
											"end": 8470,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8337,
											"end": 8470,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8337,
											"end": 8470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8476,
											"end": 8944,
											"name": "tag",
											"source": 18,
											"value": "77"
										},
										{
											"begin": 8476,
											"end": 8944,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8541,
											"end": 8547,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8549,
											"end": 8555,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8598,
											"end": 8600,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 8586,
											"end": 8595,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8577,
											"end": 8584,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 8573,
											"end": 8596,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 8569,
											"end": 8601,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 8566,
											"end": 8685,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8566,
											"end": 8685,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "486"
										},
										{
											"begin": 8566,
											"end": 8685,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8604,
											"end": 8683,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "487"
										},
										{
											"begin": 8604,
											"end": 8683,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "319"
										},
										{
											"begin": 8604,
											"end": 8683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8604,
											"end": 8683,
											"name": "tag",
											"source": 18,
											"value": "487"
										},
										{
											"begin": 8604,
											"end": 8683,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8566,
											"end": 8685,
											"name": "tag",
											"source": 18,
											"value": "486"
										},
										{
											"begin": 8566,
											"end": 8685,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8724,
											"end": 8725,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8749,
											"end": 8802,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "488"
										},
										{
											"begin": 8794,
											"end": 8801,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 8785,
											"end": 8791,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8774,
											"end": 8783,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 8770,
											"end": 8792,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8749,
											"end": 8802,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "338"
										},
										{
											"begin": 8749,
											"end": 8802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8749,
											"end": 8802,
											"name": "tag",
											"source": 18,
											"value": "488"
										},
										{
											"begin": 8749,
											"end": 8802,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8739,
											"end": 8802,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8739,
											"end": 8802,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8695,
											"end": 8812,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8851,
											"end": 8853,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8877,
											"end": 8927,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "489"
										},
										{
											"begin": 8919,
											"end": 8926,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 8910,
											"end": 8916,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8899,
											"end": 8908,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 8895,
											"end": 8917,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8877,
											"end": 8927,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "348"
										},
										{
											"begin": 8877,
											"end": 8927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8877,
											"end": 8927,
											"name": "tag",
											"source": 18,
											"value": "489"
										},
										{
											"begin": 8877,
											"end": 8927,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8867,
											"end": 8927,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8867,
											"end": 8927,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8822,
											"end": 8937,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8476,
											"end": 8944,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8476,
											"end": 8944,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8476,
											"end": 8944,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8476,
											"end": 8944,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8476,
											"end": 8944,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8476,
											"end": 8944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8950,
											"end": 9067,
											"name": "tag",
											"source": 18,
											"value": "349"
										},
										{
											"begin": 8950,
											"end": 9067,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9059,
											"end": 9060,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9056,
											"end": 9057,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9049,
											"end": 9061,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 9073,
											"end": 9190,
											"name": "tag",
											"source": 18,
											"value": "350"
										},
										{
											"begin": 9073,
											"end": 9190,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9182,
											"end": 9183,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9179,
											"end": 9180,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9172,
											"end": 9184,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 9196,
											"end": 9376,
											"name": "tag",
											"source": 18,
											"value": "284"
										},
										{
											"begin": 9196,
											"end": 9376,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9244,
											"end": 9321,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9241,
											"end": 9242,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9234,
											"end": 9322,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9341,
											"end": 9345,
											"name": "PUSH",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 9338,
											"end": 9339,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 9331,
											"end": 9346,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9365,
											"end": 9369,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 9362,
											"end": 9363,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9355,
											"end": 9370,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 9382,
											"end": 9663,
											"name": "tag",
											"source": 18,
											"value": "351"
										},
										{
											"begin": 9382,
											"end": 9663,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9465,
											"end": 9492,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "494"
										},
										{
											"begin": 9487,
											"end": 9491,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9465,
											"end": 9492,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "329"
										},
										{
											"begin": 9465,
											"end": 9492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9465,
											"end": 9492,
											"name": "tag",
											"source": 18,
											"value": "494"
										},
										{
											"begin": 9465,
											"end": 9492,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9457,
											"end": 9463,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9453,
											"end": 9493,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9595,
											"end": 9601,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9583,
											"end": 9593,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9580,
											"end": 9602,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 9559,
											"end": 9577,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9547,
											"end": 9557,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9544,
											"end": 9578,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 9541,
											"end": 9603,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 9538,
											"end": 9626,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9538,
											"end": 9626,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "495"
										},
										{
											"begin": 9538,
											"end": 9626,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9606,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "496"
										},
										{
											"begin": 9606,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "284"
										},
										{
											"begin": 9606,
											"end": 9624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9606,
											"end": 9624,
											"name": "tag",
											"source": 18,
											"value": "496"
										},
										{
											"begin": 9606,
											"end": 9624,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9538,
											"end": 9626,
											"name": "tag",
											"source": 18,
											"value": "495"
										},
										{
											"begin": 9538,
											"end": 9626,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9646,
											"end": 9656,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9642,
											"end": 9644,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 9635,
											"end": 9657,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9425,
											"end": 9663,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9382,
											"end": 9663,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9382,
											"end": 9663,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9382,
											"end": 9663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9669,
											"end": 9798,
											"name": "tag",
											"source": 18,
											"value": "352"
										},
										{
											"begin": 9669,
											"end": 9798,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9703,
											"end": 9709,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9730,
											"end": 9750,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "498"
										},
										{
											"begin": 9730,
											"end": 9750,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "318"
										},
										{
											"begin": 9730,
											"end": 9750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9730,
											"end": 9750,
											"name": "tag",
											"source": 18,
											"value": "498"
										},
										{
											"begin": 9730,
											"end": 9750,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9720,
											"end": 9750,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9720,
											"end": 9750,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9759,
											"end": 9792,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "499"
										},
										{
											"begin": 9787,
											"end": 9791,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9779,
											"end": 9785,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9759,
											"end": 9792,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "351"
										},
										{
											"begin": 9759,
											"end": 9792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9759,
											"end": 9792,
											"name": "tag",
											"source": 18,
											"value": "499"
										},
										{
											"begin": 9759,
											"end": 9792,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9669,
											"end": 9798,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9669,
											"end": 9798,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9669,
											"end": 9798,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9669,
											"end": 9798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9804,
											"end": 10111,
											"name": "tag",
											"source": 18,
											"value": "353"
										},
										{
											"begin": 9804,
											"end": 10111,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9865,
											"end": 9869,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9973,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9947,
											"end": 9953,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9944,
											"end": 9974,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 9941,
											"end": 9997,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9941,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "501"
										},
										{
											"begin": 9941,
											"end": 9997,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "502"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "284"
										},
										{
											"begin": 9977,
											"end": 9995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "tag",
											"source": 18,
											"value": "502"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9941,
											"end": 9997,
											"name": "tag",
											"source": 18,
											"value": "501"
										},
										{
											"begin": 9941,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10015,
											"end": 10044,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "503"
										},
										{
											"begin": 10037,
											"end": 10043,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10015,
											"end": 10044,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "329"
										},
										{
											"begin": 10015,
											"end": 10044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10015,
											"end": 10044,
											"name": "tag",
											"source": 18,
											"value": "503"
										},
										{
											"begin": 10015,
											"end": 10044,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10007,
											"end": 10044,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10007,
											"end": 10044,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10099,
											"end": 10103,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10093,
											"end": 10097,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10089,
											"end": 10104,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10081,
											"end": 10104,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10081,
											"end": 10104,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9804,
											"end": 10111,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9804,
											"end": 10111,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9804,
											"end": 10111,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9804,
											"end": 10111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10117,
											"end": 10263,
											"name": "tag",
											"source": 18,
											"value": "354"
										},
										{
											"begin": 10117,
											"end": 10263,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10214,
											"end": 10220,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10209,
											"end": 10212,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10204,
											"end": 10207,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10191,
											"end": 10221,
											"name": "CALLDATACOPY",
											"source": 18
										},
										{
											"begin": 10255,
											"end": 10256,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10246,
											"end": 10252,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10241,
											"end": 10244,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10237,
											"end": 10253,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10230,
											"end": 10257,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10117,
											"end": 10263,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10117,
											"end": 10263,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10117,
											"end": 10263,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10117,
											"end": 10263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10269,
											"end": 10692,
											"name": "tag",
											"source": 18,
											"value": "355"
										},
										{
											"begin": 10269,
											"end": 10692,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10346,
											"end": 10351,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10371,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "506"
										},
										{
											"begin": 10387,
											"end": 10435,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "507"
										},
										{
											"begin": 10428,
											"end": 10434,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10387,
											"end": 10435,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "353"
										},
										{
											"begin": 10387,
											"end": 10435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10387,
											"end": 10435,
											"name": "tag",
											"source": 18,
											"value": "507"
										},
										{
											"begin": 10387,
											"end": 10435,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10371,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "352"
										},
										{
											"begin": 10371,
											"end": 10436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10371,
											"end": 10436,
											"name": "tag",
											"source": 18,
											"value": "506"
										},
										{
											"begin": 10371,
											"end": 10436,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10362,
											"end": 10436,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10362,
											"end": 10436,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10459,
											"end": 10465,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10452,
											"end": 10457,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10445,
											"end": 10466,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10497,
											"end": 10501,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10490,
											"end": 10495,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10486,
											"end": 10502,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10535,
											"end": 10538,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10526,
											"end": 10532,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10521,
											"end": 10524,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10517,
											"end": 10533,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10514,
											"end": 10539,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 10511,
											"end": 10623,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10511,
											"end": 10623,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "508"
										},
										{
											"begin": 10511,
											"end": 10623,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10542,
											"end": 10621,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "509"
										},
										{
											"begin": 10542,
											"end": 10621,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "350"
										},
										{
											"begin": 10542,
											"end": 10621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10542,
											"end": 10621,
											"name": "tag",
											"source": 18,
											"value": "509"
										},
										{
											"begin": 10542,
											"end": 10621,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10511,
											"end": 10623,
											"name": "tag",
											"source": 18,
											"value": "508"
										},
										{
											"begin": 10511,
											"end": 10623,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10632,
											"end": 10686,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "510"
										},
										{
											"begin": 10679,
											"end": 10685,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10674,
											"end": 10677,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10669,
											"end": 10672,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 10632,
											"end": 10686,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "354"
										},
										{
											"begin": 10632,
											"end": 10686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10632,
											"end": 10686,
											"name": "tag",
											"source": 18,
											"value": "510"
										},
										{
											"begin": 10632,
											"end": 10686,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10352,
											"end": 10692,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10269,
											"end": 10692,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 10269,
											"end": 10692,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10269,
											"end": 10692,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10269,
											"end": 10692,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10269,
											"end": 10692,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10269,
											"end": 10692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10711,
											"end": 11049,
											"name": "tag",
											"source": 18,
											"value": "356"
										},
										{
											"begin": 10711,
											"end": 11049,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10766,
											"end": 10771,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10815,
											"end": 10818,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10808,
											"end": 10812,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 10800,
											"end": 10806,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10796,
											"end": 10813,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10792,
											"end": 10819,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 10782,
											"end": 10904,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "512"
										},
										{
											"begin": 10782,
											"end": 10904,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10823,
											"end": 10902,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "513"
										},
										{
											"begin": 10823,
											"end": 10902,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "349"
										},
										{
											"begin": 10823,
											"end": 10902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10823,
											"end": 10902,
											"name": "tag",
											"source": 18,
											"value": "513"
										},
										{
											"begin": 10823,
											"end": 10902,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10782,
											"end": 10904,
											"name": "tag",
											"source": 18,
											"value": "512"
										},
										{
											"begin": 10782,
											"end": 10904,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10940,
											"end": 10946,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10927,
											"end": 10947,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 10965,
											"end": 11043,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "514"
										},
										{
											"begin": 11039,
											"end": 11042,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 11031,
											"end": 11037,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11024,
											"end": 11028,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 11016,
											"end": 11022,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 11012,
											"end": 11029,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10965,
											"end": 11043,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "355"
										},
										{
											"begin": 10965,
											"end": 11043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10965,
											"end": 11043,
											"name": "tag",
											"source": 18,
											"value": "514"
										},
										{
											"begin": 10965,
											"end": 11043,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10956,
											"end": 11043,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10956,
											"end": 11043,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10772,
											"end": 11049,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10711,
											"end": 11049,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10711,
											"end": 11049,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10711,
											"end": 11049,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10711,
											"end": 11049,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10711,
											"end": 11049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11055,
											"end": 11998,
											"name": "tag",
											"source": 18,
											"value": "81"
										},
										{
											"begin": 11055,
											"end": 11998,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11150,
											"end": 11156,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11158,
											"end": 11164,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 11166,
											"end": 11172,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11174,
											"end": 11180,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 11223,
											"end": 11226,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 11211,
											"end": 11220,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 11202,
											"end": 11209,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 11198,
											"end": 11221,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 11194,
											"end": 11227,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 11191,
											"end": 11311,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 11191,
											"end": 11311,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "516"
										},
										{
											"begin": 11191,
											"end": 11311,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 11230,
											"end": 11309,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "517"
										},
										{
											"begin": 11230,
											"end": 11309,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "319"
										},
										{
											"begin": 11230,
											"end": 11309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11230,
											"end": 11309,
											"name": "tag",
											"source": 18,
											"value": "517"
										},
										{
											"begin": 11230,
											"end": 11309,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11191,
											"end": 11311,
											"name": "tag",
											"source": 18,
											"value": "516"
										},
										{
											"begin": 11191,
											"end": 11311,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11350,
											"end": 11351,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11375,
											"end": 11428,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "518"
										},
										{
											"begin": 11420,
											"end": 11427,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 11411,
											"end": 11417,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11400,
											"end": 11409,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 11396,
											"end": 11418,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11375,
											"end": 11428,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "338"
										},
										{
											"begin": 11375,
											"end": 11428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11375,
											"end": 11428,
											"name": "tag",
											"source": 18,
											"value": "518"
										},
										{
											"begin": 11375,
											"end": 11428,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11365,
											"end": 11428,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 11365,
											"end": 11428,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11321,
											"end": 11438,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11477,
											"end": 11479,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 11503,
											"end": 11556,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "519"
										},
										{
											"begin": 11548,
											"end": 11555,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 11539,
											"end": 11545,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11528,
											"end": 11537,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 11524,
											"end": 11546,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11503,
											"end": 11556,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "338"
										},
										{
											"begin": 11503,
											"end": 11556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11503,
											"end": 11556,
											"name": "tag",
											"source": 18,
											"value": "519"
										},
										{
											"begin": 11503,
											"end": 11556,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11493,
											"end": 11556,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 11493,
											"end": 11556,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11448,
											"end": 11566,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11605,
											"end": 11607,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 11631,
											"end": 11684,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "520"
										},
										{
											"begin": 11676,
											"end": 11683,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 11667,
											"end": 11673,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11656,
											"end": 11665,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 11652,
											"end": 11674,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11631,
											"end": 11684,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "333"
										},
										{
											"begin": 11631,
											"end": 11684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11631,
											"end": 11684,
											"name": "tag",
											"source": 18,
											"value": "520"
										},
										{
											"begin": 11631,
											"end": 11684,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11621,
											"end": 11684,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 11621,
											"end": 11684,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11576,
											"end": 11694,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11761,
											"end": 11763,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 11750,
											"end": 11759,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 11746,
											"end": 11764,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11733,
											"end": 11765,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 11792,
											"end": 11810,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11784,
											"end": 11790,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11781,
											"end": 11811,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 11778,
											"end": 11895,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 11778,
											"end": 11895,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "521"
										},
										{
											"begin": 11778,
											"end": 11895,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 11814,
											"end": 11893,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "522"
										},
										{
											"begin": 11814,
											"end": 11893,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "320"
										},
										{
											"begin": 11814,
											"end": 11893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11814,
											"end": 11893,
											"name": "tag",
											"source": 18,
											"value": "522"
										},
										{
											"begin": 11814,
											"end": 11893,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11778,
											"end": 11895,
											"name": "tag",
											"source": 18,
											"value": "521"
										},
										{
											"begin": 11778,
											"end": 11895,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11919,
											"end": 11981,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "523"
										},
										{
											"begin": 11973,
											"end": 11980,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 11964,
											"end": 11970,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11953,
											"end": 11962,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 11949,
											"end": 11971,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11919,
											"end": 11981,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "356"
										},
										{
											"begin": 11919,
											"end": 11981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11919,
											"end": 11981,
											"name": "tag",
											"source": 18,
											"value": "523"
										},
										{
											"begin": 11919,
											"end": 11981,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11909,
											"end": 11981,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11909,
											"end": 11981,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11704,
											"end": 11991,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11055,
											"end": 11998,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 11055,
											"end": 11998,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 11055,
											"end": 11998,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11055,
											"end": 11998,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 11055,
											"end": 11998,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11055,
											"end": 11998,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 11055,
											"end": 11998,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11055,
											"end": 11998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12004,
											"end": 12312,
											"name": "tag",
											"source": 18,
											"value": "357"
										},
										{
											"begin": 12004,
											"end": 12312,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12066,
											"end": 12070,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12156,
											"end": 12174,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12148,
											"end": 12154,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12145,
											"end": 12175,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 12142,
											"end": 12198,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 12142,
											"end": 12198,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "525"
										},
										{
											"begin": 12142,
											"end": 12198,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "526"
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "284"
										},
										{
											"begin": 12178,
											"end": 12196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "tag",
											"source": 18,
											"value": "526"
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12142,
											"end": 12198,
											"name": "tag",
											"source": 18,
											"value": "525"
										},
										{
											"begin": 12142,
											"end": 12198,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12216,
											"end": 12245,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "527"
										},
										{
											"begin": 12238,
											"end": 12244,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12216,
											"end": 12245,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "329"
										},
										{
											"begin": 12216,
											"end": 12245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12216,
											"end": 12245,
											"name": "tag",
											"source": 18,
											"value": "527"
										},
										{
											"begin": 12216,
											"end": 12245,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12208,
											"end": 12245,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12208,
											"end": 12245,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12300,
											"end": 12304,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12294,
											"end": 12298,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12290,
											"end": 12305,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12282,
											"end": 12305,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12282,
											"end": 12305,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12004,
											"end": 12312,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12004,
											"end": 12312,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12004,
											"end": 12312,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12004,
											"end": 12312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12318,
											"end": 12743,
											"name": "tag",
											"source": 18,
											"value": "358"
										},
										{
											"begin": 12318,
											"end": 12743,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12396,
											"end": 12401,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12421,
											"end": 12487,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 12437,
											"end": 12486,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "530"
										},
										{
											"begin": 12479,
											"end": 12485,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12437,
											"end": 12486,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "357"
										},
										{
											"begin": 12437,
											"end": 12486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12437,
											"end": 12486,
											"name": "tag",
											"source": 18,
											"value": "530"
										},
										{
											"begin": 12437,
											"end": 12486,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12421,
											"end": 12487,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "352"
										},
										{
											"begin": 12421,
											"end": 12487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12421,
											"end": 12487,
											"name": "tag",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 12421,
											"end": 12487,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12412,
											"end": 12487,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12412,
											"end": 12487,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12510,
											"end": 12516,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12503,
											"end": 12508,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12496,
											"end": 12517,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12548,
											"end": 12552,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12541,
											"end": 12546,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12537,
											"end": 12553,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12586,
											"end": 12589,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12577,
											"end": 12583,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12572,
											"end": 12575,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12568,
											"end": 12584,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12565,
											"end": 12590,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 12562,
											"end": 12674,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 12562,
											"end": 12674,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "531"
										},
										{
											"begin": 12562,
											"end": 12674,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 12593,
											"end": 12672,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "532"
										},
										{
											"begin": 12593,
											"end": 12672,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "350"
										},
										{
											"begin": 12593,
											"end": 12672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12593,
											"end": 12672,
											"name": "tag",
											"source": 18,
											"value": "532"
										},
										{
											"begin": 12593,
											"end": 12672,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12562,
											"end": 12674,
											"name": "tag",
											"source": 18,
											"value": "531"
										},
										{
											"begin": 12562,
											"end": 12674,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12683,
											"end": 12737,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "533"
										},
										{
											"begin": 12730,
											"end": 12736,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12725,
											"end": 12728,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12720,
											"end": 12723,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 12683,
											"end": 12737,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "354"
										},
										{
											"begin": 12683,
											"end": 12737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12683,
											"end": 12737,
											"name": "tag",
											"source": 18,
											"value": "533"
										},
										{
											"begin": 12683,
											"end": 12737,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12402,
											"end": 12743,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12318,
											"end": 12743,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 12318,
											"end": 12743,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 12318,
											"end": 12743,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12318,
											"end": 12743,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12318,
											"end": 12743,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12318,
											"end": 12743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12763,
											"end": 13103,
											"name": "tag",
											"source": 18,
											"value": "359"
										},
										{
											"begin": 12763,
											"end": 13103,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12819,
											"end": 12824,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12868,
											"end": 12871,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12861,
											"end": 12865,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 12853,
											"end": 12859,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12849,
											"end": 12866,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12845,
											"end": 12872,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 12835,
											"end": 12957,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "535"
										},
										{
											"begin": 12835,
											"end": 12957,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 12876,
											"end": 12955,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "536"
										},
										{
											"begin": 12876,
											"end": 12955,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "349"
										},
										{
											"begin": 12876,
											"end": 12955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12876,
											"end": 12955,
											"name": "tag",
											"source": 18,
											"value": "536"
										},
										{
											"begin": 12876,
											"end": 12955,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12835,
											"end": 12957,
											"name": "tag",
											"source": 18,
											"value": "535"
										},
										{
											"begin": 12835,
											"end": 12957,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12993,
											"end": 12999,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12980,
											"end": 13000,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 13018,
											"end": 13097,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "537"
										},
										{
											"begin": 13093,
											"end": 13096,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 13085,
											"end": 13091,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13078,
											"end": 13082,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 13070,
											"end": 13076,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 13066,
											"end": 13083,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13018,
											"end": 13097,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "358"
										},
										{
											"begin": 13018,
											"end": 13097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13018,
											"end": 13097,
											"name": "tag",
											"source": 18,
											"value": "537"
										},
										{
											"begin": 13018,
											"end": 13097,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13009,
											"end": 13097,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13009,
											"end": 13097,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12825,
											"end": 13103,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12763,
											"end": 13103,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 12763,
											"end": 13103,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12763,
											"end": 13103,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12763,
											"end": 13103,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12763,
											"end": 13103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13109,
											"end": 14054,
											"name": "tag",
											"source": 18,
											"value": "89"
										},
										{
											"begin": 13109,
											"end": 14054,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13205,
											"end": 13211,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13213,
											"end": 13219,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 13221,
											"end": 13227,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13229,
											"end": 13235,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 13278,
											"end": 13281,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 13266,
											"end": 13275,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 13257,
											"end": 13264,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 13253,
											"end": 13276,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 13249,
											"end": 13282,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 13246,
											"end": 13366,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 13246,
											"end": 13366,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "539"
										},
										{
											"begin": 13246,
											"end": 13366,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 13285,
											"end": 13364,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "540"
										},
										{
											"begin": 13285,
											"end": 13364,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "319"
										},
										{
											"begin": 13285,
											"end": 13364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13285,
											"end": 13364,
											"name": "tag",
											"source": 18,
											"value": "540"
										},
										{
											"begin": 13285,
											"end": 13364,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13246,
											"end": 13366,
											"name": "tag",
											"source": 18,
											"value": "539"
										},
										{
											"begin": 13246,
											"end": 13366,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13405,
											"end": 13406,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13430,
											"end": 13483,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "541"
										},
										{
											"begin": 13475,
											"end": 13482,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 13466,
											"end": 13472,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13455,
											"end": 13464,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 13451,
											"end": 13473,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13430,
											"end": 13483,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "338"
										},
										{
											"begin": 13430,
											"end": 13483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13430,
											"end": 13483,
											"name": "tag",
											"source": 18,
											"value": "541"
										},
										{
											"begin": 13430,
											"end": 13483,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13420,
											"end": 13483,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 13420,
											"end": 13483,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13376,
											"end": 13493,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13560,
											"end": 13562,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 13549,
											"end": 13558,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 13545,
											"end": 13563,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13532,
											"end": 13564,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 13591,
											"end": 13609,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13583,
											"end": 13589,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13580,
											"end": 13610,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 13577,
											"end": 13694,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 13577,
											"end": 13694,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "542"
										},
										{
											"begin": 13577,
											"end": 13694,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 13613,
											"end": 13692,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "543"
										},
										{
											"begin": 13613,
											"end": 13692,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "320"
										},
										{
											"begin": 13613,
											"end": 13692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13613,
											"end": 13692,
											"name": "tag",
											"source": 18,
											"value": "543"
										},
										{
											"begin": 13613,
											"end": 13692,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13577,
											"end": 13694,
											"name": "tag",
											"source": 18,
											"value": "542"
										},
										{
											"begin": 13577,
											"end": 13694,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13718,
											"end": 13781,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "544"
										},
										{
											"begin": 13773,
											"end": 13780,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 13764,
											"end": 13770,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13753,
											"end": 13762,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 13749,
											"end": 13771,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13718,
											"end": 13781,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "359"
										},
										{
											"begin": 13718,
											"end": 13781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13718,
											"end": 13781,
											"name": "tag",
											"source": 18,
											"value": "544"
										},
										{
											"begin": 13718,
											"end": 13781,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13708,
											"end": 13781,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 13708,
											"end": 13781,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13503,
											"end": 13791,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13830,
											"end": 13832,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 13856,
											"end": 13909,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "545"
										},
										{
											"begin": 13901,
											"end": 13908,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 13892,
											"end": 13898,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13881,
											"end": 13890,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 13877,
											"end": 13899,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13856,
											"end": 13909,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "333"
										},
										{
											"begin": 13856,
											"end": 13909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13856,
											"end": 13909,
											"name": "tag",
											"source": 18,
											"value": "545"
										},
										{
											"begin": 13856,
											"end": 13909,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13846,
											"end": 13909,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 13846,
											"end": 13909,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13801,
											"end": 13919,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13958,
											"end": 13960,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 13984,
											"end": 14037,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "546"
										},
										{
											"begin": 14029,
											"end": 14036,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 14020,
											"end": 14026,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14009,
											"end": 14018,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 14005,
											"end": 14027,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13984,
											"end": 14037,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "333"
										},
										{
											"begin": 13984,
											"end": 14037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13984,
											"end": 14037,
											"name": "tag",
											"source": 18,
											"value": "546"
										},
										{
											"begin": 13984,
											"end": 14037,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13974,
											"end": 14037,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13974,
											"end": 14037,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13929,
											"end": 14047,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13109,
											"end": 14054,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 13109,
											"end": 14054,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 13109,
											"end": 14054,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13109,
											"end": 14054,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 13109,
											"end": 14054,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13109,
											"end": 14054,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 13109,
											"end": 14054,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13109,
											"end": 14054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14060,
											"end": 14534,
											"name": "tag",
											"source": 18,
											"value": "94"
										},
										{
											"begin": 14060,
											"end": 14534,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14128,
											"end": 14134,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14136,
											"end": 14142,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 14185,
											"end": 14187,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 14173,
											"end": 14182,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 14164,
											"end": 14171,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 14160,
											"end": 14183,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 14156,
											"end": 14188,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 14153,
											"end": 14272,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 14153,
											"end": 14272,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "548"
										},
										{
											"begin": 14153,
											"end": 14272,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 14191,
											"end": 14270,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "549"
										},
										{
											"begin": 14191,
											"end": 14270,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "319"
										},
										{
											"begin": 14191,
											"end": 14270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14191,
											"end": 14270,
											"name": "tag",
											"source": 18,
											"value": "549"
										},
										{
											"begin": 14191,
											"end": 14270,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14153,
											"end": 14272,
											"name": "tag",
											"source": 18,
											"value": "548"
										},
										{
											"begin": 14153,
											"end": 14272,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14311,
											"end": 14312,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14336,
											"end": 14389,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "550"
										},
										{
											"begin": 14381,
											"end": 14388,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 14372,
											"end": 14378,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14361,
											"end": 14370,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 14357,
											"end": 14379,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14336,
											"end": 14389,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "338"
										},
										{
											"begin": 14336,
											"end": 14389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14336,
											"end": 14389,
											"name": "tag",
											"source": 18,
											"value": "550"
										},
										{
											"begin": 14336,
											"end": 14389,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14326,
											"end": 14389,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 14326,
											"end": 14389,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14282,
											"end": 14399,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14438,
											"end": 14440,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 14464,
											"end": 14517,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "551"
										},
										{
											"begin": 14509,
											"end": 14516,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 14500,
											"end": 14506,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14489,
											"end": 14498,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 14485,
											"end": 14507,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14464,
											"end": 14517,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "338"
										},
										{
											"begin": 14464,
											"end": 14517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14464,
											"end": 14517,
											"name": "tag",
											"source": 18,
											"value": "551"
										},
										{
											"begin": 14464,
											"end": 14517,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14454,
											"end": 14517,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14454,
											"end": 14517,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14409,
											"end": 14527,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14060,
											"end": 14534,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 14060,
											"end": 14534,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14060,
											"end": 14534,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 14060,
											"end": 14534,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14060,
											"end": 14534,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14060,
											"end": 14534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14540,
											"end": 14720,
											"name": "tag",
											"source": 18,
											"value": "360"
										},
										{
											"begin": 14540,
											"end": 14720,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14588,
											"end": 14665,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14585,
											"end": 14586,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14578,
											"end": 14666,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 14685,
											"end": 14689,
											"name": "PUSH",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 14682,
											"end": 14683,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 14675,
											"end": 14690,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 14709,
											"end": 14713,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 14706,
											"end": 14707,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14699,
											"end": 14714,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 14726,
											"end": 15046,
											"name": "tag",
											"source": 18,
											"value": "103"
										},
										{
											"begin": 14726,
											"end": 15046,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14770,
											"end": 14776,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14807,
											"end": 14808,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 14801,
											"end": 14805,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14797,
											"end": 14809,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 14787,
											"end": 14809,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14787,
											"end": 14809,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14854,
											"end": 14855,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 14848,
											"end": 14852,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14844,
											"end": 14856,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 14875,
											"end": 14893,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 14865,
											"end": 14946,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "554"
										},
										{
											"begin": 14865,
											"end": 14946,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 14931,
											"end": 14935,
											"name": "PUSH",
											"source": 18,
											"value": "7F"
										},
										{
											"begin": 14923,
											"end": 14929,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14919,
											"end": 14936,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 14909,
											"end": 14936,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14909,
											"end": 14936,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14865,
											"end": 14946,
											"name": "tag",
											"source": 18,
											"value": "554"
										},
										{
											"begin": 14865,
											"end": 14946,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14993,
											"end": 14995,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 14985,
											"end": 14991,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14982,
											"end": 14996,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 14962,
											"end": 14980,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14959,
											"end": 14997,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 14956,
											"end": 15040,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "555"
										},
										{
											"begin": 14956,
											"end": 15040,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 15012,
											"end": 15030,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "556"
										},
										{
											"begin": 15012,
											"end": 15030,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "360"
										},
										{
											"begin": 15012,
											"end": 15030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15012,
											"end": 15030,
											"name": "tag",
											"source": 18,
											"value": "556"
										},
										{
											"begin": 15012,
											"end": 15030,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14956,
											"end": 15040,
											"name": "tag",
											"source": 18,
											"value": "555"
										},
										{
											"begin": 14956,
											"end": 15040,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14777,
											"end": 15046,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14726,
											"end": 15046,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14726,
											"end": 15046,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14726,
											"end": 15046,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14726,
											"end": 15046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15052,
											"end": 15494,
											"name": "tag",
											"source": 18,
											"value": "126"
										},
										{
											"begin": 15052,
											"end": 15494,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15201,
											"end": 15205,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15239,
											"end": 15241,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 15228,
											"end": 15237,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15224,
											"end": 15242,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15216,
											"end": 15242,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15216,
											"end": 15242,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15252,
											"end": 15323,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "558"
										},
										{
											"begin": 15320,
											"end": 15321,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15309,
											"end": 15318,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 15305,
											"end": 15322,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15296,
											"end": 15302,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 15252,
											"end": 15323,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "336"
										},
										{
											"begin": 15252,
											"end": 15323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15252,
											"end": 15323,
											"name": "tag",
											"source": 18,
											"value": "558"
										},
										{
											"begin": 15252,
											"end": 15323,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15333,
											"end": 15405,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "559"
										},
										{
											"begin": 15401,
											"end": 15403,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 15390,
											"end": 15399,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 15386,
											"end": 15404,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15377,
											"end": 15383,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 15333,
											"end": 15405,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "339"
										},
										{
											"begin": 15333,
											"end": 15405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15333,
											"end": 15405,
											"name": "tag",
											"source": 18,
											"value": "559"
										},
										{
											"begin": 15333,
											"end": 15405,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15415,
											"end": 15487,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "560"
										},
										{
											"begin": 15483,
											"end": 15485,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 15472,
											"end": 15481,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 15468,
											"end": 15486,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15459,
											"end": 15465,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 15415,
											"end": 15487,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "336"
										},
										{
											"begin": 15415,
											"end": 15487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15415,
											"end": 15487,
											"name": "tag",
											"source": 18,
											"value": "560"
										},
										{
											"begin": 15415,
											"end": 15487,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15052,
											"end": 15494,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 15052,
											"end": 15494,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 15052,
											"end": 15494,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15052,
											"end": 15494,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15052,
											"end": 15494,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15052,
											"end": 15494,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15052,
											"end": 15494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15500,
											"end": 15669,
											"name": "tag",
											"source": 18,
											"value": "361"
										},
										{
											"begin": 15500,
											"end": 15669,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15640,
											"end": 15661,
											"name": "PUSH",
											"source": 18,
											"value": "4E6F204E465420666F7220746869732062757300000000000000000000000000"
										},
										{
											"begin": 15636,
											"end": 15637,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15628,
											"end": 15634,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15624,
											"end": 15638,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15617,
											"end": 15662,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 15500,
											"end": 15669,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15500,
											"end": 15669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15675,
											"end": 16041,
											"name": "tag",
											"source": 18,
											"value": "362"
										},
										{
											"begin": 15675,
											"end": 16041,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15817,
											"end": 15820,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15838,
											"end": 15905,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "563"
										},
										{
											"begin": 15902,
											"end": 15904,
											"name": "PUSH",
											"source": 18,
											"value": "13"
										},
										{
											"begin": 15897,
											"end": 15900,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 15838,
											"end": 15905,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "327"
										},
										{
											"begin": 15838,
											"end": 15905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15838,
											"end": 15905,
											"name": "tag",
											"source": 18,
											"value": "563"
										},
										{
											"begin": 15838,
											"end": 15905,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15831,
											"end": 15905,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15831,
											"end": 15905,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15914,
											"end": 16007,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "564"
										},
										{
											"begin": 16003,
											"end": 16006,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15914,
											"end": 16007,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "361"
										},
										{
											"begin": 15914,
											"end": 16007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15914,
											"end": 16007,
											"name": "tag",
											"source": 18,
											"value": "564"
										},
										{
											"begin": 15914,
											"end": 16007,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16032,
											"end": 16034,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 16027,
											"end": 16030,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16023,
											"end": 16035,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16016,
											"end": 16035,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16016,
											"end": 16035,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15675,
											"end": 16041,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15675,
											"end": 16041,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15675,
											"end": 16041,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15675,
											"end": 16041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16047,
											"end": 16466,
											"name": "tag",
											"source": 18,
											"value": "137"
										},
										{
											"begin": 16047,
											"end": 16466,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16213,
											"end": 16217,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16251,
											"end": 16253,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 16240,
											"end": 16249,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16236,
											"end": 16254,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16228,
											"end": 16254,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16228,
											"end": 16254,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16300,
											"end": 16309,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 16294,
											"end": 16298,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 16290,
											"end": 16310,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 16286,
											"end": 16287,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16275,
											"end": 16284,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 16271,
											"end": 16288,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16264,
											"end": 16311,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 16328,
											"end": 16459,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "566"
										},
										{
											"begin": 16454,
											"end": 16458,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 16328,
											"end": 16459,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "362"
										},
										{
											"begin": 16328,
											"end": 16459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16328,
											"end": 16459,
											"name": "tag",
											"source": 18,
											"value": "566"
										},
										{
											"begin": 16328,
											"end": 16459,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16320,
											"end": 16459,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16320,
											"end": 16459,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16047,
											"end": 16466,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 16047,
											"end": 16466,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16047,
											"end": 16466,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16047,
											"end": 16466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16472,
											"end": 16620,
											"name": "tag",
											"source": 18,
											"value": "363"
										},
										{
											"begin": 16472,
											"end": 16620,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16574,
											"end": 16585,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16611,
											"end": 16614,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 16596,
											"end": 16614,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16596,
											"end": 16614,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16472,
											"end": 16620,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 16472,
											"end": 16620,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 16472,
											"end": 16620,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16472,
											"end": 16620,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16472,
											"end": 16620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16626,
											"end": 17016,
											"name": "tag",
											"source": 18,
											"value": "364"
										},
										{
											"begin": 16626,
											"end": 17016,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16732,
											"end": 16735,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16760,
											"end": 16799,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "569"
										},
										{
											"begin": 16793,
											"end": 16798,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16760,
											"end": 16799,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "326"
										},
										{
											"begin": 16760,
											"end": 16799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16760,
											"end": 16799,
											"name": "tag",
											"source": 18,
											"value": "569"
										},
										{
											"begin": 16760,
											"end": 16799,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16815,
											"end": 16904,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "570"
										},
										{
											"begin": 16897,
											"end": 16903,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 16892,
											"end": 16895,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 16815,
											"end": 16904,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "363"
										},
										{
											"begin": 16815,
											"end": 16904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16815,
											"end": 16904,
											"name": "tag",
											"source": 18,
											"value": "570"
										},
										{
											"begin": 16815,
											"end": 16904,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16808,
											"end": 16904,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 16808,
											"end": 16904,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16913,
											"end": 16978,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "571"
										},
										{
											"begin": 16971,
											"end": 16977,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 16966,
											"end": 16969,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 16959,
											"end": 16963,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 16952,
											"end": 16957,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 16948,
											"end": 16964,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16913,
											"end": 16978,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "328"
										},
										{
											"begin": 16913,
											"end": 16978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16913,
											"end": 16978,
											"name": "tag",
											"source": 18,
											"value": "571"
										},
										{
											"begin": 16913,
											"end": 16978,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17003,
											"end": 17009,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 16998,
											"end": 17001,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 16994,
											"end": 17010,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16987,
											"end": 17010,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 16987,
											"end": 17010,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16736,
											"end": 17016,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16626,
											"end": 17016,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 16626,
											"end": 17016,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 16626,
											"end": 17016,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16626,
											"end": 17016,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16626,
											"end": 17016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17022,
											"end": 17457,
											"name": "tag",
											"source": 18,
											"value": "167"
										},
										{
											"begin": 17022,
											"end": 17457,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17202,
											"end": 17205,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17224,
											"end": 17319,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "573"
										},
										{
											"begin": 17315,
											"end": 17318,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17306,
											"end": 17312,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 17224,
											"end": 17319,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "364"
										},
										{
											"begin": 17224,
											"end": 17319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17224,
											"end": 17319,
											"name": "tag",
											"source": 18,
											"value": "573"
										},
										{
											"begin": 17224,
											"end": 17319,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17217,
											"end": 17319,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17217,
											"end": 17319,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17336,
											"end": 17431,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "574"
										},
										{
											"begin": 17427,
											"end": 17430,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17418,
											"end": 17424,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 17336,
											"end": 17431,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "364"
										},
										{
											"begin": 17336,
											"end": 17431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17336,
											"end": 17431,
											"name": "tag",
											"source": 18,
											"value": "574"
										},
										{
											"begin": 17336,
											"end": 17431,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17329,
											"end": 17431,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17329,
											"end": 17431,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17448,
											"end": 17451,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17441,
											"end": 17451,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17441,
											"end": 17451,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17022,
											"end": 17457,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 17022,
											"end": 17457,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 17022,
											"end": 17457,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17022,
											"end": 17457,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17022,
											"end": 17457,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17022,
											"end": 17457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17463,
											"end": 17600,
											"name": "tag",
											"source": 18,
											"value": "365"
										},
										{
											"begin": 17463,
											"end": 17600,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17517,
											"end": 17522,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17548,
											"end": 17554,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17542,
											"end": 17555,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 17533,
											"end": 17555,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17533,
											"end": 17555,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17564,
											"end": 17594,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "576"
										},
										{
											"begin": 17588,
											"end": 17593,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17564,
											"end": 17594,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "347"
										},
										{
											"begin": 17564,
											"end": 17594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17564,
											"end": 17594,
											"name": "tag",
											"source": 18,
											"value": "576"
										},
										{
											"begin": 17564,
											"end": 17594,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17463,
											"end": 17600,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 17463,
											"end": 17600,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17463,
											"end": 17600,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17463,
											"end": 17600,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17463,
											"end": 17600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17606,
											"end": 17951,
											"name": "tag",
											"source": 18,
											"value": "175"
										},
										{
											"begin": 17606,
											"end": 17951,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17673,
											"end": 17679,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17722,
											"end": 17724,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 17710,
											"end": 17719,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17701,
											"end": 17708,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 17697,
											"end": 17720,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 17693,
											"end": 17725,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 17690,
											"end": 17809,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 17690,
											"end": 17809,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "578"
										},
										{
											"begin": 17690,
											"end": 17809,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 17728,
											"end": 17807,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "579"
										},
										{
											"begin": 17728,
											"end": 17807,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "319"
										},
										{
											"begin": 17728,
											"end": 17807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17728,
											"end": 17807,
											"name": "tag",
											"source": 18,
											"value": "579"
										},
										{
											"begin": 17728,
											"end": 17807,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17690,
											"end": 17809,
											"name": "tag",
											"source": 18,
											"value": "578"
										},
										{
											"begin": 17690,
											"end": 17809,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17848,
											"end": 17849,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17873,
											"end": 17934,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "580"
										},
										{
											"begin": 17926,
											"end": 17933,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 17917,
											"end": 17923,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17906,
											"end": 17915,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 17902,
											"end": 17924,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17873,
											"end": 17934,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "365"
										},
										{
											"begin": 17873,
											"end": 17934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17873,
											"end": 17934,
											"name": "tag",
											"source": 18,
											"value": "580"
										},
										{
											"begin": 17873,
											"end": 17934,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17863,
											"end": 17934,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17863,
											"end": 17934,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17819,
											"end": 17944,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17606,
											"end": 17951,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 17606,
											"end": 17951,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17606,
											"end": 17951,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17606,
											"end": 17951,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17606,
											"end": 17951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17957,
											"end": 18183,
											"name": "tag",
											"source": 18,
											"value": "366"
										},
										{
											"begin": 17957,
											"end": 18183,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18097,
											"end": 18131,
											"name": "PUSH",
											"source": 18,
											"value": "43616C6C6572206973206E6F7420616E20617574686F72697A656420676F7665"
										},
										{
											"begin": 18093,
											"end": 18094,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18085,
											"end": 18091,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18081,
											"end": 18095,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18074,
											"end": 18132,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 18166,
											"end": 18175,
											"name": "PUSH",
											"source": 18,
											"value": "726E6D656E742E00000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18161,
											"end": 18163,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 18153,
											"end": 18159,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18149,
											"end": 18164,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18142,
											"end": 18176,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 17957,
											"end": 18183,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17957,
											"end": 18183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18189,
											"end": 18555,
											"name": "tag",
											"source": 18,
											"value": "367"
										},
										{
											"begin": 18189,
											"end": 18555,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18331,
											"end": 18334,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18352,
											"end": 18419,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "583"
										},
										{
											"begin": 18416,
											"end": 18418,
											"name": "PUSH",
											"source": 18,
											"value": "27"
										},
										{
											"begin": 18411,
											"end": 18414,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 18352,
											"end": 18419,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "327"
										},
										{
											"begin": 18352,
											"end": 18419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18352,
											"end": 18419,
											"name": "tag",
											"source": 18,
											"value": "583"
										},
										{
											"begin": 18352,
											"end": 18419,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18345,
											"end": 18419,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 18345,
											"end": 18419,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18428,
											"end": 18521,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "584"
										},
										{
											"begin": 18517,
											"end": 18520,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18428,
											"end": 18521,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "366"
										},
										{
											"begin": 18428,
											"end": 18521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18428,
											"end": 18521,
											"name": "tag",
											"source": 18,
											"value": "584"
										},
										{
											"begin": 18428,
											"end": 18521,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18546,
											"end": 18548,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 18541,
											"end": 18544,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18537,
											"end": 18549,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18530,
											"end": 18549,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18530,
											"end": 18549,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18189,
											"end": 18555,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 18189,
											"end": 18555,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18189,
											"end": 18555,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18189,
											"end": 18555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18561,
											"end": 18980,
											"name": "tag",
											"source": 18,
											"value": "178"
										},
										{
											"begin": 18561,
											"end": 18980,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18727,
											"end": 18731,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18765,
											"end": 18767,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 18754,
											"end": 18763,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18750,
											"end": 18768,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18742,
											"end": 18768,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18742,
											"end": 18768,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18814,
											"end": 18823,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 18808,
											"end": 18812,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 18804,
											"end": 18824,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 18800,
											"end": 18801,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18789,
											"end": 18798,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 18785,
											"end": 18802,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18778,
											"end": 18825,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 18842,
											"end": 18973,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "586"
										},
										{
											"begin": 18968,
											"end": 18972,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 18842,
											"end": 18973,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "367"
										},
										{
											"begin": 18842,
											"end": 18973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18842,
											"end": 18973,
											"name": "tag",
											"source": 18,
											"value": "586"
										},
										{
											"begin": 18842,
											"end": 18973,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18834,
											"end": 18973,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18834,
											"end": 18973,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18561,
											"end": 18980,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 18561,
											"end": 18980,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18561,
											"end": 18980,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18561,
											"end": 18980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18986,
											"end": 19084,
											"name": "tag",
											"source": 18,
											"value": "368"
										},
										{
											"begin": 18986,
											"end": 19084,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19037,
											"end": 19043,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19071,
											"end": 19076,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19065,
											"end": 19077,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 19055,
											"end": 19077,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19055,
											"end": 19077,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18986,
											"end": 19084,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 18986,
											"end": 19084,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18986,
											"end": 19084,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18986,
											"end": 19084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19090,
											"end": 19258,
											"name": "tag",
											"source": 18,
											"value": "369"
										},
										{
											"begin": 19090,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19173,
											"end": 19184,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19207,
											"end": 19213,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19202,
											"end": 19205,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19195,
											"end": 19214,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 19247,
											"end": 19251,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 19242,
											"end": 19245,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19238,
											"end": 19252,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19223,
											"end": 19252,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19223,
											"end": 19252,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19090,
											"end": 19258,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 19090,
											"end": 19258,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 19090,
											"end": 19258,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19090,
											"end": 19258,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19090,
											"end": 19258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19264,
											"end": 19637,
											"name": "tag",
											"source": 18,
											"value": "370"
										},
										{
											"begin": 19264,
											"end": 19637,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19350,
											"end": 19353,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19378,
											"end": 19416,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "590"
										},
										{
											"begin": 19410,
											"end": 19415,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19378,
											"end": 19416,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "368"
										},
										{
											"begin": 19378,
											"end": 19416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19378,
											"end": 19416,
											"name": "tag",
											"source": 18,
											"value": "590"
										},
										{
											"begin": 19378,
											"end": 19416,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19432,
											"end": 19502,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "591"
										},
										{
											"begin": 19495,
											"end": 19501,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19490,
											"end": 19493,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 19432,
											"end": 19502,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "369"
										},
										{
											"begin": 19432,
											"end": 19502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19432,
											"end": 19502,
											"name": "tag",
											"source": 18,
											"value": "591"
										},
										{
											"begin": 19432,
											"end": 19502,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19425,
											"end": 19502,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 19425,
											"end": 19502,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19511,
											"end": 19576,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "592"
										},
										{
											"begin": 19569,
											"end": 19575,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19564,
											"end": 19567,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 19557,
											"end": 19561,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 19550,
											"end": 19555,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 19546,
											"end": 19562,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19511,
											"end": 19576,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "328"
										},
										{
											"begin": 19511,
											"end": 19576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19511,
											"end": 19576,
											"name": "tag",
											"source": 18,
											"value": "592"
										},
										{
											"begin": 19511,
											"end": 19576,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19601,
											"end": 19630,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "593"
										},
										{
											"begin": 19623,
											"end": 19629,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19601,
											"end": 19630,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "329"
										},
										{
											"begin": 19601,
											"end": 19630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19601,
											"end": 19630,
											"name": "tag",
											"source": 18,
											"value": "593"
										},
										{
											"begin": 19601,
											"end": 19630,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19596,
											"end": 19599,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 19592,
											"end": 19631,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19585,
											"end": 19631,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 19585,
											"end": 19631,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19354,
											"end": 19637,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19264,
											"end": 19637,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 19264,
											"end": 19637,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 19264,
											"end": 19637,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19264,
											"end": 19637,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19264,
											"end": 19637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19643,
											"end": 20283,
											"name": "tag",
											"source": 18,
											"value": "221"
										},
										{
											"begin": 19643,
											"end": 20283,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19838,
											"end": 19842,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19876,
											"end": 19879,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 19865,
											"end": 19874,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19861,
											"end": 19880,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19853,
											"end": 19880,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19853,
											"end": 19880,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19890,
											"end": 19961,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "595"
										},
										{
											"begin": 19958,
											"end": 19959,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19947,
											"end": 19956,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 19943,
											"end": 19960,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19934,
											"end": 19940,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 19890,
											"end": 19961,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "336"
										},
										{
											"begin": 19890,
											"end": 19961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19890,
											"end": 19961,
											"name": "tag",
											"source": 18,
											"value": "595"
										},
										{
											"begin": 19890,
											"end": 19961,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19971,
											"end": 20043,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "596"
										},
										{
											"begin": 20039,
											"end": 20041,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 20028,
											"end": 20037,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 20024,
											"end": 20042,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 20015,
											"end": 20021,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 19971,
											"end": 20043,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "336"
										},
										{
											"begin": 19971,
											"end": 20043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19971,
											"end": 20043,
											"name": "tag",
											"source": 18,
											"value": "596"
										},
										{
											"begin": 19971,
											"end": 20043,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20053,
											"end": 20125,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "597"
										},
										{
											"begin": 20121,
											"end": 20123,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 20110,
											"end": 20119,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 20106,
											"end": 20124,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 20097,
											"end": 20103,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 20053,
											"end": 20125,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "339"
										},
										{
											"begin": 20053,
											"end": 20125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20053,
											"end": 20125,
											"name": "tag",
											"source": 18,
											"value": "597"
										},
										{
											"begin": 20053,
											"end": 20125,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20172,
											"end": 20181,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 20166,
											"end": 20170,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 20162,
											"end": 20182,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 20157,
											"end": 20159,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 20146,
											"end": 20155,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 20142,
											"end": 20160,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 20135,
											"end": 20183,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 20200,
											"end": 20276,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "598"
										},
										{
											"begin": 20271,
											"end": 20275,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 20262,
											"end": 20268,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 20200,
											"end": 20276,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "370"
										},
										{
											"begin": 20200,
											"end": 20276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20200,
											"end": 20276,
											"name": "tag",
											"source": 18,
											"value": "598"
										},
										{
											"begin": 20200,
											"end": 20276,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20192,
											"end": 20276,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20192,
											"end": 20276,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19643,
											"end": 20283,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 19643,
											"end": 20283,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 19643,
											"end": 20283,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19643,
											"end": 20283,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19643,
											"end": 20283,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19643,
											"end": 20283,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19643,
											"end": 20283,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19643,
											"end": 20283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20289,
											"end": 20430,
											"name": "tag",
											"source": 18,
											"value": "371"
										},
										{
											"begin": 20289,
											"end": 20430,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20345,
											"end": 20350,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20376,
											"end": 20382,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 20370,
											"end": 20383,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 20361,
											"end": 20383,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20361,
											"end": 20383,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20392,
											"end": 20424,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "600"
										},
										{
											"begin": 20418,
											"end": 20423,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 20392,
											"end": 20424,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "322"
										},
										{
											"begin": 20392,
											"end": 20424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20392,
											"end": 20424,
											"name": "tag",
											"source": 18,
											"value": "600"
										},
										{
											"begin": 20392,
											"end": 20424,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20289,
											"end": 20430,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 20289,
											"end": 20430,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20289,
											"end": 20430,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20289,
											"end": 20430,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20289,
											"end": 20430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20436,
											"end": 20785,
											"name": "tag",
											"source": 18,
											"value": "224"
										},
										{
											"begin": 20436,
											"end": 20785,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20505,
											"end": 20511,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20554,
											"end": 20556,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 20542,
											"end": 20551,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20533,
											"end": 20540,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 20529,
											"end": 20552,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 20525,
											"end": 20557,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 20522,
											"end": 20641,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 20522,
											"end": 20641,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "602"
										},
										{
											"begin": 20522,
											"end": 20641,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 20560,
											"end": 20639,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "603"
										},
										{
											"begin": 20560,
											"end": 20639,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "319"
										},
										{
											"begin": 20560,
											"end": 20639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20560,
											"end": 20639,
											"name": "tag",
											"source": 18,
											"value": "603"
										},
										{
											"begin": 20560,
											"end": 20639,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20522,
											"end": 20641,
											"name": "tag",
											"source": 18,
											"value": "602"
										},
										{
											"begin": 20522,
											"end": 20641,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20680,
											"end": 20681,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20705,
											"end": 20768,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "604"
										},
										{
											"begin": 20760,
											"end": 20767,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 20751,
											"end": 20757,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20740,
											"end": 20749,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 20736,
											"end": 20758,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 20705,
											"end": 20768,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "371"
										},
										{
											"begin": 20705,
											"end": 20768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20705,
											"end": 20768,
											"name": "tag",
											"source": 18,
											"value": "604"
										},
										{
											"begin": 20705,
											"end": 20768,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20695,
											"end": 20768,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20695,
											"end": 20768,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20651,
											"end": 20778,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20436,
											"end": 20785,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 20436,
											"end": 20785,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20436,
											"end": 20785,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20436,
											"end": 20785,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20436,
											"end": 20785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20791,
											"end": 20932,
											"name": "tag",
											"source": 18,
											"value": "372"
										},
										{
											"begin": 20791,
											"end": 20932,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20840,
											"end": 20844,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20863,
											"end": 20866,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 20855,
											"end": 20866,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20855,
											"end": 20866,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20886,
											"end": 20889,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 20883,
											"end": 20884,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20876,
											"end": 20890,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 20920,
											"end": 20924,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 20917,
											"end": 20918,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20907,
											"end": 20925,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 20899,
											"end": 20925,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20899,
											"end": 20925,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20791,
											"end": 20932,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20791,
											"end": 20932,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20791,
											"end": 20932,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20791,
											"end": 20932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20938,
											"end": 21031,
											"name": "tag",
											"source": 18,
											"value": "373"
										},
										{
											"begin": 20938,
											"end": 21031,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20975,
											"end": 20981,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21022,
											"end": 21024,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 21017,
											"end": 21019,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 21010,
											"end": 21015,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 21006,
											"end": 21020,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21002,
											"end": 21025,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 20992,
											"end": 21025,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20992,
											"end": 21025,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20938,
											"end": 21031,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20938,
											"end": 21031,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20938,
											"end": 21031,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20938,
											"end": 21031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21037,
											"end": 21144,
											"name": "tag",
											"source": 18,
											"value": "374"
										},
										{
											"begin": 21037,
											"end": 21144,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21081,
											"end": 21089,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21131,
											"end": 21136,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21125,
											"end": 21129,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21121,
											"end": 21137,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 21100,
											"end": 21137,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21100,
											"end": 21137,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21037,
											"end": 21144,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 21037,
											"end": 21144,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 21037,
											"end": 21144,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21037,
											"end": 21144,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21037,
											"end": 21144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21150,
											"end": 21543,
											"name": "tag",
											"source": 18,
											"value": "375"
										},
										{
											"begin": 21150,
											"end": 21543,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21219,
											"end": 21225,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21269,
											"end": 21270,
											"name": "PUSH",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 21257,
											"end": 21267,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 21253,
											"end": 21271,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 21292,
											"end": 21389,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "609"
										},
										{
											"begin": 21322,
											"end": 21388,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21311,
											"end": 21320,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21292,
											"end": 21389,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "374"
										},
										{
											"begin": 21292,
											"end": 21389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21292,
											"end": 21389,
											"name": "tag",
											"source": 18,
											"value": "609"
										},
										{
											"begin": 21292,
											"end": 21389,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21410,
											"end": 21449,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "610"
										},
										{
											"begin": 21440,
											"end": 21448,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 21429,
											"end": 21438,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 21410,
											"end": 21449,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "374"
										},
										{
											"begin": 21410,
											"end": 21449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21410,
											"end": 21449,
											"name": "tag",
											"source": 18,
											"value": "610"
										},
										{
											"begin": 21410,
											"end": 21449,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21398,
											"end": 21449,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 21398,
											"end": 21449,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21482,
											"end": 21486,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 21478,
											"end": 21487,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 21471,
											"end": 21476,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 21467,
											"end": 21488,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 21458,
											"end": 21488,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 21458,
											"end": 21488,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21531,
											"end": 21535,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 21521,
											"end": 21529,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 21517,
											"end": 21536,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 21510,
											"end": 21515,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 21507,
											"end": 21537,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 21497,
											"end": 21537,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 21497,
											"end": 21537,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21226,
											"end": 21543,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21226,
											"end": 21543,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21150,
											"end": 21543,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 21150,
											"end": 21543,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 21150,
											"end": 21543,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21150,
											"end": 21543,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21150,
											"end": 21543,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21150,
											"end": 21543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21549,
											"end": 21609,
											"name": "tag",
											"source": 18,
											"value": "376"
										},
										{
											"begin": 21549,
											"end": 21609,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21577,
											"end": 21580,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21598,
											"end": 21603,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21591,
											"end": 21603,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21591,
											"end": 21603,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21549,
											"end": 21609,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 21549,
											"end": 21609,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21549,
											"end": 21609,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21549,
											"end": 21609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21615,
											"end": 21757,
											"name": "tag",
											"source": 18,
											"value": "377"
										},
										{
											"begin": 21615,
											"end": 21757,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21665,
											"end": 21674,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21698,
											"end": 21751,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "613"
										},
										{
											"begin": 21716,
											"end": 21750,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "614"
										},
										{
											"begin": 21725,
											"end": 21749,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "615"
										},
										{
											"begin": 21743,
											"end": 21748,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 21725,
											"end": 21749,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "331"
										},
										{
											"begin": 21725,
											"end": 21749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21725,
											"end": 21749,
											"name": "tag",
											"source": 18,
											"value": "615"
										},
										{
											"begin": 21725,
											"end": 21749,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21716,
											"end": 21750,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "376"
										},
										{
											"begin": 21716,
											"end": 21750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21716,
											"end": 21750,
											"name": "tag",
											"source": 18,
											"value": "614"
										},
										{
											"begin": 21716,
											"end": 21750,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21698,
											"end": 21751,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "331"
										},
										{
											"begin": 21698,
											"end": 21751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21698,
											"end": 21751,
											"name": "tag",
											"source": 18,
											"value": "613"
										},
										{
											"begin": 21698,
											"end": 21751,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21685,
											"end": 21751,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21685,
											"end": 21751,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21615,
											"end": 21757,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 21615,
											"end": 21757,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21615,
											"end": 21757,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21615,
											"end": 21757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21763,
											"end": 21838,
											"name": "tag",
											"source": 18,
											"value": "378"
										},
										{
											"begin": 21763,
											"end": 21838,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21806,
											"end": 21809,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21827,
											"end": 21832,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21820,
											"end": 21832,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21820,
											"end": 21832,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21763,
											"end": 21838,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 21763,
											"end": 21838,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21763,
											"end": 21838,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21763,
											"end": 21838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21844,
											"end": 22113,
											"name": "tag",
											"source": 18,
											"value": "379"
										},
										{
											"begin": 21844,
											"end": 22113,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21954,
											"end": 21993,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "618"
										},
										{
											"begin": 21985,
											"end": 21992,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 21954,
											"end": 21993,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "377"
										},
										{
											"begin": 21954,
											"end": 21993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21954,
											"end": 21993,
											"name": "tag",
											"source": 18,
											"value": "618"
										},
										{
											"begin": 21954,
											"end": 21993,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22015,
											"end": 22106,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "619"
										},
										{
											"begin": 22064,
											"end": 22105,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "620"
										},
										{
											"begin": 22088,
											"end": 22104,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22064,
											"end": 22105,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "378"
										},
										{
											"begin": 22064,
											"end": 22105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22064,
											"end": 22105,
											"name": "tag",
											"source": 18,
											"value": "620"
										},
										{
											"begin": 22064,
											"end": 22105,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22056,
											"end": 22062,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 22049,
											"end": 22053,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 22043,
											"end": 22054,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 22015,
											"end": 22106,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "375"
										},
										{
											"begin": 22015,
											"end": 22106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22015,
											"end": 22106,
											"name": "tag",
											"source": 18,
											"value": "619"
										},
										{
											"begin": 22015,
											"end": 22106,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22009,
											"end": 22013,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22002,
											"end": 22107,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 21920,
											"end": 22113,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21844,
											"end": 22113,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21844,
											"end": 22113,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21844,
											"end": 22113,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21844,
											"end": 22113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22119,
											"end": 22192,
											"name": "tag",
											"source": 18,
											"value": "380"
										},
										{
											"begin": 22119,
											"end": 22192,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22164,
											"end": 22167,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22119,
											"end": 22192,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22119,
											"end": 22192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22198,
											"end": 22387,
											"name": "tag",
											"source": 18,
											"value": "381"
										},
										{
											"begin": 22198,
											"end": 22387,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22275,
											"end": 22307,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "623"
										},
										{
											"begin": 22275,
											"end": 22307,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "380"
										},
										{
											"begin": 22275,
											"end": 22307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22275,
											"end": 22307,
											"name": "tag",
											"source": 18,
											"value": "623"
										},
										{
											"begin": 22275,
											"end": 22307,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22316,
											"end": 22381,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "624"
										},
										{
											"begin": 22374,
											"end": 22380,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22366,
											"end": 22372,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 22360,
											"end": 22364,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 22316,
											"end": 22381,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "379"
										},
										{
											"begin": 22316,
											"end": 22381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22316,
											"end": 22381,
											"name": "tag",
											"source": 18,
											"value": "624"
										},
										{
											"begin": 22316,
											"end": 22381,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22251,
											"end": 22387,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22198,
											"end": 22387,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22198,
											"end": 22387,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22198,
											"end": 22387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22393,
											"end": 22579,
											"name": "tag",
											"source": 18,
											"value": "382"
										},
										{
											"begin": 22393,
											"end": 22579,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22453,
											"end": 22573,
											"name": "tag",
											"source": 18,
											"value": "626"
										},
										{
											"begin": 22453,
											"end": 22573,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22470,
											"end": 22473,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22463,
											"end": 22468,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22460,
											"end": 22474,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 22453,
											"end": 22573,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 22453,
											"end": 22573,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "628"
										},
										{
											"begin": 22453,
											"end": 22573,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 22524,
											"end": 22563,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "629"
										},
										{
											"begin": 22561,
											"end": 22562,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22554,
											"end": 22559,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22524,
											"end": 22563,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "381"
										},
										{
											"begin": 22524,
											"end": 22563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22524,
											"end": 22563,
											"name": "tag",
											"source": 18,
											"value": "629"
										},
										{
											"begin": 22524,
											"end": 22563,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22497,
											"end": 22498,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 22490,
											"end": 22495,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22486,
											"end": 22499,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 22477,
											"end": 22499,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22477,
											"end": 22499,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22453,
											"end": 22573,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "626"
										},
										{
											"begin": 22453,
											"end": 22573,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22453,
											"end": 22573,
											"name": "tag",
											"source": 18,
											"value": "628"
										},
										{
											"begin": 22453,
											"end": 22573,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22393,
											"end": 22579,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22393,
											"end": 22579,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22393,
											"end": 22579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22585,
											"end": 23128,
											"name": "tag",
											"source": 18,
											"value": "383"
										},
										{
											"begin": 22585,
											"end": 23128,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22686,
											"end": 22688,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 22681,
											"end": 22684,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22678,
											"end": 22689,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 22675,
											"end": 23121,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 22675,
											"end": 23121,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "631"
										},
										{
											"begin": 22675,
											"end": 23121,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 22720,
											"end": 22758,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "632"
										},
										{
											"begin": 22752,
											"end": 22757,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22720,
											"end": 22758,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "372"
										},
										{
											"begin": 22720,
											"end": 22758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22720,
											"end": 22758,
											"name": "tag",
											"source": 18,
											"value": "632"
										},
										{
											"begin": 22720,
											"end": 22758,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22804,
											"end": 22833,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "633"
										},
										{
											"begin": 22822,
											"end": 22832,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 22804,
											"end": 22833,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "373"
										},
										{
											"begin": 22804,
											"end": 22833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22804,
											"end": 22833,
											"name": "tag",
											"source": 18,
											"value": "633"
										},
										{
											"begin": 22804,
											"end": 22833,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22794,
											"end": 22802,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22790,
											"end": 22834,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 22987,
											"end": 22989,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 22975,
											"end": 22985,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 22972,
											"end": 22990,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 22969,
											"end": 23018,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 22969,
											"end": 23018,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "634"
										},
										{
											"begin": 22969,
											"end": 23018,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 23008,
											"end": 23016,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22993,
											"end": 23016,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22993,
											"end": 23016,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22969,
											"end": 23018,
											"name": "tag",
											"source": 18,
											"value": "634"
										},
										{
											"begin": 22969,
											"end": 23018,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23031,
											"end": 23111,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "635"
										},
										{
											"begin": 23087,
											"end": 23109,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "636"
										},
										{
											"begin": 23105,
											"end": 23108,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 23087,
											"end": 23109,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "373"
										},
										{
											"begin": 23087,
											"end": 23109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23087,
											"end": 23109,
											"name": "tag",
											"source": 18,
											"value": "636"
										},
										{
											"begin": 23087,
											"end": 23109,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23077,
											"end": 23085,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 23073,
											"end": 23110,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 23060,
											"end": 23071,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23031,
											"end": 23111,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "382"
										},
										{
											"begin": 23031,
											"end": 23111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23031,
											"end": 23111,
											"name": "tag",
											"source": 18,
											"value": "635"
										},
										{
											"begin": 23031,
											"end": 23111,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22690,
											"end": 23121,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22690,
											"end": 23121,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22675,
											"end": 23121,
											"name": "tag",
											"source": 18,
											"value": "631"
										},
										{
											"begin": 22675,
											"end": 23121,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22585,
											"end": 23128,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22585,
											"end": 23128,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22585,
											"end": 23128,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22585,
											"end": 23128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23134,
											"end": 23251,
											"name": "tag",
											"source": 18,
											"value": "384"
										},
										{
											"begin": 23134,
											"end": 23251,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23188,
											"end": 23196,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23238,
											"end": 23243,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23232,
											"end": 23236,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23228,
											"end": 23244,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 23207,
											"end": 23244,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23207,
											"end": 23244,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23134,
											"end": 23251,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 23134,
											"end": 23251,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 23134,
											"end": 23251,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23134,
											"end": 23251,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23134,
											"end": 23251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23257,
											"end": 23426,
											"name": "tag",
											"source": 18,
											"value": "385"
										},
										{
											"begin": 23257,
											"end": 23426,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23301,
											"end": 23307,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23334,
											"end": 23385,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "639"
										},
										{
											"begin": 23382,
											"end": 23383,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23378,
											"end": 23384,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 23370,
											"end": 23375,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 23367,
											"end": 23368,
											"name": "PUSH",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 23363,
											"end": 23376,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 23334,
											"end": 23385,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "384"
										},
										{
											"begin": 23334,
											"end": 23385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23334,
											"end": 23385,
											"name": "tag",
											"source": 18,
											"value": "639"
										},
										{
											"begin": 23334,
											"end": 23385,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23330,
											"end": 23386,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 23415,
											"end": 23419,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 23409,
											"end": 23413,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 23405,
											"end": 23420,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 23395,
											"end": 23420,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 23395,
											"end": 23420,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23308,
											"end": 23426,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23257,
											"end": 23426,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 23257,
											"end": 23426,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 23257,
											"end": 23426,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23257,
											"end": 23426,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23257,
											"end": 23426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23431,
											"end": 23726,
											"name": "tag",
											"source": 18,
											"value": "386"
										},
										{
											"begin": 23431,
											"end": 23726,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23507,
											"end": 23511,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23653,
											"end": 23682,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "641"
										},
										{
											"begin": 23678,
											"end": 23681,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 23672,
											"end": 23676,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 23653,
											"end": 23682,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "385"
										},
										{
											"begin": 23653,
											"end": 23682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23653,
											"end": 23682,
											"name": "tag",
											"source": 18,
											"value": "641"
										},
										{
											"begin": 23653,
											"end": 23682,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23645,
											"end": 23682,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 23645,
											"end": 23682,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23715,
											"end": 23718,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23712,
											"end": 23713,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 23708,
											"end": 23719,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 23702,
											"end": 23706,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23699,
											"end": 23720,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 23691,
											"end": 23720,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23691,
											"end": 23720,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23431,
											"end": 23726,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 23431,
											"end": 23726,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 23431,
											"end": 23726,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23431,
											"end": 23726,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23431,
											"end": 23726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23731,
											"end": 25126,
											"name": "tag",
											"source": 18,
											"value": "256"
										},
										{
											"begin": 23731,
											"end": 25126,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23848,
											"end": 23885,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "643"
										},
										{
											"begin": 23881,
											"end": 23884,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23848,
											"end": 23885,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "326"
										},
										{
											"begin": 23848,
											"end": 23885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23848,
											"end": 23885,
											"name": "tag",
											"source": 18,
											"value": "643"
										},
										{
											"begin": 23848,
											"end": 23885,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23950,
											"end": 23968,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23942,
											"end": 23948,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 23939,
											"end": 23969,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 23936,
											"end": 23992,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 23936,
											"end": 23992,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "644"
										},
										{
											"begin": 23936,
											"end": 23992,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 23972,
											"end": 23990,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "645"
										},
										{
											"begin": 23972,
											"end": 23990,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "284"
										},
										{
											"begin": 23972,
											"end": 23990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23972,
											"end": 23990,
											"name": "tag",
											"source": 18,
											"value": "645"
										},
										{
											"begin": 23972,
											"end": 23990,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23936,
											"end": 23992,
											"name": "tag",
											"source": 18,
											"value": "644"
										},
										{
											"begin": 23936,
											"end": 23992,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24016,
											"end": 24054,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "646"
										},
										{
											"begin": 24048,
											"end": 24052,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 24042,
											"end": 24053,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 24016,
											"end": 24054,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "103"
										},
										{
											"begin": 24016,
											"end": 24054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24016,
											"end": 24054,
											"name": "tag",
											"source": 18,
											"value": "646"
										},
										{
											"begin": 24016,
											"end": 24054,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24101,
											"end": 24168,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "647"
										},
										{
											"begin": 24161,
											"end": 24167,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 24153,
											"end": 24159,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 24147,
											"end": 24151,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 24101,
											"end": 24168,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "383"
										},
										{
											"begin": 24101,
											"end": 24168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24101,
											"end": 24168,
											"name": "tag",
											"source": 18,
											"value": "647"
										},
										{
											"begin": 24101,
											"end": 24168,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24195,
											"end": 24196,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24219,
											"end": 24223,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 24206,
											"end": 24223,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 24206,
											"end": 24223,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24251,
											"end": 24253,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 24243,
											"end": 24249,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 24240,
											"end": 24254,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 24268,
											"end": 24269,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 24263,
											"end": 24881,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 24263,
											"end": 24881,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 24263,
											"end": 24881,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "649"
										},
										{
											"begin": 24263,
											"end": 24881,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 24925,
											"end": 24926,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24942,
											"end": 24948,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 24939,
											"end": 25016,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 24939,
											"end": 25016,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "650"
										},
										{
											"begin": 24939,
											"end": 25016,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 24991,
											"end": 25000,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 24986,
											"end": 24989,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 24982,
											"end": 25001,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 24976,
											"end": 25002,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 24967,
											"end": 25002,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 24967,
											"end": 25002,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24939,
											"end": 25016,
											"name": "tag",
											"source": 18,
											"value": "650"
										},
										{
											"begin": 24939,
											"end": 25016,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25042,
											"end": 25109,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "651"
										},
										{
											"begin": 25102,
											"end": 25108,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 25095,
											"end": 25100,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 25042,
											"end": 25109,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "386"
										},
										{
											"begin": 25042,
											"end": 25109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25042,
											"end": 25109,
											"name": "tag",
											"source": 18,
											"value": "651"
										},
										{
											"begin": 25042,
											"end": 25109,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25036,
											"end": 25040,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 25029,
											"end": 25110,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 24898,
											"end": 25120,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24233,
											"end": 25120,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "648"
										},
										{
											"begin": 24233,
											"end": 25120,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24263,
											"end": 24881,
											"name": "tag",
											"source": 18,
											"value": "649"
										},
										{
											"begin": 24263,
											"end": 24881,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24315,
											"end": 24319,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 24311,
											"end": 24320,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 24303,
											"end": 24309,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 24299,
											"end": 24321,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 24349,
											"end": 24386,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "652"
										},
										{
											"begin": 24381,
											"end": 24385,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 24349,
											"end": 24386,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "372"
										},
										{
											"begin": 24349,
											"end": 24386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24349,
											"end": 24386,
											"name": "tag",
											"source": 18,
											"value": "652"
										},
										{
											"begin": 24349,
											"end": 24386,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24408,
											"end": 24409,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24422,
											"end": 24630,
											"name": "tag",
											"source": 18,
											"value": "653"
										},
										{
											"begin": 24422,
											"end": 24630,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24436,
											"end": 24443,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 24433,
											"end": 24434,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 24430,
											"end": 24444,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 24422,
											"end": 24630,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 24422,
											"end": 24630,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "655"
										},
										{
											"begin": 24422,
											"end": 24630,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 24515,
											"end": 24524,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 24510,
											"end": 24513,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 24506,
											"end": 24525,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 24500,
											"end": 24526,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 24492,
											"end": 24498,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 24485,
											"end": 24527,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 24566,
											"end": 24567,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 24558,
											"end": 24564,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 24554,
											"end": 24568,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 24544,
											"end": 24568,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 24544,
											"end": 24568,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24613,
											"end": 24615,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 24602,
											"end": 24611,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 24598,
											"end": 24616,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 24585,
											"end": 24616,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 24585,
											"end": 24616,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24459,
											"end": 24463,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 24456,
											"end": 24457,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 24452,
											"end": 24464,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 24447,
											"end": 24464,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 24447,
											"end": 24464,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24422,
											"end": 24630,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "653"
										},
										{
											"begin": 24422,
											"end": 24630,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24422,
											"end": 24630,
											"name": "tag",
											"source": 18,
											"value": "655"
										},
										{
											"begin": 24422,
											"end": 24630,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24658,
											"end": 24664,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 24649,
											"end": 24656,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 24646,
											"end": 24665,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 24643,
											"end": 24822,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 24643,
											"end": 24822,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "656"
										},
										{
											"begin": 24643,
											"end": 24822,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 24716,
											"end": 24725,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 24711,
											"end": 24714,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 24707,
											"end": 24726,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 24701,
											"end": 24727,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 24759,
											"end": 24807,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "657"
										},
										{
											"begin": 24801,
											"end": 24805,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 24793,
											"end": 24799,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 24789,
											"end": 24806,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 24778,
											"end": 24787,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 24759,
											"end": 24807,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "385"
										},
										{
											"begin": 24759,
											"end": 24807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24759,
											"end": 24807,
											"name": "tag",
											"source": 18,
											"value": "657"
										},
										{
											"begin": 24759,
											"end": 24807,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24751,
											"end": 24757,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 24744,
											"end": 24808,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 24666,
											"end": 24822,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24643,
											"end": 24822,
											"name": "tag",
											"source": 18,
											"value": "656"
										},
										{
											"begin": 24643,
											"end": 24822,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24868,
											"end": 24869,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 24864,
											"end": 24865,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 24856,
											"end": 24862,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 24852,
											"end": 24866,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 24848,
											"end": 24870,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 24842,
											"end": 24846,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 24835,
											"end": 24871,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 24270,
											"end": 24881,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24270,
											"end": 24881,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24270,
											"end": 24881,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24233,
											"end": 25120,
											"name": "tag",
											"source": 18,
											"value": "648"
										},
										{
											"begin": 24233,
											"end": 25120,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24233,
											"end": 25120,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23823,
											"end": 25126,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23823,
											"end": 25126,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23823,
											"end": 25126,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23731,
											"end": 25126,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23731,
											"end": 25126,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23731,
											"end": 25126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25132,
											"end": 25464,
											"name": "tag",
											"source": 18,
											"value": "278"
										},
										{
											"begin": 25132,
											"end": 25464,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25253,
											"end": 25257,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 25291,
											"end": 25293,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 25280,
											"end": 25289,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 25276,
											"end": 25294,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 25268,
											"end": 25294,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 25268,
											"end": 25294,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25304,
											"end": 25375,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "659"
										},
										{
											"begin": 25372,
											"end": 25373,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 25361,
											"end": 25370,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 25357,
											"end": 25374,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 25348,
											"end": 25354,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 25304,
											"end": 25375,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "336"
										},
										{
											"begin": 25304,
											"end": 25375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25304,
											"end": 25375,
											"name": "tag",
											"source": 18,
											"value": "659"
										},
										{
											"begin": 25304,
											"end": 25375,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25385,
											"end": 25457,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "660"
										},
										{
											"begin": 25453,
											"end": 25455,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 25442,
											"end": 25451,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 25438,
											"end": 25456,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 25429,
											"end": 25435,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 25385,
											"end": 25457,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "339"
										},
										{
											"begin": 25385,
											"end": 25457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25385,
											"end": 25457,
											"name": "tag",
											"source": 18,
											"value": "660"
										},
										{
											"begin": 25385,
											"end": 25457,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25132,
											"end": 25464,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 25132,
											"end": 25464,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 25132,
											"end": 25464,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25132,
											"end": 25464,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25132,
											"end": 25464,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25132,
											"end": 25464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25470,
											"end": 25650,
											"name": "tag",
											"source": 18,
											"value": "290"
										},
										{
											"begin": 25470,
											"end": 25650,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25518,
											"end": 25595,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25515,
											"end": 25516,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 25508,
											"end": 25596,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 25615,
											"end": 25619,
											"name": "PUSH",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 25612,
											"end": 25613,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 25605,
											"end": 25620,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 25639,
											"end": 25643,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 25636,
											"end": 25637,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 25629,
											"end": 25644,
											"name": "REVERT",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Approval_Contracts/AddressManager.sol",
								"contracts/Approval_Contracts/BusNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addressManagerAddress()": "2ae9915b",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"getNftForApprovedBus(uint256)": "8c8c3089",
							"getNftsByCompany(uint256)": "9bc60154",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mintNFTForApprovedBus(address,string,uint256,uint256)": "e524f2d5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressManagerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"addressManagerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"busId\",\"type\":\"uint256\"}],\"name\":\"getNftForApprovedBus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"companyId\",\"type\":\"uint256\"}],\"name\":\"getNftsByCompany\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"busId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"companyId\",\"type\":\"uint256\"}],\"name\":\"mintNFTForApprovedBus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Approval_Contracts/BusNFT.sol\":\"BusNft\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/Approval_Contracts/AddressManager.sol\":{\"keccak256\":\"0x398b6dbb5bd58ee0396112ca88d5a6391cc90c326bd80eea33a39219e3c6674b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://49c8470ded39cf3225b6a8bfc9112d4e4aac95a73bf87567bfa0bca3b8305450\",\"dweb:/ipfs/QmV9e4w74EkzZCyiycT5g4pAEpunz6qEL6KXLnEeFt257C\"]},\"contracts/Approval_Contracts/BusNFT.sol\":{\"keccak256\":\"0xedf40275dde81920388db4bac2872e956c06f3c27d2dcd49a47d0523b0887fc4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5869166c47802248da8ad4f21818373643470542103341b3e41dfc56f0246f82\",\"dweb:/ipfs/QmRVqpZu4S1QbbxxdLzoJYiCP3YbEbxToKB7k1ztZUgNtj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 201,
								"contract": "contracts/Approval_Contracts/BusNFT.sol:BusNft",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 203,
								"contract": "contracts/Approval_Contracts/BusNFT.sol:BusNft",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 207,
								"contract": "contracts/Approval_Contracts/BusNFT.sol:BusNft",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 211,
								"contract": "contracts/Approval_Contracts/BusNFT.sol:BusNft",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 215,
								"contract": "contracts/Approval_Contracts/BusNFT.sol:BusNft",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 221,
								"contract": "contracts/Approval_Contracts/BusNFT.sol:BusNft",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1340,
								"contract": "contracts/Approval_Contracts/BusNFT.sol:BusNft",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 3192,
								"contract": "contracts/Approval_Contracts/BusNFT.sol:BusNft",
								"label": "_nftTokenId",
								"offset": 0,
								"slot": "7",
								"type": "t_struct(Counter)1502_storage"
							},
							{
								"astId": 3194,
								"contract": "contracts/Approval_Contracts/BusNFT.sol:BusNft",
								"label": "addressManagerAddress",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 3198,
								"contract": "contracts/Approval_Contracts/BusNFT.sol:BusNft",
								"label": "busIdToTokenId",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 3203,
								"contract": "contracts/Approval_Contracts/BusNFT.sol:BusNft",
								"label": "companyToTokenIds",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)1502_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1501,
										"contract": "contracts/Approval_Contracts/BusNFT.sol:BusNft",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1861
						]
					},
					"id": 4,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4,
							"sourceUnit": 1862,
							"src": "132:59:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1861,
										"src": "140:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
					"exportedSymbols": {
						"IERC165": [
							1861
						],
						"IERC4906": [
							27
						],
						"IERC721": [
							1294
						]
					},
					"id": 28,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 5,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 28,
							"sourceUnit": 4,
							"src": "133:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1861,
										"src": "141:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 9,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 28,
							"sourceUnit": 32,
							"src": "172:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 8,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1294,
										"src": "180:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 11,
										"name": "IERC165",
										"nameLocations": [
											"279:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1861,
										"src": "279:7:1"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "279:7:1"
								},
								{
									"baseName": {
										"id": 13,
										"name": "IERC721",
										"nameLocations": [
											"288:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1294,
										"src": "288:7:1"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:1"
								}
							],
							"canonicalName": "IERC4906",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 10,
								"nodeType": "StructuredDocumentation",
								"src": "212:45:1",
								"text": "@title EIP-721 Metadata Update Extension"
							},
							"fullyImplemented": false,
							"id": 27,
							"linearizedBaseContracts": [
								27,
								1294,
								1861
							],
							"name": "IERC4906",
							"nameLocation": "267:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "302:201:1",
										"text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."
									},
									"eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7",
									"id": 19,
									"name": "MetadataUpdate",
									"nameLocation": "514:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "537:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "529:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:18:1"
									},
									"src": "508:39:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "553:212:1",
										"text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."
									},
									"eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c",
									"id": 26,
									"name": "BatchMetadataUpdate",
									"nameLocation": "776:19:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "804:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "796:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "826:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "818:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "795:42:1"
									},
									"src": "770:68:1"
								}
							],
							"scope": 28,
							"src": "257:583:1",
							"usedErrors": [],
							"usedEvents": [
								19,
								26,
								1193,
								1202,
								1211
							]
						}
					],
					"src": "107:734:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC721": [
							1294
						]
					},
					"id": 32,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 29,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../token/ERC721/IERC721.sol",
							"id": 31,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 32,
							"sourceUnit": 1295,
							"src": "132:52:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 30,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1294,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:79:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							168
						],
						"IERC20Errors": [
							73
						],
						"IERC721Errors": [
							121
						]
					},
					"id": 169,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 33,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 34,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:3",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 73,
							"linearizedBaseContracts": [
								73
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 43,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "652:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "668:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "685:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:3"
									},
									"src": "621:80:3"
								},
								{
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 48,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "889:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:3"
									},
									"src": "864:41:3"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 53,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "1102:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:3"
									},
									"src": "1075:45:3"
								},
								{
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:3",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 62,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1509:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1526:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1545:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:3"
									},
									"src": "1476:85:3"
								},
								{
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 67,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1773:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:3"
									},
									"src": "1746:45:3"
								},
								{
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:3",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 72,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:3"
									},
									"src": "1997:43:3"
								}
							],
							"scope": 169,
							"src": "278:1764:3",
							"usedErrors": [
								43,
								48,
								53,
								62,
								67,
								72
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 74,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:3",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 121,
							"linearizedBaseContracts": [
								121
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:3",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 79,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2465:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:3"
									},
									"src": "2440:40:3"
								},
								{
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:3",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 84,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "2652:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:3"
									},
									"src": "2623:46:3"
								},
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:3",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 93,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "2996:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3012:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3029:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:3"
									},
									"src": "2969:75:3"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 98,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3233:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:3"
									},
									"src": "3207:42:3"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 103,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "3447:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:3"
									},
									"src": "3419:46:3"
								},
								{
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 110,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "3756:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "3774:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:3"
									},
									"src": "3723:68:3"
								},
								{
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 115,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "4004:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:3"
									},
									"src": "3976:46:3"
								},
								{
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 120,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4258:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:3"
									},
									"src": "4230:46:3"
								}
							],
							"scope": 169,
							"src": "2186:2092:3",
							"usedErrors": [
								79,
								84,
								93,
								98,
								103,
								110,
								115,
								120
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 122,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:3",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 168,
							"linearizedBaseContracts": [
								168
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 133,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4854:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4870:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4887:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4903:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:3"
									},
									"src": "4821:99:3"
								},
								{
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 138,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "5110:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:3"
									},
									"src": "5083:43:3"
								},
								{
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 143,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "5325:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:3"
									},
									"src": "5296:47:3"
								},
								{
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 150,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5645:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5663:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:3"
									},
									"src": "5610:68:3"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 155,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "5892:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:3"
									},
									"src": "5863:47:3"
								},
								{
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 160,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "6147:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:3"
									},
									"src": "6118:47:3"
								},
								{
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:3",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 167,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "6488:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "6507:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:3"
									},
									"src": "6456:73:3"
								}
							],
							"scope": 169,
							"src": "4424:2107:3",
							"usedErrors": [
								133,
								138,
								143,
								150,
								155,
								160,
								167
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1496
						],
						"ERC165": [
							1849
						],
						"ERC721": [
							1177
						],
						"IERC165": [
							1861
						],
						"IERC721": [
							1294
						],
						"IERC721Errors": [
							121
						],
						"IERC721Metadata": [
							1466
						],
						"IERC721Receiver": [
							1312
						],
						"Strings": [
							1825
						]
					},
					"id": 1178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 170,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 172,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 1295,
							"src": "133:38:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 171,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1294,
										"src": "141:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 174,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 1313,
							"src": "172:54:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 173,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1312,
										"src": "180:15:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 176,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 1467,
							"src": "227:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 175,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1466,
										"src": "235:15:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 178,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 1497,
							"src": "293:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 177,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1496,
										"src": "301:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 1826,
							"src": "342:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 179,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1825,
										"src": "350:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 183,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 1850,
							"src": "391:69:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 181,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1861,
										"src": "399:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 182,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1849,
										"src": "408:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 185,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 169,
							"src": "461:66:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 184,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 121,
										"src": "469:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 187,
										"name": "Context",
										"nameLocations": [
											"804:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1496,
										"src": "804:7:4"
									},
									"id": 188,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:4"
								},
								{
									"baseName": {
										"id": 189,
										"name": "ERC165",
										"nameLocations": [
											"813:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1849,
										"src": "813:6:4"
									},
									"id": 190,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:4"
								},
								{
									"baseName": {
										"id": 191,
										"name": "IERC721",
										"nameLocations": [
											"821:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1294,
										"src": "821:7:4"
									},
									"id": 192,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:4"
								},
								{
									"baseName": {
										"id": 193,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1466,
										"src": "830:15:4"
									},
									"id": 194,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:4"
								},
								{
									"baseName": {
										"id": 195,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 121,
										"src": "847:13:4"
									},
									"id": 196,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:4"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 186,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:4",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1177,
							"linearizedBaseContracts": [
								1177,
								121,
								1466,
								1294,
								1849,
								1861,
								1496
							],
							"name": "ERC721",
							"nameLocation": "794:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 199,
									"libraryName": {
										"id": 197,
										"name": "Strings",
										"nameLocations": [
											"873:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1825,
										"src": "873:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:4",
									"typeName": {
										"id": 198,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 201,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1177,
									"src": "917:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 200,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 203,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1177,
									"src": "964:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 202,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 207,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1177,
									"src": "993:51:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 206,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:4",
										"keyType": {
											"id": 204,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 205,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 211,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1177,
									"src": "1051:51:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 210,
										"keyName": "owner",
										"keyNameLocation": "1067:5:4",
										"keyType": {
											"id": 208,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 209,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 215,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 1177,
									"src": "1109:59:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 214,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:4",
										"keyType": {
											"id": 212,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 213,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 221,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 1177,
									"src": "1175:86:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 220,
										"keyName": "owner",
										"keyNameLocation": "1191:5:4",
										"keyType": {
											"id": 216,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 219,
											"keyName": "operator",
											"keyNameLocation": "1216:8:4",
											"keyType": {
												"id": 217,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 218,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "1437:57:4",
										"statements": [
											{
												"expression": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 229,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "1447:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 230,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "1455:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:4"
											},
											{
												"expression": {
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 233,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "1470:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 234,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "1480:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:4"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:4",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 238,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "1393:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 223,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "1414:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 225,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:4"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:4"
									},
									"scope": 1177,
									"src": "1381:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1848,
										1860
									],
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "1669:192:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 249,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "1698:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 251,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1294,
																			"src": "1718:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1294_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1294_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 250,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1294",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:4",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 255,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "1754:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 257,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1466,
																			"src": "1774:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1466_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1466_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 256,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1466",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:4",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 264,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "1842:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 262,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1177_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:4",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1848,
															"src": "1818:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 248,
												"id": 267,
												"nodeType": "Return",
												"src": "1679:175:4"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 245,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 243,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1849,
												"src": "1637:6:4"
											},
											{
												"id": 244,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1861,
												"src": "1645:7:4"
											}
										],
										"src": "1628:25:4"
									},
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "1588:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 240,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:4"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "1663:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 246,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:4"
									},
									"scope": 1177,
									"src": "1561:300:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1219
									],
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "1992:136:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 277,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "2006:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 278,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 291,
												"nodeType": "IfStatement",
												"src": "2002:87:4",
												"trueBody": {
													"id": 290,
													"nodeType": "Block",
													"src": "2027:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 286,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 284,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 283,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 79,
																	"src": "2048:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 289,
															"nodeType": "RevertStatement",
															"src": "2041:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 292,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "2105:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 294,
													"indexExpression": {
														"id": 293,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "2115:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 276,
												"id": 295,
												"nodeType": "Return",
												"src": "2098:23:4"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:4",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "1939:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:4"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "1983:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:4"
									},
									"scope": 1177,
									"src": "1920:208:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1227
									],
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "2257:46:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 306,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "2288:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 305,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "2274:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 304,
												"id": 308,
												"nodeType": "Return",
												"src": "2267:29:4"
											}
										]
									},
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:4",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2202:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:4"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2248:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:4"
									},
									"scope": 1177,
									"src": "2185:118:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1451
									],
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "2425:29:4",
										"statements": [
											{
												"expression": {
													"id": 316,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 201,
													"src": "2442:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 315,
												"id": 317,
												"nodeType": "Return",
												"src": "2435:12:4"
											}
										]
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:4",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:4"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "2410:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 313,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:4"
									},
									"scope": 1177,
									"src": "2365:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1457
									],
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "2580:31:4",
										"statements": [
											{
												"expression": {
													"id": 325,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 203,
													"src": "2597:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 324,
												"id": 326,
												"nodeType": "Return",
												"src": "2590:14:4"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:4",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:4"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "2565:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 322,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:4"
									},
									"scope": 1177,
									"src": "2518:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1465
									],
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "2756:176:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 337,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "2780:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 336,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "2766:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:4"
											},
											{
												"assignments": [
													341
												],
												"declarations": [
													{
														"constant": false,
														"id": 341,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 363,
														"src": "2799:21:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 340,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 344,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 342,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "2823:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:4"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 351,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 347,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 341,
																		"src": "2856:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 345,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:4",
													"trueExpression": {
														"arguments": [
															{
																"id": 355,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "2892:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 356,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 331,
																		"src": "2901:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:4",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1638,
																	"src": "2901:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 352,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:4",
																	"typeDescriptions": {}
																}
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:4",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 335,
												"id": 362,
												"nodeType": "Return",
												"src": "2843:82:4"
											}
										]
									},
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:4",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2695:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:4"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2741:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 333,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:4"
									},
									"scope": 1177,
									"src": "2677:255:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "3240:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 369,
												"id": 371,
												"nodeType": "Return",
												"src": "3250:9:4"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:4",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:4"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "3225:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 367,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:4"
									},
									"scope": 1177,
									"src": "3174:92:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1267
									],
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "3384:52:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 382,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "3403:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 383,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "3407:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 384,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1478,
																"src": "3416:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 381,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															980,
															1046
														],
														"referencedDeclaration": 980,
														"src": "3394:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:4"
											}
										]
									},
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:4",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "3340:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "3352:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:4"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:4"
									},
									"scope": 1177,
									"src": "3323:113:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1283
									],
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "3573:78:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 398,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "3597:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 397,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "3583:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 402,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "3636:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 401,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "3623:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 396,
												"id": 404,
												"nodeType": "Return",
												"src": "3616:28:4"
											}
										]
									},
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:4",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "3518:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:4"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "3564:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:4"
									},
									"scope": 1177,
									"src": "3497:154:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1275
									],
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "3793:69:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 415,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1478,
																"src": "3822:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 417,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "3836:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 418,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "3846:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 414,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "3803:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:4"
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:4",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "3745:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "3763:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 410,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:4"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:4"
									},
									"scope": 1177,
									"src": "3718:144:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1293
									],
									"body": {
										"id": 438,
										"nodeType": "Block",
										"src": "4022:59:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 432,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "4039:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 434,
														"indexExpression": {
															"id": 433,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "4058:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 436,
													"indexExpression": {
														"id": 435,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "4065:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 431,
												"id": 437,
												"nodeType": "Return",
												"src": "4032:42:4"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:4",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "3954:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "3969:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:4"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "4016:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 429,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:4"
									},
									"scope": 1177,
									"src": "3928:153:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1259
									],
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "4223:498:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 449,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "4237:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 450,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 463,
												"nodeType": "IfStatement",
												"src": "4233:87:4",
												"trueBody": {
													"id": 462,
													"nodeType": "Block",
													"src": "4255:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 458,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 457,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 456,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 455,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "4276:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 461,
															"nodeType": "RevertStatement",
															"src": "4269:40:4"
														}
													]
												}
											},
											{
												"assignments": [
													465
												],
												"declarations": [
													{
														"constant": false,
														"id": 465,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 484,
														"src": "4538:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 464,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 472,
												"initialValue": {
													"arguments": [
														{
															"id": 467,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "4570:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "4574:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 469,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1478,
																"src": "4583:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 466,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "4562:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 473,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "4610:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 474,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "4627:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 483,
												"nodeType": "IfStatement",
												"src": "4606:109:4",
												"trueBody": {
													"id": 482,
													"nodeType": "Block",
													"src": "4633:82:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 477,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 442,
																		"src": "4675:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 478,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 446,
																		"src": "4681:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 479,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 465,
																		"src": "4690:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 476,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "4654:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 481,
															"nodeType": "RevertStatement",
															"src": "4647:57:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:4",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "4165:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "4179:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "4191:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:4"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:4"
									},
									"scope": 1177,
									"src": "4143:578:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1249
									],
									"body": {
										"id": 502,
										"nodeType": "Block",
										"src": "4863:56:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 496,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "4890:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "4896:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 498,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "4900:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 495,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															503,
															529
														],
														"referencedDeclaration": 529,
														"src": "4873:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:4"
											}
										]
									},
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:4",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4813:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4827:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4839:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:4"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:4"
									},
									"scope": 1177,
									"src": "4787:132:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1239
									],
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5088:105:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 516,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "5111:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 517,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "5117:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "5121:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 515,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5098:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 522,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "5162:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 523,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "5168:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "5172:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 525,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "5181:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 521,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "5139:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:4"
											}
										]
									},
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:4",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5011:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5025:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5037:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5054:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 511,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:4"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:4"
									},
									"scope": 1177,
									"src": "4985:208:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "5782:40:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 537,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "5799:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 539,
													"indexExpression": {
														"id": 538,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "5807:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 536,
												"id": 540,
												"nodeType": "Return",
												"src": "5792:23:4"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:4",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "5725:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:4"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "5773:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:4"
									},
									"scope": 1177,
									"src": "5707:115:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "6017:48:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 550,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "6034:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 552,
													"indexExpression": {
														"id": 551,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "6050:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 549,
												"id": 553,
												"nodeType": "Return",
												"src": "6027:31:4"
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:4",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "5960:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:4"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "6008:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:4"
									},
									"scope": 1177,
									"src": "5938:127:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "6485:163:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 572,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 567,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "6514:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 569,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 568,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 573,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 558,
																			"src": "6552:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 574,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 560,
																			"src": "6561:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 577,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 558,
																				"src": "6589:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 578,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 560,
																				"src": "6596:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 576,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 439,
																			"src": "6572:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 582,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 562,
																				"src": "6621:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 581,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 555,
																			"src": "6608:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 584,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 560,
																		"src": "6633:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 587,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 566,
												"id": 589,
												"nodeType": "Return",
												"src": "6495:146:4"
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:4",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "6399:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "6414:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "6431:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:4"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "6479:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 564,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:4"
									},
									"scope": 1177,
									"src": "6376:272:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "7179:271:4",
										"statements": [
											{
												"condition": {
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:4",
													"subExpression": {
														"arguments": [
															{
																"id": 602,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 594,
																"src": "7208:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 603,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 596,
																"src": "7215:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 604,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "7224:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 601,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "7194:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 626,
												"nodeType": "IfStatement",
												"src": "7189:255:4",
												"trueBody": {
													"id": 625,
													"nodeType": "Block",
													"src": "7234:210:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 607,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 594,
																	"src": "7252:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 608,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 623,
																"nodeType": "Block",
																"src": "7350:84:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 619,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 596,
																					"src": "7402:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 620,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 598,
																					"src": "7411:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 618,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 110,
																				"src": "7375:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 622,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:4"
																	}
																]
															},
															"id": 624,
															"nodeType": "IfStatement",
															"src": "7248:186:4",
															"trueBody": {
																"id": 617,
																"nodeType": "Block",
																"src": "7273:71:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 614,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 598,
																					"src": "7321:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 613,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 84,
																				"src": "7298:22:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 616,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:4"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:4",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "7108:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "7123:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "7140:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:4"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:4"
									},
									"scope": 1177,
									"src": "7082:368:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "8167:78:4",
										"statements": [
											{
												"id": 642,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:4",
												"statements": [
													{
														"expression": {
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 636,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "8201:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 638,
																"indexExpression": {
																	"id": 637,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 631,
																	"src": "8211:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 639,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 633,
																"src": "8223:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 641,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:4",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "8118:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "8135:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 632,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:4"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:4"
									},
									"scope": 1177,
									"src": "8092:153:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "8933:700:4",
										"statements": [
											{
												"assignments": [
													657
												],
												"declarations": [
													{
														"constant": false,
														"id": 657,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 733,
														"src": "8943:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 656,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 661,
												"initialValue": {
													"arguments": [
														{
															"id": 659,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "8967:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 658,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 542,
														"src": "8958:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 662,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "9035:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 663,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 666,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 675,
												"nodeType": "IfStatement",
												"src": "9031:86:4",
												"trueBody": {
													"id": 674,
													"nodeType": "Block",
													"src": "9055:62:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 669,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 657,
																		"src": "9086:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 670,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 651,
																		"src": "9092:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 671,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 649,
																		"src": "9098:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 668,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "9069:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 673,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 676,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "9161:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 677,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 680,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 703,
												"nodeType": "IfStatement",
												"src": "9157:256:4",
												"trueBody": {
													"id": 702,
													"nodeType": "Block",
													"src": "9181:232:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 685,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 684,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 683,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 687,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 649,
																		"src": "9298:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 690,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 688,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 682,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		980,
																		1046
																	],
																	"referencedDeclaration": 1046,
																	"src": "9277:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 694,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:4"
														},
														{
															"id": 701,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:4",
															"statements": [
																{
																	"expression": {
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 695,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 211,
																				"src": "9368:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 697,
																			"indexExpression": {
																				"id": 696,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 657,
																				"src": "9378:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 700,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:4"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 704,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "9427:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 705,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 708,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 718,
												"nodeType": "IfStatement",
												"src": "9423:107:4",
												"trueBody": {
													"id": 717,
													"nodeType": "Block",
													"src": "9445:85:4",
													"statements": [
														{
															"id": 716,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:4",
															"statements": [
																{
																	"expression": {
																		"id": 714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 710,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 211,
																				"src": "9487:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 712,
																			"indexExpression": {
																				"id": 711,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 647,
																				"src": "9497:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 715,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:4"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 719,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "9540:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 721,
														"indexExpression": {
															"id": 720,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "9548:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 722,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "9559:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 726,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "9586:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 727,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "9592:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 728,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "9596:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 725,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "9577:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 730,
												"nodeType": "EmitStatement",
												"src": "9572:32:4"
											},
											{
												"expression": {
													"id": 731,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 657,
													"src": "9622:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 655,
												"id": 732,
												"nodeType": "Return",
												"src": "9615:11:4"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:4",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "8855:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "8867:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "8884:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:4"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "8924:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:4"
									},
									"scope": 1177,
									"src": "8838:795:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "10008:274:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 742,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "10022:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 743,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 746,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 756,
												"nodeType": "IfStatement",
												"src": "10018:87:4",
												"trueBody": {
													"id": 755,
													"nodeType": "Block",
													"src": "10040:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 751,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 750,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 749,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 748,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "10061:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 754,
															"nodeType": "RevertStatement",
															"src": "10054:40:4"
														}
													]
												}
											},
											{
												"assignments": [
													758
												],
												"declarations": [
													{
														"constant": false,
														"id": 758,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 783,
														"src": "10114:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 757,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 767,
												"initialValue": {
													"arguments": [
														{
															"id": 760,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "10146:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 761,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "10150:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 762,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 759,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "10138:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 768,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "10184:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 769,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 782,
												"nodeType": "IfStatement",
												"src": "10180:96:4",
												"trueBody": {
													"id": 781,
													"nodeType": "Block",
													"src": "10213:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 777,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 775,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 774,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "10234:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 780,
															"nodeType": "RevertStatement",
															"src": "10227:38:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:4",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "9970:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "9982:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:4"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:4"
									},
									"scope": 1177,
									"src": "9955:327:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "10690:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 793,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "10710:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 794,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "10714:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 792,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															799,
															825
														],
														"referencedDeclaration": 825,
														"src": "10700:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:4"
											}
										]
									},
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:4",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "10652:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "10664:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:4"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:4"
									},
									"scope": 1177,
									"src": "10633:100:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "11038:98:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 810,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "11054:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 811,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "11058:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 809,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "11048:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 815,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 819,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "11111:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 820,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "11115:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 821,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "11124:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 814,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "11076:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 823,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:4"
											}
										]
									},
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:4",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "10973:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "10985:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "11002:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 805,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:4"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:4"
									},
									"scope": 1177,
									"src": "10954:182:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 857,
										"nodeType": "Block",
										"src": "11503:186:4",
										"statements": [
											{
												"assignments": [
													832
												],
												"declarations": [
													{
														"constant": false,
														"id": 832,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 857,
														"src": "11513:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 831,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 844,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 834,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 838,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "11557:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 839,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 833,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "11537:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 845,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "11591:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 846,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 849,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 856,
												"nodeType": "IfStatement",
												"src": "11587:96:4",
												"trueBody": {
													"id": 855,
													"nodeType": "Block",
													"src": "11620:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 852,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 828,
																		"src": "11664:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 851,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "11641:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 854,
															"nodeType": "RevertStatement",
															"src": "11634:38:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:4",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "11477:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:4"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:4"
									},
									"scope": 1177,
									"src": "11462:227:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "12084:389:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 868,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "12098:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 869,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 882,
												"nodeType": "IfStatement",
												"src": "12094:87:4",
												"trueBody": {
													"id": 881,
													"nodeType": "Block",
													"src": "12116:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 877,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 876,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 875,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 874,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "12137:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 880,
															"nodeType": "RevertStatement",
															"src": "12130:40:4"
														}
													]
												}
											},
											{
												"assignments": [
													884
												],
												"declarations": [
													{
														"constant": false,
														"id": 884,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 917,
														"src": "12190:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 883,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 893,
												"initialValue": {
													"arguments": [
														{
															"id": 886,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "12222:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 887,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "12226:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 888,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 885,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "12214:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 894,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "12260:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 895,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 907,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 905,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "12362:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 906,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "12379:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 915,
													"nodeType": "IfStatement",
													"src": "12358:109:4",
													"trueBody": {
														"id": 914,
														"nodeType": "Block",
														"src": "12385:82:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 909,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 861,
																			"src": "12427:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 910,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 865,
																			"src": "12433:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 911,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 884,
																			"src": "12442:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 908,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 93,
																		"src": "12406:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 913,
																"nodeType": "RevertStatement",
																"src": "12399:57:4"
															}
														]
													}
												},
												"id": 916,
												"nodeType": "IfStatement",
												"src": "12256:211:4",
												"trueBody": {
													"id": 904,
													"nodeType": "Block",
													"src": "12289:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 901,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 865,
																		"src": "12333:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 900,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "12310:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 903,
															"nodeType": "RevertStatement",
															"src": "12303:38:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 859,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:4",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "12032:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "12046:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "12058:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:4"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:4"
									},
									"scope": 1177,
									"src": "12013:460:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "13481:53:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 929,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "13505:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 930,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "13511:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 931,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "13515:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 928,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															936,
															962
														],
														"referencedDeclaration": 962,
														"src": "13491:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 934,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:4"
											}
										]
									},
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "13429:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "13443:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "13455:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:4"
									},
									"returnParameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:4"
									},
									"scope": 1177,
									"src": "13406:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "13873:102:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 949,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "13893:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 950,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "13899:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 951,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "13903:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 948,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "13883:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 955,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "13944:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 956,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "13950:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 957,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "13954:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 958,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "13963:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 954,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "13921:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:4"
											}
										]
									},
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:4",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "13794:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "13808:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "13820:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "13837:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 944,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:4"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:4"
									},
									"scope": 1177,
									"src": "13771:204:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "14488:50:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 973,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "14507:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 974,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "14511:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 975,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "14520:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 972,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															980,
															1046
														],
														"referencedDeclaration": 1046,
														"src": "14498:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 978,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:4"
											}
										]
									},
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:4",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "14436:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "14448:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "14465:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:4"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:4"
									},
									"scope": 1177,
									"src": "14418:120:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "14814:568:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 992,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "14880:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 998,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 993,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "14893:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 994,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1038,
												"nodeType": "IfStatement",
												"src": "14876:460:4",
												"trueBody": {
													"id": 1037,
													"nodeType": "Block",
													"src": "14913:423:4",
													"statements": [
														{
															"assignments": [
																1001
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1001,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1037,
																	"src": "14927:13:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1000,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:4",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1005,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1003,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 985,
																		"src": "14957:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1002,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1112,
																	"src": "14943:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1011,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1006,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 987,
																			"src": "15093:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1009,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1008,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1007,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1012,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1001,
																			"src": "15115:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1013,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 987,
																			"src": "15124:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:4",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1017,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1001,
																				"src": "15150:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1018,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 987,
																				"src": "15157:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1016,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 439,
																			"src": "15133:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1027,
															"nodeType": "IfStatement",
															"src": "15089:142:4",
															"trueBody": {
																"id": 1026,
																"nodeType": "Block",
																"src": "15164:67:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1023,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 987,
																					"src": "15211:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1022,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 115,
																				"src": "15189:21:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1024,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1025,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:4"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1028,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 989,
																"src": "15249:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1036,
															"nodeType": "IfStatement",
															"src": "15245:81:4",
															"trueBody": {
																"id": 1035,
																"nodeType": "Block",
																"src": "15260:66:4",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1030,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1001,
																					"src": "15292:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1031,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 983,
																					"src": "15299:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1032,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 985,
																					"src": "15303:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1029,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1202,
																				"src": "15283:8:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1034,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:4"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1039,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "15346:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1041,
														"indexExpression": {
															"id": 1040,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "15362:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1042,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "15373:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1044,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:4"
											}
										]
									},
									"documentation": {
										"id": 981,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:4",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14738:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14750:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14767:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14781:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 988,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:4"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:4"
									},
									"scope": 1177,
									"src": "14720:662:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "15684:219:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1056,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "15698:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1057,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1067,
												"nodeType": "IfStatement",
												"src": "15694:91:4",
												"trueBody": {
													"id": 1066,
													"nodeType": "Block",
													"src": "15722:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1063,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1051,
																		"src": "15765:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1062,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "15743:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1065,
															"nodeType": "RevertStatement",
															"src": "15736:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1068,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "15794:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1071,
															"indexExpression": {
																"id": 1069,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1049,
																"src": "15813:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1072,
														"indexExpression": {
															"id": 1070,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "15820:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1073,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "15832:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1077,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "15870:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1078,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "15877:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1079,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "15887:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1076,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "15855:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1081,
												"nodeType": "EmitStatement",
												"src": "15850:46:4"
											}
										]
									},
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:4",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "15619:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "15634:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "15652:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1052,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:4"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:4"
									},
									"scope": 1177,
									"src": "15591:312:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1111,
										"nodeType": "Block",
										"src": "16210:169:4",
										"statements": [
											{
												"assignments": [
													1092
												],
												"declarations": [
													{
														"constant": false,
														"id": 1092,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1111,
														"src": "16220:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1091,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1096,
												"initialValue": {
													"arguments": [
														{
															"id": 1094,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "16245:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1093,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 542,
														"src": "16236:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1097,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "16267:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1098,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1108,
												"nodeType": "IfStatement",
												"src": "16263:88:4",
												"trueBody": {
													"id": 1107,
													"nodeType": "Block",
													"src": "16288:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1104,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1086,
																		"src": "16332:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1103,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "16309:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1106,
															"nodeType": "RevertStatement",
															"src": "16302:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1109,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1092,
													"src": "16367:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1090,
												"id": 1110,
												"nodeType": "Return",
												"src": "16360:12:4"
											}
										]
									},
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:4",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "16161:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:4"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "16201:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:4"
									},
									"scope": 1177,
									"src": "16138:241:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "17020:680:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1124,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "17034:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1174,
												"nodeType": "IfStatement",
												"src": "17030:664:4",
												"trueBody": {
													"id": 1173,
													"nodeType": "Block",
													"src": "17054:640:4",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1153,
																		"nodeType": "Block",
																		"src": "17168:162:4",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1146,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1142,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1140,
																						"src": "17190:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1143,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1312,
																								"src": "17200:15:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1312_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1144,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:4",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1311,
																							"src": "17200:32:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1145,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:4",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1152,
																				"nodeType": "IfStatement",
																				"src": "17186:130:4",
																				"trueBody": {
																					"id": 1151,
																					"nodeType": "Block",
																					"src": "17243:73:4",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1148,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1117,
																										"src": "17294:2:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1147,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 103,
																									"src": "17272:21:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1149,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1150,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:4"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1154,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1141,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1140,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1154,
																				"src": "17153:13:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1139,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:4"
																	},
																	"src": "17144:186:4"
																},
																{
																	"block": {
																		"id": 1170,
																		"nodeType": "Block",
																		"src": "17359:325:4",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1161,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1158,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1156,
																							"src": "17381:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1159,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:4",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1160,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1168,
																					"nodeType": "Block",
																					"src": "17480:190:4",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:4",
																								"nodeType": "YulBlock",
																								"src": "17566:86:4",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:4",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:4",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:4",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:4"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:4",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:4"
																													},
																													"nativeSrc": "17599:15:4",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:4"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:4",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:4"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:4",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:4"
																													},
																													"nativeSrc": "17616:13:4",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:4"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:4",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:4"
																											},
																											"nativeSrc": "17592:38:4",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:4"
																										},
																										"nativeSrc": "17592:38:4",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:4"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1156,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:4",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1156,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:4",
																									"valueSize": 1
																								}
																							],
																							"id": 1167,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:4"
																						}
																					]
																				},
																				"id": 1169,
																				"nodeType": "IfStatement",
																				"src": "17377:293:4",
																				"trueBody": {
																					"id": 1166,
																					"nodeType": "Block",
																					"src": "17401:73:4",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1163,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1117,
																										"src": "17452:2:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1162,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 103,
																									"src": "17430:21:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1164,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1165,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:4"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1171,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1157,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1156,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1171,
																				"src": "17338:19:4",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1155,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:4"
																	},
																	"src": "17331:353:4"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1133,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1478,
																			"src": "17109:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1135,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1115,
																		"src": "17123:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1136,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1119,
																		"src": "17129:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1137,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1121,
																		"src": "17138:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1130,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1117,
																				"src": "17088:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1129,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1312,
																			"src": "17072:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1312_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1312",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:4",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1311,
																	"src": "17072:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:4",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1172,
															"nodeType": "TryStatement",
															"src": "17068:616:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1113,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:4",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "16950:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "16964:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "16976:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "16993:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1120,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:4"
									},
									"returnParameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:4"
									},
									"scope": 1177,
									"src": "16918:782:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1178,
							"src": "776:16926:4",
							"usedErrors": [
								79,
								84,
								93,
								98,
								103,
								110,
								115,
								120
							],
							"usedEvents": [
								1193,
								1202,
								1211
							]
						}
					],
					"src": "107:17596:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1861
						],
						"IERC721": [
							1294
						]
					},
					"id": 1295,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1181,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1295,
							"sourceUnit": 1862,
							"src": "134:62:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1180,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1861,
										"src": "142:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1183,
										"name": "IERC165",
										"nameLocations": [
											"287:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1861,
										"src": "287:7:5"
									},
									"id": 1184,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:5"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1182,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:5",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1294,
							"linearizedBaseContracts": [
								1294,
								1861
							],
							"name": "IERC721",
							"nameLocation": "276:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1185,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:5",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1193,
									"name": "Transfer",
									"nameLocation": "400:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "409:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "431:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "451:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:5"
									},
									"src": "394:82:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1194,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:5",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1202,
									"name": "Approval",
									"nameLocation": "587:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "596:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "619:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "645:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:5"
									},
									"src": "581:89:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1203,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:5",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1211,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "819:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "842:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "868:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:5"
									},
									"src": "798:85:5"
								},
								{
									"documentation": {
										"id": 1212,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:5",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "989:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:5"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "1027:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:5"
									},
									"scope": 1294,
									"src": "970:74:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1220,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:5",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "1203:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:5"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "1243:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:5"
									},
									"scope": 1294,
									"src": "1186:72:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1860:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1874:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1886:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1903:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1235,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:5"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:5"
									},
									"scope": 1294,
									"src": "1834:99:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1240,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1249,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "2675:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "2689:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "2701:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:5"
									},
									"returnParameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:5"
									},
									"scope": 1294,
									"src": "2649:78:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1250,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:5",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1259,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "3492:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "3506:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "3518:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:5"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:5"
									},
									"scope": 1294,
									"src": "3470:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1260,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:5",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "4024:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "4036:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:5"
									},
									"returnParameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:5"
									},
									"scope": 1294,
									"src": "4007:55:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1268,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:5",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1275,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "4415:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "4433:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1271,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:5"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:5"
									},
									"scope": 1294,
									"src": "4388:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1276,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:5",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1283,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "4628:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:5"
									},
									"returnParameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "4668:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:5"
									},
									"scope": 1294,
									"src": "4607:79:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1284,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:5",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1293,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "4861:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "4876:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:5"
									},
									"returnParameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "4917:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1290,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:5"
									},
									"scope": 1294,
									"src": "4835:88:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1295,
							"src": "266:4659:5",
							"usedErrors": [],
							"usedEvents": [
								1193,
								1202,
								1211
							]
						}
					],
					"src": "108:4818:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1312
						]
					},
					"id": 1313,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1296,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1297,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:6",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1312,
							"linearizedBaseContracts": [
								1312
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1298,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:6",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "867:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "893:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "915:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "940:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1305,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:6"
									},
									"returnParameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "984:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1308,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:6"
									},
									"scope": 1312,
									"src": "832:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1313,
							"src": "295:699:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
					"exportedSymbols": {
						"ERC721": [
							1177
						],
						"ERC721URIStorage": [
							1438
						],
						"IERC165": [
							1861
						],
						"IERC4906": [
							27
						],
						"Strings": [
							1825
						]
					},
					"id": 1439,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1314,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1316,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1439,
							"sourceUnit": 1178,
							"src": "154:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1315,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1177,
										"src": "162:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../../utils/Strings.sol",
							"id": 1318,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1439,
							"sourceUnit": 1826,
							"src": "192:51:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1317,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1825,
										"src": "200:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
							"file": "../../../interfaces/IERC4906.sol",
							"id": 1320,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1439,
							"sourceUnit": 28,
							"src": "244:58:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1319,
										"name": "IERC4906",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 27,
										"src": "252:8:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "../../../interfaces/IERC165.sol",
							"id": 1322,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1439,
							"sourceUnit": 4,
							"src": "303:56:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1321,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1861,
										"src": "311:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1324,
										"name": "IERC4906",
										"nameLocations": [
											"469:8:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 27,
										"src": "469:8:7"
									},
									"id": 1325,
									"nodeType": "InheritanceSpecifier",
									"src": "469:8:7"
								},
								{
									"baseName": {
										"id": 1326,
										"name": "ERC721",
										"nameLocations": [
											"479:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1177,
										"src": "479:6:7"
									},
									"id": 1327,
									"nodeType": "InheritanceSpecifier",
									"src": "479:6:7"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1323,
								"nodeType": "StructuredDocumentation",
								"src": "361:69:7",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": true,
							"id": 1438,
							"linearizedBaseContracts": [
								1438,
								1177,
								121,
								1466,
								27,
								1294,
								1849,
								1861,
								1496
							],
							"name": "ERC721URIStorage",
							"nameLocation": "449:16:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1330,
									"libraryName": {
										"id": 1328,
										"name": "Strings",
										"nameLocations": [
											"498:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1825,
										"src": "498:7:7"
									},
									"nodeType": "UsingForDirective",
									"src": "492:26:7",
									"typeName": {
										"id": 1329,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "510:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1336,
									"mutability": "constant",
									"name": "ERC4906_INTERFACE_ID",
									"nameLocation": "730:20:7",
									"nodeType": "VariableDeclaration",
									"scope": 1438,
									"src": "706:65:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1331,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "706:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30783439303634393036",
												"id": 1334,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "760:10:7",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												},
												"value": "0x49064906"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												}
											],
											"id": 1333,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "753:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 1332,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "753:6:7",
												"typeDescriptions": {}
											}
										},
										"id": 1335,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "753:18:7",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1340,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "860:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1438,
									"src": "817:53:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1339,
										"keyName": "tokenId",
										"keyNameLocation": "833:7:7",
										"keyType": {
											"id": 1337,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "825:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "817:34:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1338,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "844:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										269,
										1860
									],
									"body": {
										"id": 1360,
										"nodeType": "Block",
										"src": "1045:99:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1351,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1343,
															"src": "1062:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1352,
															"name": "ERC4906_INTERFACE_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "1077:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1062:35:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1356,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1343,
																"src": "1125:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1354,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1101:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1438_$",
																	"typeString": "type(contract super ERC721URIStorage)"
																}
															},
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1107:17:7",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 269,
															"src": "1101:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1357,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1101:36:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1062:75:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1350,
												"id": 1359,
												"nodeType": "Return",
												"src": "1055:82:7"
											}
										]
									},
									"documentation": {
										"id": 1341,
										"nodeType": "StructuredDocumentation",
										"src": "877:55:7",
										"text": " @dev See {IERC165-supportsInterface}"
									},
									"functionSelector": "01ffc9a7",
									"id": 1361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "946:17:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1347,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1345,
												"name": "ERC721",
												"nameLocations": [
													"1013:6:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1177,
												"src": "1013:6:7"
											},
											{
												"id": 1346,
												"name": "IERC165",
												"nameLocations": [
													"1021:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1861,
												"src": "1021:7:7"
											}
										],
										"src": "1004:25:7"
									},
									"parameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "971:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "964:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1342,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "964:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:20:7"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "1039:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1348,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:6:7"
									},
									"scope": 1438,
									"src": "937:207:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										364
									],
									"body": {
										"id": 1417,
										"nodeType": "Block",
										"src": "1298:505:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1371,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "1322:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1370,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "1308:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1308:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1373,
												"nodeType": "ExpressionStatement",
												"src": "1308:22:7"
											},
											{
												"assignments": [
													1375
												],
												"declarations": [
													{
														"constant": false,
														"id": 1375,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "1355:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1417,
														"src": "1341:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1374,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1341:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1379,
												"initialValue": {
													"baseExpression": {
														"id": 1376,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "1367:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1378,
													"indexExpression": {
														"id": 1377,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1364,
														"src": "1378:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1367:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1341:45:7"
											},
											{
												"assignments": [
													1381
												],
												"declarations": [
													{
														"constant": false,
														"id": 1381,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "1410:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1417,
														"src": "1396:18:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1380,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1396:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1384,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1382,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "1417:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1417:10:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1396:31:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1387,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1381,
																	"src": "1506:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1500:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1385,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1500:5:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1500:11:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1512:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1500:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1390,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1522:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1500:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1395,
												"nodeType": "IfStatement",
												"src": "1496:70:7",
												"trueBody": {
													"id": 1394,
													"nodeType": "Block",
													"src": "1525:41:7",
													"statements": [
														{
															"expression": {
																"id": 1392,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1375,
																"src": "1546:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1369,
															"id": 1393,
															"nodeType": "Return",
															"src": "1539:16:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1398,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1375,
																	"src": "1671:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1665:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1396,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1665:5:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1665:16:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1682:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1665:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1401,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1691:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1665:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1411,
												"nodeType": "IfStatement",
												"src": "1661:95:7",
												"trueBody": {
													"id": 1410,
													"nodeType": "Block",
													"src": "1694:62:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1406,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1381,
																		"src": "1729:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1407,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1375,
																		"src": "1735:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1715:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 1403,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "1715:6:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1722:6:7",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "1715:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1715:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1369,
															"id": 1409,
															"nodeType": "Return",
															"src": "1708:37:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1414,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "1788:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1412,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1773:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1438_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1779:8:7",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 364,
														"src": "1773:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1773:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1369,
												"id": 1416,
												"nodeType": "Return",
												"src": "1766:30:7"
											}
										]
									},
									"documentation": {
										"id": 1362,
										"nodeType": "StructuredDocumentation",
										"src": "1150:55:7",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1219:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1366,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1265:8:7"
									},
									"parameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1236:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "1228:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:17:7"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "1283:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1367,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1283:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:15:7"
									},
									"scope": 1438,
									"src": "1210:593:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1436,
										"nodeType": "Block",
										"src": "2003:86:7",
										"statements": [
											{
												"expression": {
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1426,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "2013:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1428,
														"indexExpression": {
															"id": 1427,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "2024:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2013:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1429,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "2035:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2013:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1431,
												"nodeType": "ExpressionStatement",
												"src": "2013:31:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1433,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "2074:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1432,
														"name": "MetadataUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "2059:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2059:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1435,
												"nodeType": "EmitStatement",
												"src": "2054:28:7"
											}
										]
									},
									"documentation": {
										"id": 1419,
										"nodeType": "StructuredDocumentation",
										"src": "1809:108:7",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."
									},
									"id": 1437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "1931:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1952:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "1944:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1944:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1975:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "1961:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1422,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1961:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1943:42:7"
									},
									"returnParameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2003:0:7"
									},
									"scope": 1438,
									"src": "1922:167:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1439,
							"src": "431:1660:7",
							"usedErrors": [
								79,
								84,
								93,
								98,
								103,
								110,
								115,
								120
							],
							"usedEvents": [
								19,
								26,
								1193,
								1202,
								1211
							]
						}
					],
					"src": "128:1964:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1294
						],
						"IERC721Metadata": [
							1466
						]
					},
					"id": 1467,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1440,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1442,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1467,
							"sourceUnit": 1295,
							"src": "153:39:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1441,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1294,
										"src": "161:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1444,
										"name": "IERC721",
										"nameLocations": [
											"357:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1294,
										"src": "357:7:8"
									},
									"id": 1445,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:8"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1443,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:8",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1466,
							"linearizedBaseContracts": [
								1466,
								1294,
								1861
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:8",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1451,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:8"
									},
									"returnParameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "473:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1448,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:8"
									},
									"scope": 1466,
									"src": "434:54:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1452,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:8",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1457,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:8"
									},
									"returnParameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "600:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1454,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:8"
									},
									"scope": 1466,
									"src": "559:56:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1458,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:8",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "734:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:8"
									},
									"returnParameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "774:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1462,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:8"
									},
									"scope": 1466,
									"src": "716:73:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1467,
							"src": "328:463:8",
							"usedErrors": [],
							"usedEvents": [
								1193,
								1202,
								1211
							]
						}
					],
					"src": "127:665:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1496
						]
					},
					"id": 1497,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1468,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1469,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1496,
							"linearizedBaseContracts": [
								1496
							],
							"name": "Context",
							"nameLocation": "642:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1477,
										"nodeType": "Block",
										"src": "718:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1474,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1473,
												"id": 1476,
												"nodeType": "Return",
												"src": "728:17:9"
											}
										]
									},
									"id": 1478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:9"
									},
									"returnParameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "709:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:9"
									},
									"scope": 1496,
									"src": "656:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1486,
										"nodeType": "Block",
										"src": "825:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1483,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1482,
												"id": 1485,
												"nodeType": "Return",
												"src": "835:15:9"
											}
										]
									},
									"id": 1487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:9"
									},
									"returnParameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "809:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1480,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:9"
									},
									"scope": 1496,
									"src": "758:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1494,
										"nodeType": "Block",
										"src": "935:25:9",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1491,
												"id": 1493,
												"nodeType": "Return",
												"src": "945:8:9"
											}
										]
									},
									"id": 1495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:9"
									},
									"returnParameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "926:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:9"
									},
									"scope": 1496,
									"src": "863:97:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1497,
							"src": "624:338:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							1570
						]
					},
					"id": 1571,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1498,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1499,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:10",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 1570,
							"linearizedBaseContracts": [
								1570
							],
							"name": "Counters",
							"nameLocation": "432:8:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 1502,
									"members": [
										{
											"constant": false,
											"id": 1501,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 1502,
											"src": "786:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1500,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:10",
									"nodeType": "StructDefinition",
									"scope": 1570,
									"src": "447:374:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1513,
										"nodeType": "Block",
										"src": "901:38:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1510,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1505,
														"src": "918:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1502_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1511,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:10",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1501,
													"src": "918:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1509,
												"id": 1512,
												"nodeType": "Return",
												"src": "911:21:10"
											}
										]
									},
									"id": 1514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "844:23:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1502_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1504,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1503,
														"name": "Counter",
														"nameLocations": [
															"844:7:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1502,
														"src": "844:7:10"
													},
													"referencedDeclaration": 1502,
													"src": "844:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1502_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:10"
									},
									"returnParameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "892:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:10"
									},
									"scope": 1570,
									"src": "827:112:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1527,
										"nodeType": "Block",
										"src": "998:70:10",
										"statements": [
											{
												"id": 1526,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:10",
												"statements": [
													{
														"expression": {
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1520,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1517,
																	"src": "1032:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1502_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1522,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:10",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1501,
																"src": "1032:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1525,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:10"
													}
												]
											}
										]
									},
									"id": 1528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "964:23:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1502_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1516,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1515,
														"name": "Counter",
														"nameLocations": [
															"964:7:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1502,
														"src": "964:7:10"
													},
													"referencedDeclaration": 1502,
													"src": "964:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1502_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:10"
									},
									"returnParameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:10"
									},
									"scope": 1570,
									"src": "945:123:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1555,
										"nodeType": "Block",
										"src": "1127:176:10",
										"statements": [
											{
												"assignments": [
													1535
												],
												"declarations": [
													{
														"constant": false,
														"id": 1535,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 1555,
														"src": "1137:13:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1534,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1538,
												"initialValue": {
													"expression": {
														"id": 1536,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1531,
														"src": "1153:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1502_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1537,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:10",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1501,
													"src": "1153:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1540,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1535,
																"src": "1185:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1541,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 1539,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1545,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:10"
											},
											{
												"id": 1554,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:10",
												"statements": [
													{
														"expression": {
															"id": 1552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1546,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1531,
																	"src": "1260:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1502_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1548,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:10",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1501,
																"src": "1260:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1549,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1535,
																	"src": "1277:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1553,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:10"
													}
												]
											}
										]
									},
									"id": 1556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "1093:23:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1502_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1530,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1529,
														"name": "Counter",
														"nameLocations": [
															"1093:7:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1502,
														"src": "1093:7:10"
													},
													"referencedDeclaration": 1502,
													"src": "1093:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1502_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:10"
									},
									"returnParameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:10"
									},
									"scope": 1570,
									"src": "1074:229:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1568,
										"nodeType": "Block",
										"src": "1358:35:10",
										"statements": [
											{
												"expression": {
													"id": 1566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1562,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1559,
															"src": "1368:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1502_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1564,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:10",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1501,
														"src": "1368:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1565,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1567,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:10"
											}
										]
									},
									"id": 1569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "1324:23:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1502_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1558,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1557,
														"name": "Counter",
														"nameLocations": [
															"1324:7:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1502,
														"src": "1324:7:10"
													},
													"referencedDeclaration": 1502,
													"src": "1324:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1502_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:10"
									},
									"returnParameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:10"
									},
									"scope": 1570,
									"src": "1309:84:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1571,
							"src": "424:971:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "87:1309:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2915
						],
						"SignedMath": [
							3020
						],
						"Strings": [
							1825
						]
					},
					"id": 1826,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1572,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1574,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1826,
							"sourceUnit": 2916,
							"src": "127:37:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1573,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2915,
										"src": "135:4:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1576,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1826,
							"sourceUnit": 3021,
							"src": "165:49:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1575,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3020,
										"src": "173:10:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1577,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:11",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1825,
							"linearizedBaseContracts": [
								1825
							],
							"name": "Strings",
							"nameLocation": "259:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1580,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:11",
									"nodeType": "VariableDeclaration",
									"scope": 1825,
									"src": "273:56:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1578,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1579,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:11",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1583,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 1825,
									"src": "335:42:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1581,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1582,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1584,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:11",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1590,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "505:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "520:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:11"
									},
									"src": "470:66:11"
								},
								{
									"body": {
										"id": 1637,
										"nodeType": "Block",
										"src": "708:627:11",
										"statements": [
											{
												"id": 1636,
												"nodeType": "UncheckedBlock",
												"src": "718:611:11",
												"statements": [
													{
														"assignments": [
															1599
														],
														"declarations": [
															{
																"constant": false,
																"id": 1599,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 1636,
																"src": "742:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1598,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1606,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1602,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1593,
																		"src": "770:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1600,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2915,
																		"src": "759:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2915_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:11",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2735,
																	"src": "759:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:11"
													},
													{
														"assignments": [
															1608
														],
														"declarations": [
															{
																"constant": false,
																"id": 1608,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 1636,
																"src": "794:20:11",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1607,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1613,
														"initialValue": {
															"arguments": [
																{
																	"id": 1611,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1599,
																	"src": "828:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1609,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:11"
													},
													{
														"assignments": [
															1615
														],
														"declarations": [
															{
																"constant": false,
																"id": 1615,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:11",
																"nodeType": "VariableDeclaration",
																"scope": 1636,
																"src": "849:11:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1614,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1616,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:11"
													},
													{
														"AST": {
															"nativeSrc": "930:67:11",
															"nodeType": "YulBlock",
															"src": "930:67:11",
															"statements": [
																{
																	"nativeSrc": "948:35:11",
																	"nodeType": "YulAssignment",
																	"src": "948:35:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:11",
																						"nodeType": "YulLiteral",
																						"src": "971:2:11",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:11"
																				},
																				"nativeSrc": "967:15:11",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:11"
																		},
																		"nativeSrc": "955:28:11",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:11"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:11"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1608,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:11",
																"valueSize": 1
															},
															{
																"declaration": 1599,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:11",
																"valueSize": 1
															},
															{
																"declaration": 1615,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:11",
																"valueSize": 1
															}
														],
														"id": 1617,
														"nodeType": "InlineAssembly",
														"src": "921:76:11"
													},
													{
														"body": {
															"id": 1632,
															"nodeType": "Block",
															"src": "1023:269:11",
															"statements": [
																{
																	"expression": {
																		"id": 1620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:11",
																		"subExpression": {
																			"id": 1619,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1615,
																			"src": "1041:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1621,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:11"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:11",
																		"nodeType": "YulBlock",
																		"src": "1124:86:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:11",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:11"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:11",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:11",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:11"
																									},
																									"nativeSrc": "1164:14:11",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:11"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:11",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:11"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:11",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:11"
																							},
																							"nativeSrc": "1159:32:11",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:11"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:11",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:11"
																					},
																					"nativeSrc": "1146:46:11",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:11"
																				},
																				"nativeSrc": "1146:46:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:11"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1580,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:11",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1615,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:11",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1593,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:11",
																			"valueSize": 1
																		}
																	],
																	"id": 1622,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:11"
																},
																{
																	"expression": {
																		"id": 1625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1623,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1593,
																			"src": "1227:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1626,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:11"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1627,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1593,
																			"src": "1260:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1631,
																	"nodeType": "IfStatement",
																	"src": "1256:21:11",
																	"trueBody": {
																		"id": 1630,
																		"nodeType": "Break",
																		"src": "1272:5:11"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1633,
														"nodeType": "WhileStatement",
														"src": "1010:282:11"
													},
													{
														"expression": {
															"id": 1634,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1608,
															"src": "1312:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1597,
														"id": 1635,
														"nodeType": "Return",
														"src": "1305:13:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1591,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:11",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "655:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:11"
									},
									"returnParameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "693:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1595,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:11"
									},
									"scope": 1825,
									"src": "637:698:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1663,
										"nodeType": "Block",
										"src": "1511:92:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1649,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1641,
																	"src": "1542:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1653,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:11",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1652,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1658,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1641,
																			"src": "1588:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1656,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3020,
																			"src": "1573:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3020_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:11",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3019,
																		"src": "1573:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1655,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1638,
																"src": "1564:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1646,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 1648,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:11",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1645,
												"id": 1662,
												"nodeType": "Return",
												"src": "1521:75:11"
											}
										]
									},
									"documentation": {
										"id": 1639,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:11",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "1459:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1640,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:11"
									},
									"returnParameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "1496:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1643,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:11"
									},
									"scope": 1825,
									"src": "1435:168:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1683,
										"nodeType": "Block",
										"src": "1782:100:11",
										"statements": [
											{
												"id": 1682,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:11",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1673,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "1835:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1676,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1667,
																				"src": "1854:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1674,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2915,
																				"src": "1842:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2915_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1675,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:11",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2857,
																			"src": "1842:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1672,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1684,
																	1767,
																	1787
																],
																"referencedDeclaration": 1767,
																"src": "1823:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1671,
														"id": 1681,
														"nodeType": "Return",
														"src": "1816:49:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1665,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:11",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "1729:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:11"
									},
									"returnParameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "1767:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1669,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:11"
									},
									"scope": 1825,
									"src": "1708:174:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1766,
										"nodeType": "Block",
										"src": "2095:435:11",
										"statements": [
											{
												"assignments": [
													1695
												],
												"declarations": [
													{
														"constant": false,
														"id": 1695,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1766,
														"src": "2105:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1694,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1697,
												"initialValue": {
													"id": 1696,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1687,
													"src": "2126:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:11"
											},
											{
												"assignments": [
													1699
												],
												"declarations": [
													{
														"constant": false,
														"id": 1699,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1766,
														"src": "2141:19:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1698,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1708,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1703,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1689,
																	"src": "2177:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1701,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1700,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:11"
											},
											{
												"expression": {
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1709,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1699,
															"src": "2198:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1711,
														"indexExpression": {
															"hexValue": "30",
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1712,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1714,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:11"
											},
											{
												"expression": {
													"id": 1719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1715,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1699,
															"src": "2223:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1717,
														"indexExpression": {
															"hexValue": "31",
															"id": 1716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1718,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1720,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:11"
											},
											{
												"body": {
													"id": 1749,
													"nodeType": "Block",
													"src": "2293:95:11",
													"statements": [
														{
															"expression": {
																"id": 1743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1735,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1699,
																		"src": "2307:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1737,
																	"indexExpression": {
																		"id": 1736,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1722,
																		"src": "2314:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1738,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1580,
																		"src": "2319:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1742,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1739,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1695,
																			"src": "2330:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1740,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1744,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:11"
														},
														{
															"expression": {
																"id": 1747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1745,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1695,
																	"src": "2361:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1748,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:11"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1729,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1722,
														"src": "2281:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1730,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1750,
												"initializationExpression": {
													"assignments": [
														1722
													],
													"declarations": [
														{
															"constant": false,
															"id": 1722,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 1750,
															"src": "2253:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1721,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1728,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1727,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1723,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1724,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1689,
																"src": "2269:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1726,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:11"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:11",
														"subExpression": {
															"id": 1732,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1722,
															"src": "2290:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1734,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:11"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1751,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1695,
														"src": "2401:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1752,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1760,
												"nodeType": "IfStatement",
												"src": "2397:96:11",
												"trueBody": {
													"id": 1759,
													"nodeType": "Block",
													"src": "2418:75:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1755,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1687,
																		"src": "2468:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1756,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1689,
																		"src": "2475:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1754,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1590,
																	"src": "2439:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1758,
															"nodeType": "RevertStatement",
															"src": "2432:50:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1763,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1699,
															"src": "2516:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1762,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1761,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 1764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1693,
												"id": 1765,
												"nodeType": "Return",
												"src": "2502:21:11"
											}
										]
									},
									"documentation": {
										"id": 1685,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:11",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "2026:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "2041:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:11"
									},
									"returnParameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "2080:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1691,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:11"
									},
									"scope": 1825,
									"src": "2005:525:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1786,
										"nodeType": "Block",
										"src": "2762:75:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1780,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1770,
																			"src": "2807:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1778,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1777,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1776,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1783,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "2815:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1775,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1684,
															1767,
															1787
														],
														"referencedDeclaration": 1767,
														"src": "2779:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1774,
												"id": 1785,
												"nodeType": "Return",
												"src": "2772:58:11"
											}
										]
									},
									"documentation": {
										"id": 1768,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:11",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "2710:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:11"
									},
									"returnParameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "2747:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1772,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:11"
									},
									"scope": 1825,
									"src": "2689:148:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1823,
										"nodeType": "Block",
										"src": "2992:104:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1807,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1799,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1790,
																		"src": "3015:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1797,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:11",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1804,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1792,
																		"src": "3034:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1803,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1802,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:11",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1820,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1811,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1790,
																			"src": "3063:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1809,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1808,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1817,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1792,
																			"src": "3086:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1815,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1814,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1796,
												"id": 1822,
												"nodeType": "Return",
												"src": "3002:87:11"
											}
										]
									},
									"documentation": {
										"id": 1788,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:11",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "2929:15:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1789,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "2946:15:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1791,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:11"
									},
									"returnParameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "2986:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1794,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:11"
									},
									"scope": 1825,
									"src": "2914:182:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1826,
							"src": "251:2847:11",
							"usedErrors": [
								1590
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1849
						],
						"IERC165": [
							1861
						]
					},
					"id": 1850,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1827,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1829,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1850,
							"sourceUnit": 1862,
							"src": "140:38:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1828,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1861,
										"src": "148:7:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1831,
										"name": "IERC165",
										"nameLocations": [
											"687:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1861,
										"src": "687:7:12"
									},
									"id": 1832,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:12"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1830,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:12",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1849,
							"linearizedBaseContracts": [
								1849,
								1861
							],
							"name": "ERC165",
							"nameLocation": "677:6:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1860
									],
									"body": {
										"id": 1847,
										"nodeType": "Block",
										"src": "844:64:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1840,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1835,
														"src": "861:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1842,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1861,
																	"src": "881:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1861_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1861_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1841,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1861",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1844,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:12",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1839,
												"id": 1846,
												"nodeType": "Return",
												"src": "854:47:12"
											}
										]
									},
									"documentation": {
										"id": 1833,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:12",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "789:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1834,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:12"
									},
									"returnParameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "838:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1837,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:12"
									},
									"scope": 1849,
									"src": "762:146:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1850,
							"src": "659:251:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1861
						]
					},
					"id": 1862,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1851,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1852,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:13",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1861,
							"linearizedBaseContracts": [
								1861
							],
							"name": "IERC165",
							"nameLocation": "431:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1853,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:13",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1860,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "817:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1854,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:13"
									},
									"returnParameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "860:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1857,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:13"
									},
									"scope": 1861,
									"src": "790:76:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1862,
							"src": "421:447:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2915
						]
					},
					"id": 2916,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1863,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1864,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:14",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2915,
							"linearizedBaseContracts": [
								2915
							],
							"name": "Math",
							"nameLocation": "211:4:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1865,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:14",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1867,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:14"
									},
									"src": "277:29:14"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1872,
									"members": [
										{
											"id": 1868,
											"name": "Floor",
											"nameLocation": "336:5:14",
											"nodeType": "EnumValue",
											"src": "336:5:14"
										},
										{
											"id": 1869,
											"name": "Ceil",
											"nameLocation": "379:4:14",
											"nodeType": "EnumValue",
											"src": "379:4:14"
										},
										{
											"id": 1870,
											"name": "Trunc",
											"nameLocation": "421:5:14",
											"nodeType": "EnumValue",
											"src": "421:5:14"
										},
										{
											"id": 1871,
											"name": "Expand",
											"nameLocation": "451:6:14",
											"nodeType": "EnumValue",
											"src": "451:6:14"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:14",
									"nodeType": "EnumDefinition",
									"src": "312:169:14"
								},
								{
									"body": {
										"id": 1903,
										"nodeType": "Block",
										"src": "661:140:14",
										"statements": [
											{
												"id": 1902,
												"nodeType": "UncheckedBlock",
												"src": "671:124:14",
												"statements": [
													{
														"assignments": [
															1885
														],
														"declarations": [
															{
																"constant": false,
																"id": 1885,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:14",
																"nodeType": "VariableDeclaration",
																"scope": 1902,
																"src": "695:9:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1884,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1889,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1886,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1875,
																"src": "707:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1887,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1877,
																"src": "711:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:14"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1890,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1885,
																"src": "730:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1891,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1875,
																"src": "734:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1897,
														"nodeType": "IfStatement",
														"src": "726:28:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1895,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1883,
															"id": 1896,
															"nodeType": "Return",
															"src": "737:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1899,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1885,
																	"src": "782:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1900,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1883,
														"id": 1901,
														"nodeType": "Return",
														"src": "768:16:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1873,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:14",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "601:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "612:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:14"
									},
									"returnParameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "646:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1879,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "652:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:14"
									},
									"scope": 2915,
									"src": "585:216:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1931,
										"nodeType": "Block",
										"src": "984:113:14",
										"statements": [
											{
												"id": 1930,
												"nodeType": "UncheckedBlock",
												"src": "994:97:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1916,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1909,
																"src": "1022:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1917,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1907,
																"src": "1026:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1923,
														"nodeType": "IfStatement",
														"src": "1018:28:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1921,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1915,
															"id": 1922,
															"nodeType": "Return",
															"src": "1029:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1924,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1927,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1925,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1907,
																		"src": "1074:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1926,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1909,
																		"src": "1078:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1928,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1915,
														"id": 1929,
														"nodeType": "Return",
														"src": "1060:20:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1905,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:14",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "924:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "935:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:14"
									},
									"returnParameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1912,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "969:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1911,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "975:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:14"
									},
									"scope": 2915,
									"src": "908:189:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1973,
										"nodeType": "Block",
										"src": "1283:417:14",
										"statements": [
											{
												"id": 1972,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1944,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1935,
																"src": "1551:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1945,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1951,
														"nodeType": "IfStatement",
														"src": "1547:28:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1947,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1949,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1943,
															"id": 1950,
															"nodeType": "Return",
															"src": "1559:16:14"
														}
													},
													{
														"assignments": [
															1953
														],
														"declarations": [
															{
																"constant": false,
																"id": 1953,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:14",
																"nodeType": "VariableDeclaration",
																"scope": 1972,
																"src": "1589:9:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1952,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1957,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1954,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1935,
																"src": "1601:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1955,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1937,
																"src": "1605:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:14"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1958,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1953,
																	"src": "1624:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1959,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1935,
																	"src": "1628:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1961,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1937,
																"src": "1633:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1967,
														"nodeType": "IfStatement",
														"src": "1620:33:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1965,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1943,
															"id": 1966,
															"nodeType": "Return",
															"src": "1636:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1969,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1953,
																	"src": "1681:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1970,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1943,
														"id": 1971,
														"nodeType": "Return",
														"src": "1667:16:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1933,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:14",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "1223:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "1234:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:14"
									},
									"returnParameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "1268:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1939,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "1274:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:14"
									},
									"scope": 2915,
									"src": "1207:493:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2001,
										"nodeType": "Block",
										"src": "1887:114:14",
										"statements": [
											{
												"id": 2000,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1986,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1979,
																"src": "1925:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1993,
														"nodeType": "IfStatement",
														"src": "1921:29:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1991,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1985,
															"id": 1992,
															"nodeType": "Return",
															"src": "1933:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1995,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1977,
																		"src": "1978:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1996,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1979,
																		"src": "1982:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1998,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1985,
														"id": 1999,
														"nodeType": "Return",
														"src": "1964:20:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1975,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:14",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2002,
												"src": "1827:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2002,
												"src": "1838:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:14"
									},
									"returnParameters": {
										"id": 1985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2002,
												"src": "1872:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1981,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1984,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2002,
												"src": "1878:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:14"
									},
									"scope": 2915,
									"src": "1811:190:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2029,
										"nodeType": "Block",
										"src": "2198:114:14",
										"statements": [
											{
												"id": 2028,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2014,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2007,
																"src": "2236:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2015,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2021,
														"nodeType": "IfStatement",
														"src": "2232:29:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2017,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2018,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2019,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2013,
															"id": 2020,
															"nodeType": "Return",
															"src": "2244:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2023,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2005,
																		"src": "2289:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2024,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2007,
																		"src": "2293:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2026,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2013,
														"id": 2027,
														"nodeType": "Return",
														"src": "2275:20:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2003,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:14",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "2138:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2007,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "2149:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:14"
									},
									"returnParameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "2183:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2009,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "2189:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:14"
									},
									"scope": 2915,
									"src": "2122:190:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2047,
										"nodeType": "Block",
										"src": "2449:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2042,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2040,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2033,
															"src": "2466:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2041,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2035,
															"src": "2470:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2044,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2035,
														"src": "2478:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:14",
													"trueExpression": {
														"id": 2043,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2033,
														"src": "2474:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2039,
												"id": 2046,
												"nodeType": "Return",
												"src": "2459:20:14"
											}
										]
									},
									"documentation": {
										"id": 2031,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:14",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2048,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "2395:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "2406:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:14"
									},
									"returnParameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "2440:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:14"
									},
									"scope": 2915,
									"src": "2382:104:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2065,
										"nodeType": "Block",
										"src": "2624:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2058,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2051,
															"src": "2641:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2059,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2053,
															"src": "2645:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2062,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2053,
														"src": "2653:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:14",
													"trueExpression": {
														"id": 2061,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2051,
														"src": "2649:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2057,
												"id": 2064,
												"nodeType": "Return",
												"src": "2634:20:14"
											}
										]
									},
									"documentation": {
										"id": 2049,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:14",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2051,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "2570:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2053,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "2581:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:14"
									},
									"returnParameters": {
										"id": 2057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "2615:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:14"
									},
									"scope": 2915,
									"src": "2557:104:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2088,
										"nodeType": "Block",
										"src": "2845:82:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2076,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2069,
																	"src": "2900:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2077,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2071,
																	"src": "2904:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2079,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2080,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2069,
																		"src": "2910:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2081,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2071,
																		"src": "2914:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2083,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2084,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2075,
												"id": 2087,
												"nodeType": "Return",
												"src": "2892:28:14"
											}
										]
									},
									"documentation": {
										"id": 2067,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:14",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2069,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "2791:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "2802:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:14"
									},
									"returnParameters": {
										"id": 2075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "2836:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:14"
									},
									"scope": 2915,
									"src": "2774:153:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2122,
										"nodeType": "Block",
										"src": "3219:260:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2099,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2094,
														"src": "3233:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2100,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2107,
												"nodeType": "IfStatement",
												"src": "3229:127:14",
												"trueBody": {
													"id": 2106,
													"nodeType": "Block",
													"src": "3241:115:14",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2102,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2092,
																	"src": "3340:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2103,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2094,
																	"src": "3344:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2098,
															"id": 2105,
															"nodeType": "Return",
															"src": "3333:12:14"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2108,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2092,
															"src": "3444:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2112,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2092,
																			"src": "3458:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2113,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2115,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2094,
																"src": "3467:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:14",
													"trueExpression": {
														"hexValue": "30",
														"id": 2111,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2098,
												"id": 2121,
												"nodeType": "Return",
												"src": "3437:35:14"
											}
										]
									},
									"documentation": {
										"id": 2090,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:14",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2092,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "3165:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2094,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "3176:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:14"
									},
									"returnParameters": {
										"id": 2098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "3210:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:14"
									},
									"scope": 2915,
									"src": "3148:331:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2248,
										"nodeType": "Block",
										"src": "3901:4018:14",
										"statements": [
											{
												"id": 2247,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:14",
												"statements": [
													{
														"assignments": [
															2136
														],
														"declarations": [
															{
																"constant": false,
																"id": 2136,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:14",
																"nodeType": "VariableDeclaration",
																"scope": 2247,
																"src": "4232:13:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2135,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2140,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2137,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2126,
																"src": "4248:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2138,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2128,
																"src": "4252:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:14"
													},
													{
														"assignments": [
															2142
														],
														"declarations": [
															{
																"constant": false,
																"id": 2142,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:14",
																"nodeType": "VariableDeclaration",
																"scope": 2247,
																"src": "4312:13:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2141,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2143,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:14"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:14",
															"nodeType": "YulBlock",
															"src": "4392:122:14",
															"statements": [
																{
																	"nativeSrc": "4410:30:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:14"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:14",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:14"
																				},
																				"nativeSrc": "4433:6:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:14"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:14"
																		},
																		"nativeSrc": "4420:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:14"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:14",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:14",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:14"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:14"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:14"
																				},
																				"nativeSrc": "4470:14:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:14"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:14"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:14"
																				},
																				"nativeSrc": "4486:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:14"
																		},
																		"nativeSrc": "4466:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:14"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2136,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2136,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2142,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2126,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:14",
																"valueSize": 1
															},
															{
																"declaration": 2128,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:14",
																"valueSize": 1
															}
														],
														"id": 2144,
														"nodeType": "InlineAssembly",
														"src": "4383:131:14"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2145,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2142,
																"src": "4595:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2153,
														"nodeType": "IfStatement",
														"src": "4591:368:14",
														"trueBody": {
															"id": 2152,
															"nodeType": "Block",
															"src": "4607:352:14",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2148,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2136,
																			"src": "4925:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2149,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2130,
																			"src": "4933:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2134,
																	"id": 2151,
																	"nodeType": "Return",
																	"src": "4918:26:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2154,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2130,
																"src": "5065:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2155,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2142,
																"src": "5080:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2161,
														"nodeType": "IfStatement",
														"src": "5061:88:14",
														"trueBody": {
															"id": 2160,
															"nodeType": "Block",
															"src": "5087:62:14",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2157,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1867,
																			"src": "5112:20:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2159,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:14"
																}
															]
														}
													},
													{
														"assignments": [
															2163
														],
														"declarations": [
															{
																"constant": false,
																"id": 2163,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:14",
																"nodeType": "VariableDeclaration",
																"scope": 2247,
																"src": "5404:17:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2162,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2164,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:14"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:14",
															"nodeType": "YulBlock",
															"src": "5444:291:14",
															"statements": [
																{
																	"nativeSrc": "5513:38:14",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:14"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:14"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:14",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:14"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:14"
																		},
																		"nativeSrc": "5526:25:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:14"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:14",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:14"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:14",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:14"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:14"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:14"
																				},
																				"nativeSrc": "5653:20:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:14"
																		},
																		"nativeSrc": "5642:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:14"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:14",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:14"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:14"
																		},
																		"nativeSrc": "5700:21:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:14"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2130,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:14",
																"valueSize": 1
															},
															{
																"declaration": 2136,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2136,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2136,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2142,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2142,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2163,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:14",
																"valueSize": 1
															},
															{
																"declaration": 2163,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:14",
																"valueSize": 1
															},
															{
																"declaration": 2163,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:14",
																"valueSize": 1
															},
															{
																"declaration": 2126,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:14",
																"valueSize": 1
															},
															{
																"declaration": 2128,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:14",
																"valueSize": 1
															}
														],
														"id": 2165,
														"nodeType": "InlineAssembly",
														"src": "5435:300:14"
													},
													{
														"assignments": [
															2167
														],
														"declarations": [
															{
																"constant": false,
																"id": 2167,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:14",
																"nodeType": "VariableDeclaration",
																"scope": 2247,
																"src": "5939:12:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2166,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2174,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2168,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2130,
																"src": "5954:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2170,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2130,
																			"src": "5973:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2172,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:14"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:14",
															"nodeType": "YulBlock",
															"src": "6008:362:14",
															"statements": [
																{
																	"nativeSrc": "6073:37:14",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:14",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:14"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:14"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:14"
																		},
																		"nativeSrc": "6088:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:14"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:14",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:14"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:14",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:14"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:14"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:14"
																		},
																		"nativeSrc": "6186:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:14"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:14",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:14",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:14",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:14",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:14"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:14"
																						},
																						"nativeSrc": "6333:12:14",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:14"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:14"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:14"
																				},
																				"nativeSrc": "6329:23:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:14",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:14"
																		},
																		"nativeSrc": "6325:31:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:14"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:14",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:14"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2130,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:14",
																"valueSize": 1
															},
															{
																"declaration": 2130,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:14",
																"valueSize": 1
															},
															{
																"declaration": 2136,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2136,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2167,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:14",
																"valueSize": 1
															},
															{
																"declaration": 2167,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:14",
																"valueSize": 1
															},
															{
																"declaration": 2167,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:14",
																"valueSize": 1
															},
															{
																"declaration": 2167,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:14",
																"valueSize": 1
															},
															{
																"declaration": 2167,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:14",
																"valueSize": 1
															}
														],
														"id": 2175,
														"nodeType": "InlineAssembly",
														"src": "5999:371:14"
													},
													{
														"expression": {
															"id": 2180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2176,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2136,
																"src": "6436:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2177,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2142,
																	"src": "6445:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2178,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2167,
																	"src": "6453:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2181,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:14"
													},
													{
														"assignments": [
															2183
														],
														"declarations": [
															{
																"constant": false,
																"id": 2183,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:14",
																"nodeType": "VariableDeclaration",
																"scope": 2247,
																"src": "6775:15:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2182,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2190,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2185,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2130,
																			"src": "6798:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2187,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2188,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:14"
													},
													{
														"expression": {
															"id": 2197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2191,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2183,
																"src": "7031:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2193,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2130,
																		"src": "7046:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2194,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2183,
																		"src": "7060:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2198,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:14"
													},
													{
														"expression": {
															"id": 2205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2199,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2183,
																"src": "7100:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2201,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2130,
																		"src": "7115:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2202,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2183,
																		"src": "7129:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2206,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:14"
													},
													{
														"expression": {
															"id": 2213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2207,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2183,
																"src": "7170:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2209,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2130,
																		"src": "7185:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2210,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2183,
																		"src": "7199:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2214,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:14"
													},
													{
														"expression": {
															"id": 2221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2215,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2183,
																"src": "7240:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2217,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2130,
																		"src": "7255:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2218,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2183,
																		"src": "7269:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2222,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:14"
													},
													{
														"expression": {
															"id": 2229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2223,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2183,
																"src": "7310:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2225,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2130,
																		"src": "7325:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2226,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2183,
																		"src": "7339:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2230,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:14"
													},
													{
														"expression": {
															"id": 2237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2231,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2183,
																"src": "7381:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2233,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2130,
																		"src": "7396:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2234,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2183,
																		"src": "7410:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2238,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:14"
													},
													{
														"expression": {
															"id": 2243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2239,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2133,
																"src": "7851:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2240,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2136,
																	"src": "7860:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2241,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2183,
																	"src": "7868:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2244,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:14"
													},
													{
														"expression": {
															"id": 2245,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2133,
															"src": "7896:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2134,
														"id": 2246,
														"nodeType": "Return",
														"src": "7889:13:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2124,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:14",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "3819:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2128,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "3830:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "3841:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:14"
									},
									"returnParameters": {
										"id": 2134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2133,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "3885:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:14"
									},
									"scope": 2915,
									"src": "3803:4116:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2291,
										"nodeType": "Block",
										"src": "8161:192:14",
										"statements": [
											{
												"assignments": [
													2265
												],
												"declarations": [
													{
														"constant": false,
														"id": 2265,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2291,
														"src": "8171:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2264,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2271,
												"initialValue": {
													"arguments": [
														{
															"id": 2267,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2252,
															"src": "8195:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2268,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2254,
															"src": "8198:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2269,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2256,
															"src": "8201:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2266,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2249,
															2292
														],
														"referencedDeclaration": 2249,
														"src": "8188:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2273,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2259,
																"src": "8244:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1872",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1872",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2272,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2914,
															"src": "8227:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1872_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2276,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2252,
																	"src": "8264:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2277,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2254,
																	"src": "8267:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2278,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2256,
																	"src": "8270:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2275,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2288,
												"nodeType": "IfStatement",
												"src": "8223:101:14",
												"trueBody": {
													"id": 2287,
													"nodeType": "Block",
													"src": "8288:36:14",
													"statements": [
														{
															"expression": {
																"id": 2285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2283,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2265,
																	"src": "8302:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2286,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:14"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2289,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2265,
													"src": "8340:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2263,
												"id": 2290,
												"nodeType": "Return",
												"src": "8333:13:14"
											}
										]
									},
									"documentation": {
										"id": 2250,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:14",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2252,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "8067:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2254,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "8078:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2256,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "8089:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2259,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "8110:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1872",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2258,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2257,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1872,
														"src": "8110:8:14"
													},
													"referencedDeclaration": 1872,
													"src": "8110:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1872",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:14"
									},
									"returnParameters": {
										"id": 2263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "8152:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:14"
									},
									"scope": 2915,
									"src": "8051:302:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2403,
										"nodeType": "Block",
										"src": "8644:1585:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2300,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2295,
														"src": "8658:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2301,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2306,
												"nodeType": "IfStatement",
												"src": "8654:45:14",
												"trueBody": {
													"id": 2305,
													"nodeType": "Block",
													"src": "8666:33:14",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2299,
															"id": 2304,
															"nodeType": "Return",
															"src": "8680:8:14"
														}
													]
												}
											},
											{
												"assignments": [
													2308
												],
												"declarations": [
													{
														"constant": false,
														"id": 2308,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2403,
														"src": "9378:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2307,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2317,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2309,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2311,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2295,
																			"src": "9406:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2310,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2571,
																			2606
																		],
																		"referencedDeclaration": 2571,
																		"src": "9401:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2315,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:14"
											},
											{
												"id": 2402,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:14",
												"statements": [
													{
														"expression": {
															"id": 2327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2318,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2308,
																"src": "9839:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2323,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2319,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2308,
																				"src": "9849:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2322,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2320,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2295,
																					"src": "9858:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2321,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2308,
																					"src": "9862:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2324,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2328,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:14"
													},
													{
														"expression": {
															"id": 2338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2329,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2308,
																"src": "9888:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2334,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2330,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2308,
																				"src": "9898:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2333,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2331,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2295,
																					"src": "9907:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2332,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2308,
																					"src": "9911:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2335,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2339,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:14"
													},
													{
														"expression": {
															"id": 2349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2340,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2308,
																"src": "9937:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2341,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2308,
																				"src": "9947:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2344,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2342,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2295,
																					"src": "9956:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2343,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2308,
																					"src": "9960:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2346,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2350,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:14"
													},
													{
														"expression": {
															"id": 2360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2351,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2308,
																"src": "9986:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2352,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2308,
																				"src": "9996:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2355,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2353,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2295,
																					"src": "10005:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2354,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2308,
																					"src": "10009:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2357,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2361,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:14"
													},
													{
														"expression": {
															"id": 2371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2362,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2308,
																"src": "10035:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2363,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2308,
																				"src": "10045:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2366,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2364,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2295,
																					"src": "10054:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2365,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2308,
																					"src": "10058:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2368,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2372,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:14"
													},
													{
														"expression": {
															"id": 2382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2373,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2308,
																"src": "10084:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2374,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2308,
																				"src": "10094:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2377,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2375,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2295,
																					"src": "10103:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2376,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2308,
																					"src": "10107:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2379,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2383,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:14"
													},
													{
														"expression": {
															"id": 2393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2384,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2308,
																"src": "10133:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2389,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2385,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2308,
																				"src": "10143:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2388,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2386,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2295,
																					"src": "10152:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2387,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2308,
																					"src": "10156:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2390,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2394,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:14"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2396,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2308,
																	"src": "10193:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2397,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2295,
																		"src": "10201:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2398,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2308,
																		"src": "10205:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2395,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2066,
																"src": "10189:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2299,
														"id": 2401,
														"nodeType": "Return",
														"src": "10182:30:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2293,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:14",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "8601:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:14"
									},
									"returnParameters": {
										"id": 2299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "8635:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:14"
									},
									"scope": 2915,
									"src": "8587:1642:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2438,
										"nodeType": "Block",
										"src": "10405:164:14",
										"statements": [
											{
												"id": 2437,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:14",
												"statements": [
													{
														"assignments": [
															2416
														],
														"declarations": [
															{
																"constant": false,
																"id": 2416,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2437,
																"src": "10439:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2415,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2420,
														"initialValue": {
															"arguments": [
																{
																	"id": 2418,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2407,
																	"src": "10461:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2417,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2404,
																	2439
																],
																"referencedDeclaration": 2404,
																"src": "10456:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2421,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2416,
																"src": "10484:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2430,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2423,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2410,
																						"src": "10511:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1872",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1872",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2422,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2914,
																					"src": "10494:16:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1872_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2424,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2429,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2427,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2425,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2416,
																						"src": "10524:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2426,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2416,
																						"src": "10533:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2428,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2407,
																					"src": "10542:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2434,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2414,
														"id": 2436,
														"nodeType": "Return",
														"src": "10477:75:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2405,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:14",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2407,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "10343:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2410,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "10354:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1872",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2409,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2408,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1872,
														"src": "10354:8:14"
													},
													"referencedDeclaration": 1872,
													"src": "10354:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1872",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:14"
									},
									"returnParameters": {
										"id": 2414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "10396:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:14"
									},
									"scope": 2915,
									"src": "10329:240:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2570,
										"nodeType": "Block",
										"src": "10760:922:14",
										"statements": [
											{
												"assignments": [
													2448
												],
												"declarations": [
													{
														"constant": false,
														"id": 2448,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2570,
														"src": "10770:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2447,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2450,
												"initialValue": {
													"hexValue": "30",
													"id": 2449,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:14"
											},
											{
												"id": 2567,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2451,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2442,
																	"src": "10826:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2454,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2465,
														"nodeType": "IfStatement",
														"src": "10822:99:14",
														"trueBody": {
															"id": 2464,
															"nodeType": "Block",
															"src": "10844:77:14",
															"statements": [
																{
																	"expression": {
																		"id": 2458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2456,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2442,
																			"src": "10862:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2457,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2459,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:14"
																},
																{
																	"expression": {
																		"id": 2462,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2460,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2448,
																			"src": "10893:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2463,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2468,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2466,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2442,
																	"src": "10938:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2480,
														"nodeType": "IfStatement",
														"src": "10934:96:14",
														"trueBody": {
															"id": 2479,
															"nodeType": "Block",
															"src": "10955:75:14",
															"statements": [
																{
																	"expression": {
																		"id": 2473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2471,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2442,
																			"src": "10973:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2474,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:14"
																},
																{
																	"expression": {
																		"id": 2477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2475,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2448,
																			"src": "11003:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2476,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2478,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2481,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2442,
																	"src": "11047:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2495,
														"nodeType": "IfStatement",
														"src": "11043:96:14",
														"trueBody": {
															"id": 2494,
															"nodeType": "Block",
															"src": "11064:75:14",
															"statements": [
																{
																	"expression": {
																		"id": 2488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2486,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2442,
																			"src": "11082:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2489,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:14"
																},
																{
																	"expression": {
																		"id": 2492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2490,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2448,
																			"src": "11112:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2491,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2493,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2496,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2442,
																	"src": "11156:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2510,
														"nodeType": "IfStatement",
														"src": "11152:96:14",
														"trueBody": {
															"id": 2509,
															"nodeType": "Block",
															"src": "11173:75:14",
															"statements": [
																{
																	"expression": {
																		"id": 2503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2501,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2442,
																			"src": "11191:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2504,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:14"
																},
																{
																	"expression": {
																		"id": 2507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2505,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2448,
																			"src": "11221:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2508,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2511,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2442,
																	"src": "11265:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2525,
														"nodeType": "IfStatement",
														"src": "11261:93:14",
														"trueBody": {
															"id": 2524,
															"nodeType": "Block",
															"src": "11281:73:14",
															"statements": [
																{
																	"expression": {
																		"id": 2518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2516,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2442,
																			"src": "11299:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2517,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2519,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:14"
																},
																{
																	"expression": {
																		"id": 2522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2520,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2448,
																			"src": "11328:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2521,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2523,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2526,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2442,
																	"src": "11371:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2540,
														"nodeType": "IfStatement",
														"src": "11367:93:14",
														"trueBody": {
															"id": 2539,
															"nodeType": "Block",
															"src": "11387:73:14",
															"statements": [
																{
																	"expression": {
																		"id": 2533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2531,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2442,
																			"src": "11405:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2532,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2534,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:14"
																},
																{
																	"expression": {
																		"id": 2537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2535,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2448,
																			"src": "11434:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2538,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2541,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2442,
																	"src": "11477:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2555,
														"nodeType": "IfStatement",
														"src": "11473:93:14",
														"trueBody": {
															"id": 2554,
															"nodeType": "Block",
															"src": "11493:73:14",
															"statements": [
																{
																	"expression": {
																		"id": 2548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2546,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2442,
																			"src": "11511:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2549,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:14"
																},
																{
																	"expression": {
																		"id": 2552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2550,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2448,
																			"src": "11540:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2551,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2553,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2556,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2442,
																	"src": "11583:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2559,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2566,
														"nodeType": "IfStatement",
														"src": "11579:64:14",
														"trueBody": {
															"id": 2565,
															"nodeType": "Block",
															"src": "11599:44:14",
															"statements": [
																{
																	"expression": {
																		"id": 2563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2561,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2448,
																			"src": "11617:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2564,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:14"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2568,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2448,
													"src": "11669:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2446,
												"id": 2569,
												"nodeType": "Return",
												"src": "11662:13:14"
											}
										]
									},
									"documentation": {
										"id": 2440,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:14",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2442,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2571,
												"src": "10713:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:14"
									},
									"returnParameters": {
										"id": 2446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2571,
												"src": "10751:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:14"
									},
									"scope": 2915,
									"src": "10699:983:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2605,
										"nodeType": "Block",
										"src": "11915:168:14",
										"statements": [
											{
												"id": 2604,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:14",
												"statements": [
													{
														"assignments": [
															2583
														],
														"declarations": [
															{
																"constant": false,
																"id": 2583,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2604,
																"src": "11949:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2582,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2587,
														"initialValue": {
															"arguments": [
																{
																	"id": 2585,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2574,
																	"src": "11971:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2584,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2571,
																	2606
																],
																"referencedDeclaration": 2571,
																"src": "11966:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2588,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2583,
																"src": "11998:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2590,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2577,
																						"src": "12025:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1872",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1872",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2589,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2914,
																					"src": "12008:16:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1872_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2591,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2596,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2594,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2592,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2593,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2583,
																						"src": "12043:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2595,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2574,
																					"src": "12052:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2598,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2601,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2581,
														"id": 2603,
														"nodeType": "Return",
														"src": "11991:75:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2572,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:14",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2574,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2606,
												"src": "11849:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2577,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2606,
												"src": "11864:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1872",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2576,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2575,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1872,
														"src": "11864:8:14"
													},
													"referencedDeclaration": 1872,
													"src": "11864:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1872",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:14"
									},
									"returnParameters": {
										"id": 2581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2606,
												"src": "11906:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:14"
									},
									"scope": 2915,
									"src": "11835:248:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2734,
										"nodeType": "Block",
										"src": "12276:854:14",
										"statements": [
											{
												"assignments": [
													2615
												],
												"declarations": [
													{
														"constant": false,
														"id": 2615,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2734,
														"src": "12286:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2614,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2617,
												"initialValue": {
													"hexValue": "30",
													"id": 2616,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:14"
											},
											{
												"id": 2731,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2618,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2609,
																"src": "12342:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2621,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2634,
														"nodeType": "IfStatement",
														"src": "12338:103:14",
														"trueBody": {
															"id": 2633,
															"nodeType": "Block",
															"src": "12361:80:14",
															"statements": [
																{
																	"expression": {
																		"id": 2627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2623,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2609,
																			"src": "12379:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2624,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2625,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2628,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:14"
																},
																{
																	"expression": {
																		"id": 2631,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2629,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2615,
																			"src": "12414:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2630,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2632,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2635,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2609,
																"src": "12458:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2651,
														"nodeType": "IfStatement",
														"src": "12454:103:14",
														"trueBody": {
															"id": 2650,
															"nodeType": "Block",
															"src": "12477:80:14",
															"statements": [
																{
																	"expression": {
																		"id": 2644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2640,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2609,
																			"src": "12495:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2641,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2645,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:14"
																},
																{
																	"expression": {
																		"id": 2648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2646,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2615,
																			"src": "12530:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2647,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2649,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2652,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2609,
																"src": "12574:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2668,
														"nodeType": "IfStatement",
														"src": "12570:103:14",
														"trueBody": {
															"id": 2667,
															"nodeType": "Block",
															"src": "12593:80:14",
															"statements": [
																{
																	"expression": {
																		"id": 2661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2657,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2609,
																			"src": "12611:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2660,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2658,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2659,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2662,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:14"
																},
																{
																	"expression": {
																		"id": 2665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2663,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2615,
																			"src": "12646:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2666,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2669,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2609,
																"src": "12690:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2672,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2685,
														"nodeType": "IfStatement",
														"src": "12686:100:14",
														"trueBody": {
															"id": 2684,
															"nodeType": "Block",
															"src": "12708:78:14",
															"statements": [
																{
																	"expression": {
																		"id": 2678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2674,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2609,
																			"src": "12726:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2677,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2675,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2676,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2679,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:14"
																},
																{
																	"expression": {
																		"id": 2682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2680,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2615,
																			"src": "12760:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2683,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2686,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2609,
																"src": "12803:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2702,
														"nodeType": "IfStatement",
														"src": "12799:100:14",
														"trueBody": {
															"id": 2701,
															"nodeType": "Block",
															"src": "12821:78:14",
															"statements": [
																{
																	"expression": {
																		"id": 2695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2691,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2609,
																			"src": "12839:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2694,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2692,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2693,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2696,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:14"
																},
																{
																	"expression": {
																		"id": 2699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2697,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2615,
																			"src": "12873:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2700,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2703,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2609,
																"src": "12916:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2706,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2719,
														"nodeType": "IfStatement",
														"src": "12912:100:14",
														"trueBody": {
															"id": 2718,
															"nodeType": "Block",
															"src": "12934:78:14",
															"statements": [
																{
																	"expression": {
																		"id": 2712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2708,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2609,
																			"src": "12952:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2709,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2710,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2713,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:14"
																},
																{
																	"expression": {
																		"id": 2716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2714,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2615,
																			"src": "12986:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2717,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2720,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2609,
																"src": "13029:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2723,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2730,
														"nodeType": "IfStatement",
														"src": "13025:66:14",
														"trueBody": {
															"id": 2729,
															"nodeType": "Block",
															"src": "13047:44:14",
															"statements": [
																{
																	"expression": {
																		"id": 2727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2725,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2615,
																			"src": "13065:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2726,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2728,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:14"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2732,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2615,
													"src": "13117:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2613,
												"id": 2733,
												"nodeType": "Return",
												"src": "13110:13:14"
											}
										]
									},
									"documentation": {
										"id": 2607,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:14",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2735,
												"src": "12229:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:14"
									},
									"returnParameters": {
										"id": 2613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2735,
												"src": "12267:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:14"
									},
									"scope": 2915,
									"src": "12214:916:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2769,
										"nodeType": "Block",
										"src": "13365:170:14",
										"statements": [
											{
												"id": 2768,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:14",
												"statements": [
													{
														"assignments": [
															2747
														],
														"declarations": [
															{
																"constant": false,
																"id": 2747,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2768,
																"src": "13399:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2746,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2751,
														"initialValue": {
															"arguments": [
																{
																	"id": 2749,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2738,
																	"src": "13422:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2748,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2735,
																	2770
																],
																"referencedDeclaration": 2735,
																"src": "13416:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2752,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2747,
																"src": "13449:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2754,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2741,
																						"src": "13476:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1872",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1872",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2753,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2914,
																					"src": "13459:16:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1872_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2755,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2760,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2758,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2756,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2757,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2747,
																						"src": "13495:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2759,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2738,
																					"src": "13504:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2762,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2765,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2745,
														"id": 2767,
														"nodeType": "Return",
														"src": "13442:76:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2736,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:14",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2738,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2770,
												"src": "13299:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2741,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2770,
												"src": "13314:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1872",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2740,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2739,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1872,
														"src": "13314:8:14"
													},
													"referencedDeclaration": 1872,
													"src": "13314:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1872",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:14"
									},
									"returnParameters": {
										"id": 2745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2770,
												"src": "13356:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:14"
									},
									"scope": 2915,
									"src": "13284:251:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2856,
										"nodeType": "Block",
										"src": "13855:600:14",
										"statements": [
											{
												"assignments": [
													2779
												],
												"declarations": [
													{
														"constant": false,
														"id": 2779,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2856,
														"src": "13865:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2778,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2781,
												"initialValue": {
													"hexValue": "30",
													"id": 2780,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:14"
											},
											{
												"id": 2853,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2782,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2773,
																	"src": "13921:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2796,
														"nodeType": "IfStatement",
														"src": "13917:98:14",
														"trueBody": {
															"id": 2795,
															"nodeType": "Block",
															"src": "13939:76:14",
															"statements": [
																{
																	"expression": {
																		"id": 2789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2787,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2773,
																			"src": "13957:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2788,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2790,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:14"
																},
																{
																	"expression": {
																		"id": 2793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2791,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2779,
																			"src": "13988:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2792,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2794,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2797,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2773,
																	"src": "14032:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2800,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2811,
														"nodeType": "IfStatement",
														"src": "14028:95:14",
														"trueBody": {
															"id": 2810,
															"nodeType": "Block",
															"src": "14049:74:14",
															"statements": [
																{
																	"expression": {
																		"id": 2804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2802,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2773,
																			"src": "14067:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2805,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:14"
																},
																{
																	"expression": {
																		"id": 2808,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2806,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2779,
																			"src": "14097:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2809,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2812,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2773,
																	"src": "14140:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2815,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2826,
														"nodeType": "IfStatement",
														"src": "14136:95:14",
														"trueBody": {
															"id": 2825,
															"nodeType": "Block",
															"src": "14157:74:14",
															"statements": [
																{
																	"expression": {
																		"id": 2819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2817,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2773,
																			"src": "14175:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2820,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:14"
																},
																{
																	"expression": {
																		"id": 2823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2821,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2779,
																			"src": "14205:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2824,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2827,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2773,
																	"src": "14248:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2841,
														"nodeType": "IfStatement",
														"src": "14244:95:14",
														"trueBody": {
															"id": 2840,
															"nodeType": "Block",
															"src": "14265:74:14",
															"statements": [
																{
																	"expression": {
																		"id": 2834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2832,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2773,
																			"src": "14283:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2835,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:14"
																},
																{
																	"expression": {
																		"id": 2838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2836,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2779,
																			"src": "14313:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2839,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2842,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2773,
																	"src": "14356:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2845,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2852,
														"nodeType": "IfStatement",
														"src": "14352:64:14",
														"trueBody": {
															"id": 2851,
															"nodeType": "Block",
															"src": "14372:44:14",
															"statements": [
																{
																	"expression": {
																		"id": 2849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2847,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2779,
																			"src": "14390:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2850,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:14"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2854,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2779,
													"src": "14442:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2777,
												"id": 2855,
												"nodeType": "Return",
												"src": "14435:13:14"
											}
										]
									},
									"documentation": {
										"id": 2771,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:14",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2773,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2857,
												"src": "13808:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:14"
									},
									"returnParameters": {
										"id": 2777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2776,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2857,
												"src": "13846:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:14"
									},
									"scope": 2915,
									"src": "13792:663:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2894,
										"nodeType": "Block",
										"src": "14692:177:14",
										"statements": [
											{
												"id": 2893,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:14",
												"statements": [
													{
														"assignments": [
															2869
														],
														"declarations": [
															{
																"constant": false,
																"id": 2869,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2893,
																"src": "14726:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2868,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2873,
														"initialValue": {
															"arguments": [
																{
																	"id": 2871,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2860,
																	"src": "14750:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2870,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2857,
																	2895
																],
																"referencedDeclaration": 2857,
																"src": "14743:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2874,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2869,
																"src": "14777:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2876,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2863,
																						"src": "14804:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1872",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1872",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2875,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2914,
																					"src": "14787:16:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1872_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2877,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2885,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2883,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2878,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2881,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2879,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2869,
																									"src": "14823:6:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2880,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2882,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2884,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2860,
																					"src": "14838:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2887,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2890,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2867,
														"id": 2892,
														"nodeType": "Return",
														"src": "14770:82:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2858,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:14",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2860,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2895,
												"src": "14626:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2863,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2895,
												"src": "14641:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1872",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2862,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2861,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1872,
														"src": "14641:8:14"
													},
													"referencedDeclaration": 1872,
													"src": "14641:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1872",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:14"
									},
									"returnParameters": {
										"id": 2867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2895,
												"src": "14683:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:14"
									},
									"scope": 2915,
									"src": "14610:259:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2913,
										"nodeType": "Block",
										"src": "15067:48:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2909,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2906,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2899,
																	"src": "15090:8:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1872",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1872",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2905,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2904,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2910,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2903,
												"id": 2912,
												"nodeType": "Return",
												"src": "15077:31:14"
											}
										]
									},
									"documentation": {
										"id": 2896,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:14",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2899,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2914,
												"src": "15019:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1872",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2898,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2897,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1872,
														"src": "15019:8:14"
													},
													"referencedDeclaration": 1872,
													"src": "15019:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1872",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:14"
									},
									"returnParameters": {
										"id": 2903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2902,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2914,
												"src": "15061:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2901,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:14"
									},
									"scope": 2915,
									"src": "14993:122:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2916,
							"src": "203:14914:14",
							"usedErrors": [
								1867
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3020
						]
					},
					"id": 3021,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2917,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2918,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:15",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3020,
							"linearizedBaseContracts": [
								3020
							],
							"name": "SignedMath",
							"nameLocation": "224:10:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2935,
										"nodeType": "Block",
										"src": "376:37:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2930,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2928,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2921,
															"src": "393:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2929,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2923,
															"src": "397:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2932,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2923,
														"src": "405:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:15",
													"trueExpression": {
														"id": 2931,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2921,
														"src": "401:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2927,
												"id": 2934,
												"nodeType": "Return",
												"src": "386:20:15"
											}
										]
									},
									"documentation": {
										"id": 2919,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:15",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2921,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2936,
												"src": "325:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2920,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2923,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2936,
												"src": "335:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2922,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:15"
									},
									"returnParameters": {
										"id": 2927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2936,
												"src": "368:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2925,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:15"
									},
									"scope": 3020,
									"src": "312:101:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2953,
										"nodeType": "Block",
										"src": "555:37:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2948,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2946,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2939,
															"src": "572:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2947,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2941,
															"src": "576:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2950,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2941,
														"src": "584:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:15",
													"trueExpression": {
														"id": 2949,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2939,
														"src": "580:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2945,
												"id": 2952,
												"nodeType": "Return",
												"src": "565:20:15"
											}
										]
									},
									"documentation": {
										"id": 2937,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:15",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2939,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2954,
												"src": "504:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2938,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2941,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2954,
												"src": "514:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2940,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:15"
									},
									"returnParameters": {
										"id": 2945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2944,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2954,
												"src": "547:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2943,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:15"
									},
									"scope": 3020,
									"src": "491:101:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2997,
										"nodeType": "Block",
										"src": "797:162:15",
										"statements": [
											{
												"assignments": [
													2965
												],
												"declarations": [
													{
														"constant": false,
														"id": 2965,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:15",
														"nodeType": "VariableDeclaration",
														"scope": 2997,
														"src": "859:8:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2964,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2978,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2966,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2957,
																	"src": "871:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2967,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2959,
																	"src": "875:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2969,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2972,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2970,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2957,
																				"src": "882:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2971,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2959,
																				"src": "886:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2973,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2976,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:15"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2979,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2965,
														"src": "911:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2987,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2984,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2965,
																						"src": "931:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2983,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2982,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:15",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2985,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2986,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2981,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2980,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:15",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2991,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2989,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2957,
																				"src": "945:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2990,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2959,
																				"src": "949:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2992,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2994,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2963,
												"id": 2996,
												"nodeType": "Return",
												"src": "904:48:15"
											}
										]
									},
									"documentation": {
										"id": 2955,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:15",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2957,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2998,
												"src": "746:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2956,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2959,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2998,
												"src": "756:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2958,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:15"
									},
									"returnParameters": {
										"id": 2963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2962,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2998,
												"src": "789:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2961,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:15"
									},
									"scope": 3020,
									"src": "729:230:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3018,
										"nodeType": "Block",
										"src": "1103:158:15",
										"statements": [
											{
												"id": 3017,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:15",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3008,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3001,
																			"src": "1228:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:15",
																		"subExpression": {
																			"id": 3012,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3001,
																			"src": "1242:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:15",
																	"trueExpression": {
																		"id": 3011,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3001,
																		"src": "1237:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3007,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3006,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 3015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3005,
														"id": 3016,
														"nodeType": "Return",
														"src": "1213:31:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2999,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:15",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3001,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3019,
												"src": "1061:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3000,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:15"
									},
									"returnParameters": {
										"id": 3005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3004,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3019,
												"src": "1094:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:15"
									},
									"scope": 3020,
									"src": "1048:213:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3021,
							"src": "216:1047:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:15"
				},
				"id": 15
			},
			"contracts/Approval_Contracts/AddressManager.sol": {
				"ast": {
					"absolutePath": "contracts/Approval_Contracts/AddressManager.sol",
					"exportedSymbols": {
						"AddressManager": [
							3178
						]
					},
					"id": 3179,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3022,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressManager",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3178,
							"linearizedBaseContracts": [
								3178
							],
							"name": "AddressManager",
							"nameLocation": "73:14:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 3024,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "110:5:16",
									"nodeType": "VariableDeclaration",
									"scope": 3178,
									"src": "95:20:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3023,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "95:7:16",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ead7934f",
									"id": 3028,
									"mutability": "mutable",
									"name": "companyAddresses",
									"nameLocation": "154:16:16",
									"nodeType": "VariableDeclaration",
									"scope": 3178,
									"src": "122:48:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 3027,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3025,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "130:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "122:24:16",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3026,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "141:4:16",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "504b19cb",
									"id": 3032,
									"mutability": "mutable",
									"name": "coordinatorAddresses",
									"nameLocation": "209:20:16",
									"nodeType": "VariableDeclaration",
									"scope": 3178,
									"src": "177:52:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 3031,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3029,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "185:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "177:24:16",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3030,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "196:4:16",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cd33c38f",
									"id": 3036,
									"mutability": "mutable",
									"name": "governmentAddresses",
									"nameLocation": "268:19:16",
									"nodeType": "VariableDeclaration",
									"scope": 3178,
									"src": "236:51:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 3035,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3033,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "244:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "236:24:16",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3034,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "255:4:16",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 3044,
										"nodeType": "Block",
										"src": "310:37:16",
										"statements": [
											{
												"expression": {
													"id": 3042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3039,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3024,
														"src": "321:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3040,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "329:3:16",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 3041,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "333:6:16",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "329:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "321:18:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3043,
												"nodeType": "ExpressionStatement",
												"src": "321:18:16"
											}
										]
									},
									"id": 3045,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3037,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "307:2:16"
									},
									"returnParameters": {
										"id": 3038,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "310:0:16"
									},
									"scope": 3178,
									"src": "296:51:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3056,
										"nodeType": "Block",
										"src": "376:102:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3048,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "395:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "399:6:16",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "395:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3050,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3024,
																"src": "409:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "395:19:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920746865206f776e65722063616e20706572666f726d207468697320616374696f6e2e",
															"id": 3052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "416:41:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b31fadb2896749f550dcf78218e622fcf1aec8c63dbb39a49eb9b7a87ed790a6",
																"typeString": "literal_string \"Only the owner can perform this action.\""
															},
															"value": "Only the owner can perform this action."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b31fadb2896749f550dcf78218e622fcf1aec8c63dbb39a49eb9b7a87ed790a6",
																"typeString": "literal_string \"Only the owner can perform this action.\""
															}
														],
														"id": 3047,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "387:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "387:71:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3054,
												"nodeType": "ExpressionStatement",
												"src": "387:71:16"
											},
											{
												"id": 3055,
												"nodeType": "PlaceholderStatement",
												"src": "469:1:16"
											}
										]
									},
									"id": 3057,
									"name": "onlyOwner",
									"nameLocation": "364:9:16",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "373:2:16"
									},
									"src": "355:123:16",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3070,
										"nodeType": "Block",
										"src": "583:52:16",
										"statements": [
											{
												"expression": {
													"id": 3068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3064,
															"name": "companyAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3028,
															"src": "594:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 3066,
														"indexExpression": {
															"id": 3065,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3059,
															"src": "611:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "594:26:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3067,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "623:4:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "594:33:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3069,
												"nodeType": "ExpressionStatement",
												"src": "594:33:16"
											}
										]
									},
									"functionSelector": "0a7c358d",
									"id": 3071,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3062,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3061,
												"name": "onlyOwner",
												"nameLocations": [
													"573:9:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3057,
												"src": "573:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "573:9:16"
										}
									],
									"name": "addCompanyAddress",
									"nameLocation": "530:17:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3059,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "556:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3071,
												"src": "548:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "548:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "547:18:16"
									},
									"returnParameters": {
										"id": 3063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "583:0:16"
									},
									"scope": 3178,
									"src": "521:114:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3084,
										"nodeType": "Block",
										"src": "708:53:16",
										"statements": [
											{
												"expression": {
													"id": 3082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3078,
															"name": "companyAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3028,
															"src": "719:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 3080,
														"indexExpression": {
															"id": 3079,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3073,
															"src": "736:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "719:26:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 3081,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "748:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "719:34:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3083,
												"nodeType": "ExpressionStatement",
												"src": "719:34:16"
											}
										]
									},
									"functionSelector": "43292f6e",
									"id": 3085,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3076,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3075,
												"name": "onlyOwner",
												"nameLocations": [
													"698:9:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3057,
												"src": "698:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "698:9:16"
										}
									],
									"name": "removeCompanyAddress",
									"nameLocation": "652:20:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3073,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "681:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3085,
												"src": "673:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "673:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:18:16"
									},
									"returnParameters": {
										"id": 3077,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "708:0:16"
									},
									"scope": 3178,
									"src": "643:118:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3096,
										"nodeType": "Block",
										"src": "847:52:16",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3092,
														"name": "companyAddresses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3028,
														"src": "865:16:16",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 3094,
													"indexExpression": {
														"id": 3093,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3087,
														"src": "882:8:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "865:26:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3091,
												"id": 3095,
												"nodeType": "Return",
												"src": "858:33:16"
											}
										]
									},
									"functionSelector": "dbba103a",
									"id": 3097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isCompanyAddressAllowed",
									"nameLocation": "778:23:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3087,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "810:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3097,
												"src": "802:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "801:18:16"
									},
									"returnParameters": {
										"id": 3091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3090,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3097,
												"src": "841:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3089,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "841:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "840:6:16"
									},
									"scope": 3178,
									"src": "769:130:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3110,
										"nodeType": "Block",
										"src": "1012:56:16",
										"statements": [
											{
												"expression": {
													"id": 3108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3104,
															"name": "coordinatorAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3032,
															"src": "1023:20:16",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 3106,
														"indexExpression": {
															"id": 3105,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3099,
															"src": "1044:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1023:30:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1056:4:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1023:37:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3109,
												"nodeType": "ExpressionStatement",
												"src": "1023:37:16"
											}
										]
									},
									"functionSelector": "0694316b",
									"id": 3111,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3102,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3101,
												"name": "onlyOwner",
												"nameLocations": [
													"1002:9:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3057,
												"src": "1002:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "1002:9:16"
										}
									],
									"name": "addCoordinatorAddress",
									"nameLocation": "955:21:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3099,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "985:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3111,
												"src": "977:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "976:18:16"
									},
									"returnParameters": {
										"id": 3103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1012:0:16"
									},
									"scope": 3178,
									"src": "946:122:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3124,
										"nodeType": "Block",
										"src": "1145:57:16",
										"statements": [
											{
												"expression": {
													"id": 3122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3118,
															"name": "coordinatorAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3032,
															"src": "1156:20:16",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 3120,
														"indexExpression": {
															"id": 3119,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3113,
															"src": "1177:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1156:30:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 3121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1189:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1156:38:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3123,
												"nodeType": "ExpressionStatement",
												"src": "1156:38:16"
											}
										]
									},
									"functionSelector": "e0f9433d",
									"id": 3125,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3116,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3115,
												"name": "onlyOwner",
												"nameLocations": [
													"1135:9:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3057,
												"src": "1135:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "1135:9:16"
										}
									],
									"name": "removeCoordinatorAddress",
									"nameLocation": "1085:24:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3113,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1118:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3125,
												"src": "1110:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1110:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1109:18:16"
									},
									"returnParameters": {
										"id": 3117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1145:0:16"
									},
									"scope": 3178,
									"src": "1076:126:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3136,
										"nodeType": "Block",
										"src": "1292:56:16",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3132,
														"name": "coordinatorAddresses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3032,
														"src": "1310:20:16",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 3134,
													"indexExpression": {
														"id": 3133,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3127,
														"src": "1331:8:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1310:30:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3131,
												"id": 3135,
												"nodeType": "Return",
												"src": "1303:37:16"
											}
										]
									},
									"functionSelector": "4b86bd3d",
									"id": 3137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isCoordinatorAddressAllowed",
									"nameLocation": "1219:27:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3127,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1255:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3137,
												"src": "1247:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:18:16"
									},
									"returnParameters": {
										"id": 3131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3137,
												"src": "1286:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3129,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1286:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1285:6:16"
									},
									"scope": 3178,
									"src": "1210:138:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3150,
										"nodeType": "Block",
										"src": "1459:55:16",
										"statements": [
											{
												"expression": {
													"id": 3148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3144,
															"name": "governmentAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3036,
															"src": "1470:19:16",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 3146,
														"indexExpression": {
															"id": 3145,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3139,
															"src": "1490:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1470:29:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3147,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1502:4:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1470:36:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3149,
												"nodeType": "ExpressionStatement",
												"src": "1470:36:16"
											}
										]
									},
									"functionSelector": "c5072a31",
									"id": 3151,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3141,
												"name": "onlyOwner",
												"nameLocations": [
													"1449:9:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3057,
												"src": "1449:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "1449:9:16"
										}
									],
									"name": "addGovernmentAddress",
									"nameLocation": "1403:20:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3139,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1432:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3151,
												"src": "1424:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1423:18:16"
									},
									"returnParameters": {
										"id": 3143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1459:0:16"
									},
									"scope": 3178,
									"src": "1394:120:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3164,
										"nodeType": "Block",
										"src": "1590:56:16",
										"statements": [
											{
												"expression": {
													"id": 3162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3158,
															"name": "governmentAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3036,
															"src": "1601:19:16",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 3160,
														"indexExpression": {
															"id": 3159,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3153,
															"src": "1621:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1601:29:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 3161,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1633:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1601:37:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3163,
												"nodeType": "ExpressionStatement",
												"src": "1601:37:16"
											}
										]
									},
									"functionSelector": "d582ccac",
									"id": 3165,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3156,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3155,
												"name": "onlyOwner",
												"nameLocations": [
													"1580:9:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3057,
												"src": "1580:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "1580:9:16"
										}
									],
									"name": "removeGovernmentAddress",
									"nameLocation": "1531:23:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3153,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1563:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3165,
												"src": "1555:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1555:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1554:18:16"
									},
									"returnParameters": {
										"id": 3157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1590:0:16"
									},
									"scope": 3178,
									"src": "1522:124:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3176,
										"nodeType": "Block",
										"src": "1735:55:16",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3172,
														"name": "governmentAddresses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3036,
														"src": "1753:19:16",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 3174,
													"indexExpression": {
														"id": 3173,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3167,
														"src": "1773:8:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1753:29:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3171,
												"id": 3175,
												"nodeType": "Return",
												"src": "1746:36:16"
											}
										]
									},
									"functionSelector": "fd8cdd32",
									"id": 3177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isGovernmentAddressAllowed",
									"nameLocation": "1663:26:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3167,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1698:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3177,
												"src": "1690:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1690:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1689:18:16"
									},
									"returnParameters": {
										"id": 3171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3177,
												"src": "1729:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3169,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1729:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:6:16"
									},
									"scope": 3178,
									"src": "1654:136:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3179,
							"src": "64:1729:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:1758:16"
				},
				"id": 16
			},
			"contracts/Approval_Contracts/BusNFT.sol": {
				"ast": {
					"absolutePath": "contracts/Approval_Contracts/BusNFT.sol",
					"exportedSymbols": {
						"AddressManager": [
							3178
						],
						"BusNft": [
							3319
						],
						"Counters": [
							1570
						],
						"ERC721": [
							1177
						],
						"ERC721URIStorage": [
							1438
						],
						"IERC165": [
							1861
						],
						"IERC4906": [
							27
						],
						"Strings": [
							1825
						]
					},
					"id": 3320,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3180,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:17"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"id": 3181,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3320,
							"sourceUnit": 1439,
							"src": "60:78:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 3182,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3320,
							"sourceUnit": 1571,
							"src": "140:52:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Approval_Contracts/AddressManager.sol",
							"file": "./AddressManager.sol",
							"id": 3183,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3320,
							"sourceUnit": 3179,
							"src": "194:30:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3184,
										"name": "ERC721URIStorage",
										"nameLocations": [
											"295:16:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1438,
										"src": "295:16:17"
									},
									"id": 3185,
									"nodeType": "InheritanceSpecifier",
									"src": "295:16:17"
								}
							],
							"canonicalName": "BusNft",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3319,
							"linearizedBaseContracts": [
								3319,
								1438,
								1177,
								121,
								1466,
								27,
								1294,
								1849,
								1861,
								1496
							],
							"name": "BusNft",
							"nameLocation": "285:6:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 3189,
									"libraryName": {
										"id": 3186,
										"name": "Counters",
										"nameLocations": [
											"325:8:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1570,
										"src": "325:8:17"
									},
									"nodeType": "UsingForDirective",
									"src": "319:36:17",
									"typeName": {
										"id": 3188,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3187,
											"name": "Counters.Counter",
											"nameLocations": [
												"338:8:17",
												"347:7:17"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1502,
											"src": "338:16:17"
										},
										"referencedDeclaration": 1502,
										"src": "338:16:17",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1502_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 3192,
									"mutability": "mutable",
									"name": "_nftTokenId",
									"nameLocation": "386:11:17",
									"nodeType": "VariableDeclaration",
									"scope": 3319,
									"src": "361:36:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1502_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 3191,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3190,
											"name": "Counters.Counter",
											"nameLocations": [
												"361:8:17",
												"370:7:17"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1502,
											"src": "361:16:17"
										},
										"referencedDeclaration": 1502,
										"src": "361:16:17",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1502_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "2ae9915b",
									"id": 3194,
									"mutability": "mutable",
									"name": "addressManagerAddress",
									"nameLocation": "421:21:17",
									"nodeType": "VariableDeclaration",
									"scope": 3319,
									"src": "406:36:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3193,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "406:7:17",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 3198,
									"mutability": "mutable",
									"name": "busIdToTokenId",
									"nameLocation": "485:14:17",
									"nodeType": "VariableDeclaration",
									"scope": 3319,
									"src": "449:50:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 3197,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3195,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "457:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "449:27:17",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3196,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "468:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3203,
									"mutability": "mutable",
									"name": "companyToTokenIds",
									"nameLocation": "580:17:17",
									"nodeType": "VariableDeclaration",
									"scope": 3319,
									"src": "542:55:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(uint256 => uint256[])"
									},
									"typeName": {
										"id": 3202,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3199,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "550:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "542:29:17",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(uint256 => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 3200,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "561:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 3201,
											"nodeType": "ArrayTypeName",
											"src": "561:9:17",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 3216,
										"nodeType": "Block",
										"src": "722:65:17",
										"statements": [
											{
												"expression": {
													"id": 3214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3212,
														"name": "addressManagerAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3194,
														"src": "733:21:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3213,
														"name": "_addressManagerAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3205,
														"src": "757:22:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "733:46:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3215,
												"nodeType": "ExpressionStatement",
												"src": "733:46:17"
											}
										]
									},
									"id": 3217,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4275734e4654",
													"id": 3208,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "705:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_3385c607454996c6d7efa91c71af883b4cc6223b32b55b9b00f6c354e4a2f1c6",
														"typeString": "literal_string \"BusNFT\""
													},
													"value": "BusNFT"
												},
												{
													"hexValue": "425553",
													"id": 3209,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "715:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_89f51dc73d9b327d161fdb5146d6b0f4e6f21e6c4c94c6709f62614eb9600284",
														"typeString": "literal_string \"BUS\""
													},
													"value": "BUS"
												}
											],
											"id": 3210,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3207,
												"name": "ERC721",
												"nameLocations": [
													"698:6:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1177,
												"src": "698:6:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "698:23:17"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3205,
												"mutability": "mutable",
												"name": "_addressManagerAddress",
												"nameLocation": "674:22:17",
												"nodeType": "VariableDeclaration",
												"scope": 3217,
												"src": "666:30:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "666:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "665:32:17"
									},
									"returnParameters": {
										"id": 3211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "722:0:17"
									},
									"scope": 3319,
									"src": "654:133:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3231,
										"nodeType": "Block",
										"src": "821:159:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 3224,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "905:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "909:6:17",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "905:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 3221,
																			"name": "addressManagerAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3194,
																			"src": "855:21:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 3220,
																		"name": "AddressManager",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3178,
																		"src": "840:14:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_AddressManager_$3178_$",
																			"typeString": "type(contract AddressManager)"
																		}
																	},
																	"id": 3222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "840:37:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AddressManager_$3178",
																		"typeString": "contract AddressManager"
																	}
																},
																"id": 3223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "878:26:17",
																"memberName": "isGovernmentAddressAllowed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3177,
																"src": "840:64:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view external returns (bool)"
																}
															},
															"id": 3226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "840:76:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f7420616e20617574686f72697a656420676f7665726e6d656e742e",
															"id": 3227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "918:41:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_16fc7e8bb1c4f22d3779cd41535c2f1b4f2be4694fd48d7116d0ac20c4362548",
																"typeString": "literal_string \"Caller is not an authorized government.\""
															},
															"value": "Caller is not an authorized government."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_16fc7e8bb1c4f22d3779cd41535c2f1b4f2be4694fd48d7116d0ac20c4362548",
																"typeString": "literal_string \"Caller is not an authorized government.\""
															}
														],
														"id": 3219,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "832:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "832:128:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3229,
												"nodeType": "ExpressionStatement",
												"src": "832:128:17"
											},
											{
												"id": 3230,
												"nodeType": "PlaceholderStatement",
												"src": "971:1:17"
											}
										]
									},
									"id": 3232,
									"name": "onlyGovernment",
									"nameLocation": "804:14:17",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "818:2:17"
									},
									"src": "795:185:17",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3283,
										"nodeType": "Block",
										"src": "1210:422:17",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3247,
															"name": "_nftTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3192,
															"src": "1221:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1502_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3249,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1233:9:17",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1528,
														"src": "1221:21:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1502_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1502_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 3250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1221:23:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3251,
												"nodeType": "ExpressionStatement",
												"src": "1221:23:17"
											},
											{
												"assignments": [
													3253
												],
												"declarations": [
													{
														"constant": false,
														"id": 3253,
														"mutability": "mutable",
														"name": "newItemId",
														"nameLocation": "1263:9:17",
														"nodeType": "VariableDeclaration",
														"scope": 3283,
														"src": "1255:17:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3252,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1255:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3257,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3254,
															"name": "_nftTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3192,
															"src": "1275:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1502_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3255,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1287:7:17",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1514,
														"src": "1275:19:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1502_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1502_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 3256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1275:21:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1255:41:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3259,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3234,
															"src": "1315:2:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3260,
															"name": "newItemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3253,
															"src": "1319:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3258,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "1309:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1309:20:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3262,
												"nodeType": "ExpressionStatement",
												"src": "1309:20:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3264,
															"name": "newItemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3253,
															"src": "1353:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3265,
															"name": "tokenURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3236,
															"src": "1364:8:17",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3263,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1437,
														"src": "1340:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 3266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1340:33:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3267,
												"nodeType": "ExpressionStatement",
												"src": "1340:33:17"
											},
											{
												"expression": {
													"id": 3272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3268,
															"name": "busIdToTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3198,
															"src": "1447:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3270,
														"indexExpression": {
															"id": 3269,
															"name": "busId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3238,
															"src": "1462:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1447:21:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3271,
														"name": "newItemId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3253,
														"src": "1471:9:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1447:33:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3273,
												"nodeType": "ExpressionStatement",
												"src": "1447:33:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3278,
															"name": "newItemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3253,
															"src": "1585:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 3274,
																"name": "companyToTokenIds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3203,
																"src": "1551:17:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(uint256 => uint256[] storage ref)"
																}
															},
															"id": 3276,
															"indexExpression": {
																"id": 3275,
																"name": "companyId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3240,
																"src": "1569:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1551:28:17",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 3277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1580:4:17",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1551:33:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 3279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1551:44:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3280,
												"nodeType": "ExpressionStatement",
												"src": "1551:44:17"
											},
											{
												"expression": {
													"id": 3281,
													"name": "newItemId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3253,
													"src": "1615:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3246,
												"id": 3282,
												"nodeType": "Return",
												"src": "1608:16:17"
											}
										]
									},
									"functionSelector": "e524f2d5",
									"id": 3284,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3243,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3242,
												"name": "onlyGovernment",
												"nameLocations": [
													"1177:14:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3232,
												"src": "1177:14:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "1177:14:17"
										}
									],
									"name": "mintNFTForApprovedBus",
									"nameLocation": "1078:21:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3234,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1108:2:17",
												"nodeType": "VariableDeclaration",
												"scope": 3284,
												"src": "1100:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1100:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3236,
												"mutability": "mutable",
												"name": "tokenURI",
												"nameLocation": "1126:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3284,
												"src": "1112:22:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3235,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1112:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3238,
												"mutability": "mutable",
												"name": "busId",
												"nameLocation": "1144:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3284,
												"src": "1136:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3240,
												"mutability": "mutable",
												"name": "companyId",
												"nameLocation": "1159:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 3284,
												"src": "1151:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1099:70:17"
									},
									"returnParameters": {
										"id": 3246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3284,
												"src": "1201:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1201:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1200:9:17"
									},
									"scope": 3319,
									"src": "1069:563:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3304,
										"nodeType": "Block",
										"src": "1776:116:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 3292,
																	"name": "busIdToTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3198,
																	"src": "1795:14:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 3294,
																"indexExpression": {
																	"id": 3293,
																	"name": "busId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3286,
																	"src": "1810:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1795:21:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 3295,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1820:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1795:26:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f204e465420666f72207468697320627573",
															"id": 3297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1823:21:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7029c135594e6d4877bed3e9ac9287ea76f6c7066dd4013bb12b949a5a7828c1",
																"typeString": "literal_string \"No NFT for this bus\""
															},
															"value": "No NFT for this bus"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7029c135594e6d4877bed3e9ac9287ea76f6c7066dd4013bb12b949a5a7828c1",
																"typeString": "literal_string \"No NFT for this bus\""
															}
														],
														"id": 3291,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1787:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1787:58:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3299,
												"nodeType": "ExpressionStatement",
												"src": "1787:58:17"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 3300,
														"name": "busIdToTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3198,
														"src": "1863:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 3302,
													"indexExpression": {
														"id": 3301,
														"name": "busId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3286,
														"src": "1878:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1863:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3290,
												"id": 3303,
												"nodeType": "Return",
												"src": "1856:28:17"
											}
										]
									},
									"functionSelector": "8c8c3089",
									"id": 3305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNftForApprovedBus",
									"nameLocation": "1710:20:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3286,
												"mutability": "mutable",
												"name": "busId",
												"nameLocation": "1739:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3305,
												"src": "1731:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1731:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1730:15:17"
									},
									"returnParameters": {
										"id": 3290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3305,
												"src": "1767:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1767:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:9:17"
									},
									"scope": 3319,
									"src": "1701:191:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3317,
										"nodeType": "Block",
										"src": "2039:54:17",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3313,
														"name": "companyToTokenIds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3203,
														"src": "2057:17:17",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
															"typeString": "mapping(uint256 => uint256[] storage ref)"
														}
													},
													"id": 3315,
													"indexExpression": {
														"id": 3314,
														"name": "companyId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3307,
														"src": "2075:9:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2057:28:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"functionReturnParameters": 3312,
												"id": 3316,
												"nodeType": "Return",
												"src": "2050:35:17"
											}
										]
									},
									"functionSelector": "9bc60154",
									"id": 3318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNftsByCompany",
									"nameLocation": "1964:16:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3307,
												"mutability": "mutable",
												"name": "companyId",
												"nameLocation": "1989:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 3318,
												"src": "1981:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1981:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1980:19:17"
									},
									"returnParameters": {
										"id": 3312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3318,
												"src": "2021:16:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3309,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2021:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3310,
													"nodeType": "ArrayTypeName",
													"src": "2021:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2020:18:17"
									},
									"scope": 3319,
									"src": "1955:138:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3320,
							"src": "276:1824:17",
							"usedErrors": [
								79,
								84,
								93,
								98,
								103,
								110,
								115,
								120
							],
							"usedEvents": [
								19,
								26,
								1193,
								1202,
								1211
							]
						}
					],
					"src": "33:2069:17"
				},
				"id": 17
			}
		}
	}
}